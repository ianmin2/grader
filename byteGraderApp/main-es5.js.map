{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-router/app-router.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/assignments/assignment-browser/assignment-browser-attempts/assignment-browser-attempts.component.ts","webpack:///src/app/assignments/assignment-browser/assignment-browser-attempts/assignment-browser-attempts.component.html","webpack:///src/app/assignments/assignment-browser/assignment-browser-placeholder/assignment-browser-placeholder.component.ts","webpack:///src/app/assignments/assignment-browser/assignment-browser-placeholder/assignment-browser-placeholder.component.html","webpack:///src/app/assignments/assignment-browser/assignment-browser-rubric/assignment-browser-rubric.component.html","webpack:///src/app/assignments/assignment-browser/assignment-browser-rubric/assignment-browser-rubric.component.ts","webpack:///src/app/assignments/assignment-browser/assignment-browser.component.ts","webpack:///src/app/assignments/assignment-browser/assignment-browser.component.html","webpack:///src/app/assignments/assignment-generator/assignment-generator.component.ts","webpack:///src/app/assignments/assignment-generator/assignment-generator.component.html","webpack:///src/app/assignments/assignment-generator/method-manager/method-manager.component.ts","webpack:///src/app/assignments/assignment-generator/method-manager/method-manager.component.html","webpack:///src/app/assignments/assignment-generator/new-assignment/new-assignment.component.ts","webpack:///src/app/assignments/assignment-generator/new-assignment/new-assignment.component.html","webpack:///src/app/assignments/assignment-generator/output-manager/output-manager.component.ts","webpack:///src/app/assignments/assignment-generator/output-manager/output-manager.component.html","webpack:///src/app/assignments/assignment-generator/overview/overview.component.ts","webpack:///src/app/assignments/assignment-generator/overview/overview.component.html","webpack:///src/app/assignments/assignment-generator/path-manager/path-manager.component.ts","webpack:///src/app/assignments/assignment-generator/path-manager/path-manager.component.html","webpack:///src/app/assignments/assignment-generator/route-manager/route-manager.component.ts","webpack:///src/app/assignments/assignment-generator/route-manager/route-manager.component.html","webpack:///src/app/assignments/assignment-grading/assignment-grading.component.ts","webpack:///src/app/assignments/assignment-grading/assignment-grading.component.html","webpack:///src/app/assignments/assignment-placeholder/assignment-placeholder.component.ts","webpack:///src/app/assignments/assignment-placeholder/assignment-placeholder.component.html","webpack:///src/app/assignments/assignment-submission-browser/assignment-submission-browser.component.ts","webpack:///src/app/assignments/assignment-submission-browser/assignment-submission-browser.component.html","webpack:///src/app/assignments/assignment-submission/assignment-submission.component.ts","webpack:///src/app/assignments/assignment-submission/assignment-submission.component.html","webpack:///src/app/assignments/assignment-viewer/assignment-viewer.component.ts","webpack:///src/app/assignments/assignment-viewer/assignment-viewer.component.html","webpack:///src/app/assignments/assignments-menu/assignments-menu.component.ts","webpack:///src/app/assignments/assignments-menu/assignments-menu.component.html","webpack:///src/app/assignments/assignments.component.ts","webpack:///src/app/assignments/assignments.component.html","webpack:///src/app/grades/grades-browser/grades-browser.component.ts","webpack:///src/app/grades/grades-browser/grades-browser.component.html","webpack:///src/app/grades/grades-placeholder/grades-placeholder.component.ts","webpack:///src/app/grades/grades-placeholder/grades-placeholder.component.html","webpack:///src/app/grades/grades-reviewer/grades-reviewer.component.ts","webpack:///src/app/grades/grades-reviewer/grades-reviewer.component.html","webpack:///src/app/grades/grades-viewer/grades-viewer.component.ts","webpack:///src/app/grades/grades-viewer/grades-viewer.component.html","webpack:///src/app/grades/grades.component.ts","webpack:///src/app/grades/grades.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/header/menu-button/menu-button.component.ts","webpack:///src/app/header/menu-button/menu-button.component.html","webpack:///src/app/header/menu-dropdown/menu-dropdown.component.ts","webpack:///src/app/header/menu-dropdown/menu-dropdown.component.html","webpack:///src/app/header/menu-right/menu-right.component.ts","webpack:///src/app/header/menu-right/menu-right.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/services/auth-intercept.service.ts","webpack:///src/app/services/auth/auth-guard.service.ts","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/byte-grader-helper.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/static-data.service.ts","webpack:///src/app/services/stor/assignment.stor.service.ts","webpack:///src/app/services/stor/assignments.stor.service.ts","webpack:///src/app/services/stor/attempts.stor.service.ts","webpack:///src/app/services/stor/chainings.stor.service.ts","webpack:///src/app/services/stor/rules.stor.service.ts","webpack:///src/app/user-login/user-login.component.ts","webpack:///src/app/user-login/user-login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","graderRoutes","path","redirectTo","pathMatch","component","children","canActivate","AppRouterModule","forRoot","useHash","imports","AppComponent","title","name","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","prefix","storageType","declarations","providers","bootstrap","AssignmentBrowserAttemptsComponent","http","helpers","router","ngZone","attemptsUpdater","activatedRoute","helper","activeAssignmentId","snapshot","paramMap","get","initializeDataTable","attemptsSubscription","attemptsUpdated","subscribe","attempts","console","log","dataTable","DataTable","destroy","fetchAssignmentAttempts","$","document","on","d","stopPropagation","identifier","currentTarget","attr","targetUrl","applicationHost","window","open","doGrading","attempt_id","dta","response","alert","data","message","err","commands","pars","run","navigate","scrollY","getPageHeight","caption","columns","className","render","type","row","stringify","sortable","undefined","json","percentage","attempt_assignment","assignment_name","assignment_owner_name","dateify","dom","select","responsive","altEditor","buttons","extend","text","action","dt","node","config","onAddRow","datatable","rowdata","success","error","ajax","url","onDeleteRow","onEditRow","that","s","rowDataArray","adata","rows","selected","random_id","filter","each","i","val","numFilesQueued","prop","getBase64","filecontent","attempt_name","attempt_student_identifier","attempt_main_path","attempt_submission_time","attempt_grading_time","attempt_grade_breakdown","attempt_grade_complete","updated_at","postLocal","table","command","dir","hide","nativeElement","formOptions","getAttempts","resetAttempts","toString","unsubscribe","AssignmentBrowserPlaceholderComponent","assignmentsUpdater","assignmentsSubscription","assignmentsUpdated","assignments","fetchAssignments","assignmentData","JSON","parse","replace","state","assignment_id","str","assignment_owner","assignment_due","assignment_summary","assignment_notes","assignment_created","assignment_last_modified","getAssignments","resetAssignments","AssignmentBrowserRubricComponent","assignmentUpdater","nav","getCurrentNavigation","activeAssignment","extras","assignmentSubscription","assignmentUpdated","asg","history","fetchAssignmentById","assignmentdata","routes","map","rd","rule_grading","addAssignment","navigateByUrl","fetchAssignmentRoutes","routeAssignmentData","assignmentRoutes","owned","registerRoutes","assignmentId","reject","getRules","AssignmentBrowserComponent","AssignmentGeneratorComponent","MethodManagerComponent","NewAssignmentComponent","calendar","isDisabled","date","current","month","isWeekend","getWeekday","getUsers","users","newAssignmentForm","required","minLength","value","reset","saveAssignment","OutputManagerComponent","todos","category","completed","compdsleteder","evt","copy","noDrop","previousContainer","container","previousIndex","currentIndex","onDrop","OverviewComponent","rulesUpdater","fetchRoutes","rulesSubscription","rulesUpdateWatcher","rules","colorize","jsonify","checked","rule_id","rule_description","rule_expected_data","rule_expected_data_type","rule_expected_status_code","rule_http_verb","rule_method","rule_name","rule_path","resetRules","PathManagerComponent","gradingSchema","ruleBin","userProfile","getUserInfo","userAssignments","assignment","setActiveAssignment","assgnmnt","idxs","split","item_position","parseInt","removeParentRules","confirm","parent_rules","item_idx","item_id","default_id","gradingRules","ids","parent_rule","prompt","a","b","isNaN","indexOf","forEach","push","idx","lastIndexOf","fetchAssignmentRules","setGradingRules","bin","splice","clone","sure","rule_chaining","chaining_type","chaining_assignment","chaining_rules","addChaining","resetChainingUI","bundledObj","props","Array","isArray","Object","vl","RouteManagerComponent","staticData","available_positions","available_match_positions","key","alternative","match","no_match","weight","matches","gradingSubFormArray","mimeTypes","MimeTypes","headers","Headers","statusCodes","StatusCodes","newRouteForm","rule_assignment","rule_headers","rule_parameters","verb","gradingForm","status_code","mime_type","gradingControls","controls","grading_keys","gradingKey","gradingSubMatchControls","gradingSubMatchControlValues","ruleHeaderValues","ruleParameterValues","post","resp","formDesignation","toLowerCase","keyValueFormGroup","join","gradingPosition","gradingSubFormGroup","saveRoute","newValuePair","newGradingCriteria","AssignmentGradingComponent","AssignmentPlaceholderComponent","AssignmentSubmissionBrowserComponent","AssignmentSubmissionComponent","newAttemptForm","addAttempt","saveAttempt","AssignmentViewerComponent","chainingsUpdater","chainingsSubscription","chainingsUpdateWatcher","chainings","chaining_id","getChaining","resetChainings","AssignmentsMenuComponent","AssignmentsComponent","GradesBrowserComponent","attemptUpdater","fetchAttempts","possible","total","FileNode","FileFlatNode","expandable","filename","level","RuleNode","RuleFlatNode","TREE_DATA","Applications","Calendar","Chrome","Webstorm","Documents","angular","src","compiler","core","material2","button","checkbox","input","Downloads","October","November","Tutorial","Pictures","Contents","Sun","Woods","FileAndRuleDatabase","dataChange","dataRuleChange","initialize","dataObject","buildFileTree","next","TREE_RULE_DATA","dataRuleObject","dataRule","buildRuleTree","obj","parentId","reduce","accumulator","concat","info","ruleName","ruleData","GradesPlaceholderComponent","database","expandedNodeSet","Set","dragging","expandDelay","expandedRuleNodeSet","transformer","_getLevel","_isExpandable","_getChildren","hasChild","_","_nodeData","transformerRule","_getRuleLevel","_isRuleExpandable","_getRuleChildren","hasRuleChild","dataStorObj","treeFlattener","treeControl","dataSource","rebuildTreeForData","treeRuleFlattener","treeRuleControl","dataRuleSource","rememberExpandedTreeNodes","result","addExpandedChildren","expanded","has","child","rememberRuleExpandedTreeNodes","addExpandedRuleChildren","event","isPointerOverContainer","visibleNodes","changedData","findNodeSiblings","arr","subResult","item","siblings","siblingIndex","findIndex","n","nodeToInsert","nodeAtDest","relativeIndex","nodeAtDestFlatNode","dataNodes","find","parent","getParentNode","parentIndex","newSiblings","visibleRuleNodes","getRuleParentNode","rebuildRuleTreeForData","clearTimeout","expandTimeout","setTimeout","expand","forgetMissingExpandedNodes","expandNodesById","from","forgetRuleMissingExpandedNodes","isExpandable","isExpanded","add","nodeId","flatNodes","length","idSet","currentLevel","startIndex","currentNode","kys","cm","cr","cnvRuleChild","ths","cum","cur","cnvRule","initializeRule","drop","GradesReviewerComponent","GradesViewerComponent","GradesComponent","HeaderComponent","selectedPath","MenuButtonComponent","MenuDropdownComponent","customClass","subMenuItems","isAlignedRight","rgx","RegExp","itm","v","navigationPath","navRoute","navigateTo","MenuRightComponent","searchString","target","preventDefault","onInputChange","onSearchClick","NotFoundComponent","AuthInterceptService","_localStorage","authToken","handle","modifiedRequest","set","providedIn","AuthGuardService","auth","isAuthenticated","AuthService","jwtHelper","token","isTokenExpired","ByteGraderHelperService","jsonPipe","pipe","elementID","domElement","getElementById","ideal_height","clientHeight","onclone","style","visibility","canvas","imgWidth","imgHeight","height","width","contentDataURL","toDataURL","pdf","position","addImage","save","method","transform","color","body","html","documentElement","Math","min","scrollHeight","offsetHeight","userToken","atob","HttpService","tableNames","params","all","tableName","fieldData","userCredentials","userData","Date","toISOString","isIdAssignment","grouped","chaining","attempt","referenceObject","StaticDataService","mime_types","status_codes","slice","AssignmentStoreService","current_assignments","registerChanges","AssignmentsStoreService","AttemptStoreService","current_attempts","ChainingsStoreService","current_chainings","getChainings","rule","RulesStoreService","current_rules","UserLoginComponent","authenticate","loginForm","username","password","registrationForm","email","password_2","location","href","newUser","addUser","setAuthCrededentials","login","loginUser","registerUser","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AssignmentSubmissionBrowserComponent } from './../assignments/assignment-submission-browser/assignment-submission-browser.component';\nimport { AssignmentBrowserPlaceholderComponent } from './../assignments/assignment-browser/assignment-browser-placeholder/assignment-browser-placeholder.component';\nimport { AssignmentBrowserRubricComponent } from './../assignments/assignment-browser/assignment-browser-rubric/assignment-browser-rubric.component';\nimport { AuthGuardService } from './../services/auth/auth-guard.service';\nimport { UserLoginComponent } from './../user-login/user-login.component';\nimport { NewAssignmentComponent } from './../assignments/assignment-generator/new-assignment/new-assignment.component';\nimport { OverviewComponent } from './../assignments/assignment-generator/overview/overview.component';\nimport { OutputManagerComponent } from './../assignments/assignment-generator/output-manager/output-manager.component';\nimport { MethodManagerComponent } from './../assignments/assignment-generator/method-manager/method-manager.component';\nimport { PathManagerComponent } from './../assignments/assignment-generator/path-manager/path-manager.component';\nimport { RouteManagerComponent } from './../assignments/assignment-generator/route-manager/route-manager.component';\nimport { GradesBrowserComponent } from './../grades/grades-browser/grades-browser.component';\nimport { GradesViewerComponent } from './../grades/grades-viewer/grades-viewer.component';\nimport { GradesReviewerComponent } from './../grades/grades-reviewer/grades-reviewer.component';\nimport { GradesPlaceholderComponent } from './../grades/grades-placeholder/grades-placeholder.component';\nimport { GradesComponent } from './../grades/grades.component';\nimport { AssignmentViewerComponent as RuleChainingBrowser } from './../assignments/assignment-viewer/assignment-viewer.component';\nimport { AssignmentGeneratorComponent } from './../assignments/assignment-generator/assignment-generator.component';\nimport { AssignmentPlaceholderComponent } from './../assignments/assignment-placeholder/assignment-placeholder.component';\nimport { AssignmentsComponent } from './../assignments/assignments.component';\nimport { AssignmentSubmissionComponent } from './../assignments/assignment-submission/assignment-submission.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n// import { CommonModule } from '@angular/common';\nimport { NotFoundComponent } from '../not-found/not-found.component';\nimport { AssignmentBrowserComponent } from '../assignments/assignment-browser/assignment-browser.component';\nimport { AssignmentGradingComponent } from '../assignments/assignment-grading/assignment-grading.component';\nimport { AssignmentBrowserAttemptsComponent } from '../assignments/assignment-browser/assignment-browser-attempts/assignment-browser-attempts.component';\n\n\nconst graderRoutes: Routes = [\n  { path: '', redirectTo: \"/assignments\", pathMatch: \"full\"},\n  {path : 'auth', component: UserLoginComponent},\n  { path: 'submissions', component: AssignmentSubmissionComponent },\n  { path: 'assignments', component: AssignmentsComponent,\n    children : [\n      { path: '', component: AssignmentPlaceholderComponent, pathMatch: \"full\"},\n      { path: 'new', component: NewAssignmentComponent },\n      { path : 'submit', component: AssignmentSubmissionComponent },\n      { path: 'generator', component: AssignmentGeneratorComponent,\n        children:\n        [\n          { path: 'grading', component: AssignmentGradingComponent},\n          { path: 'routes',  component: RouteManagerComponent},\n          { path: 'chaining',   component: PathManagerComponent},\n          { path: 'methods', component: MethodManagerComponent},\n          { path: 'outputs', component: OutputManagerComponent},\n          { path: 'review', component: OverviewComponent },\n          { path: '**', component: NotFoundComponent}\n        ]\n      },\n      { path: 'browse', component : AssignmentBrowserComponent,\n        children:\n        [\n          { path : '', component: AssignmentBrowserPlaceholderComponent, pathMatch: \"full\", canActivate : []},\n          { path : 'rubric/:id', component: AssignmentBrowserRubricComponent, pathMatch: \"full\" },\n          {\n            path: \"attempts/:id\",\n            component: AssignmentBrowserAttemptsComponent,\n            pathMatch: \"full\"\n          },\n          { path : 'submissions', component: AssignmentSubmissionBrowserComponent },\n          { path : \"chainings\", component: RuleChainingBrowser },\n          // { path: ':id', component: AssignmentBrowserRubricComponent},\n          // { path: ':id/edit', component:AssignmentBrowserRubricComponent}\n          { path: '**', component: NotFoundComponent}\n        ]\n      },\n      // { path: ':id', component: AssignmentViewerComponent},\n      // { path: ':id/edit', component: AssignmentViewerComponent},\n      { path: '**', component: NotFoundComponent}\n    ],\n    canActivate : [AuthGuardService]\n  },\n  { path: 'grades', component: GradesComponent,\n    children : [\n      { path: '', component: GradesBrowserComponent, pathMatch: \"full\"},\n      {path: 'review', component: GradesReviewerComponent,\n      children:\n        [\n          { path: ':id', component: GradesViewerComponent},\n        ]\n      },\n      { path : 'browse', component: GradesBrowserComponent,\n        children : [\n          { path: ':id', component: GradesViewerComponent},\n          { path: ':id/edit', component: GradesViewerComponent}\n        ]\n      },\n      // { path: ':id', component: GradesViewerComponent},\n      // { path: ':id/edit', component: GradesViewerComponent},\n      { path: '**', component: NotFoundComponent}\n    ],\n    canActivate: [AuthGuardService]\n  },\n  { path: '**', component: NotFoundComponent}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(graderRoutes, {useHash: true})],\n  exports: [RouterModule]\n})\n\nexport class AppRouterModule { }\n","import { Component } from '@angular/core';\n  import { from } from 'rxjs';\n\n@Component({\n  selector: 'byte-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"ByteGrader\";\n name=\"\";\n}\n","<app-header title=\"Byte Grader\"></app-header>\n\n<div class=\"container-fluid padding \">\n    <router-outlet></router-outlet>\n</div>\n\n<!-- <div class=\"container-fluid padding \">\n    <input type=\"text\" [(ngModel)]=\"name\">\n    <h3>{{name}}</h3>\n</div> -->","import { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\nimport { from } from 'rxjs';\nimport { AuthService } from './services/auth/auth.service';\nimport { AuthGuardService } from './services/auth/auth-guard.service';\nimport { AuthInterceptService } from './services/auth-intercept.service';\nimport { AppRouterModule } from './app-router/app-router.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgModule, InjectionToken } from '@angular/core';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { LocalStorageModule, LocalStorageService } from 'angular-2-local-storage';\n\n//@ APPLICATION COMPONENTS\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MenuDropdownComponent } from './header/menu-dropdown/menu-dropdown.component';\nimport { MenuButtonComponent } from './header/menu-button/menu-button.component';\nimport { MenuRightComponent } from './header/menu-right/menu-right.component';\nimport { AssignmentsComponent } from './assignments/assignments.component';\nimport { GradesComponent } from './grades/grades.component';\nimport { AssignmentGradingComponent } from './assignments/assignment-grading/assignment-grading.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AssignmentPlaceholderComponent } from './assignments/assignment-placeholder/assignment-placeholder.component';\nimport { AssignmentGeneratorComponent } from './assignments/assignment-generator/assignment-generator.component';\nimport { AssignmentBrowserComponent } from './assignments/assignment-browser/assignment-browser.component';\nimport { AssignmentViewerComponent } from './assignments/assignment-viewer/assignment-viewer.component';\nimport { GradesBrowserComponent } from './grades/grades-browser/grades-browser.component';\nimport { GradesPlaceholderComponent } from './grades/grades-placeholder/grades-placeholder.component';\nimport { GradesViewerComponent } from './grades/grades-viewer/grades-viewer.component';\nimport { GradesReviewerComponent } from './grades/grades-reviewer/grades-reviewer.component';\nimport { AssignmentsMenuComponent } from './assignments/assignments-menu/assignments-menu.component';\nimport { RouteManagerComponent } from './assignments/assignment-generator/route-manager/route-manager.component';\nimport { PathManagerComponent } from './assignments/assignment-generator/path-manager/path-manager.component';\nimport { MethodManagerComponent } from './assignments/assignment-generator/method-manager/method-manager.component';\nimport { OutputManagerComponent } from './assignments/assignment-generator/output-manager/output-manager.component';\nimport { OverviewComponent } from './assignments/assignment-generator/overview/overview.component';\nimport { NewAssignmentComponent } from './assignments/assignment-generator/new-assignment/new-assignment.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { AssignmentBrowserRubricComponent } from './assignments/assignment-browser/assignment-browser-rubric/assignment-browser-rubric.component';\nimport { AssignmentBrowserPlaceholderComponent } from './assignments/assignment-browser/assignment-browser-placeholder/assignment-browser-placeholder.component';\nimport { AssignmentSubmissionComponent } from './assignments/assignment-submission/assignment-submission.component';\nimport { AssignmentSubmissionBrowserComponent } from './assignments/assignment-submission-browser/assignment-submission-browser.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatTreeModule } from '@angular/material/tree';\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    MenuDropdownComponent,\n    MenuButtonComponent,\n    MenuRightComponent,\n    AssignmentsComponent,\n    GradesComponent,\n    AssignmentGradingComponent,\n    NotFoundComponent,\n    AssignmentPlaceholderComponent,\n    AssignmentGeneratorComponent,\n    AssignmentBrowserComponent,\n    AssignmentViewerComponent,\n    GradesBrowserComponent,\n    GradesPlaceholderComponent,\n    GradesViewerComponent,\n    GradesReviewerComponent,\n    AssignmentsMenuComponent,\n    RouteManagerComponent,\n    PathManagerComponent,\n    MethodManagerComponent,\n    OutputManagerComponent,\n    OverviewComponent,\n    NewAssignmentComponent,\n    UserLoginComponent,\n    AssignmentBrowserRubricComponent,\n    AssignmentBrowserPlaceholderComponent,\n    AssignmentSubmissionComponent,\n    AssignmentSubmissionBrowserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    LocalStorageModule.forRoot({\n      prefix: 'byteGrader',\n      storageType: 'localStorage'\n    }),\n    DataTablesModule,\n    DragDropModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatTreeModule,\n    MatIconModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptService, multi: true }\n    , AuthGuardService\n    ,AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n }\n","import { Attempts } from './../../../models/Attempts.model';\nimport { Rule } from '../../../models/Rule.model';\nimport { HttpService } from '../../../services/http.service';\nimport { Assignment } from '../../../models/Assignment.model';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ByteGraderHelperService } from 'src/app/services/byte-grader-helper.service';\nimport { AssignmentStoreService } from '../../../services/stor/assignment.stor.service'\nimport { Subscription } from 'rxjs';\nimport { GraderResponse } from 'src/app/models/Response.model';\nimport { AttemptStoreService } from 'src/app/services/stor/attempts.stor.service';\nimport { ViewChild } from '@angular/core';\n\n\n@Component({\n  selector: 'app-assignment-browser-attempts',\n  templateUrl: './assignment-browser-attempts.component.html',\n  styleUrls: ['./assignment-browser-attempts.component.css']\n})\nexport class AssignmentBrowserAttemptsComponent implements OnInit {\n\nassignmentSubscription : Subscription;\n\ndataTable: any;\n\nhelper :ByteGraderHelperService;\n\n\nactiveAssignmentId: any;\n\nattemptsSubscription : Subscription;\n\n@ViewChild('assignmentBrowseAttempts', {static: true}) table;\n\npublic attempts:Attempts[];\n\nconstructor(private http: HttpService, private helpers: ByteGraderHelperService, private router: Router, private ngZone: NgZone,  private attemptsUpdater: AttemptStoreService, private activatedRoute: ActivatedRoute) {\n  // (window as any).pdfMake.vfs = (window as any).pdfFonts.pdfMake.vfs;\n  // console.dir(window)\n}\n\nngOnInit(): void {\n\n  this.helper = this.helpers;\n\n  this.activeAssignmentId =   this.activatedRoute.snapshot.paramMap.get(\"id\")\n\n  //  this.http.countAllRecords().then(console.dir)\n\n  this.initializeDataTable();\n\n  this.attemptsSubscription = this.attemptsUpdater.attemptsUpdated.subscribe((attempts: Attempts[]) => {\n    console.log(`\\n\\nReceived new data .... redrawing table!`)\n    this.attempts = attempts;\n    this.dataTable.DataTable().destroy();;\n    this.initializeDataTable();\n  });\n\n  this.fetchAssignmentAttempts();\n\n  //@ Attempt to get the simple report\n  $(document).on('click','.simpleReport', (d) =>\n  {\n    d.stopPropagation()\n    let identifier = $(d.currentTarget).attr('id');\n\n    //@ Navigate to the relevant route \n    let targetUrl = `${this.http.applicationHost}?command=get&table=gradereport&attempt_id=${identifier}`;   \n    window.open(targetUrl, \"_blank\");  \n\n  });\n\n  $(document).on('click','.complexReport', (d) =>\n  {\n    d.stopPropagation();\n    let identifier = $(d.currentTarget).attr('id');\n\n    //@ Navigate to the relevant route \n    let targetUrl = `${this.http.applicationHost}?command=get&table=gradereport&attempt_id=${identifier}&technical=true`;   \n    window.open(targetUrl, \"_blank\");  \n\n  });\n\n  //@ Attempt an assignment re-grading\n  $(document).on('click','.gradeAssignment', (d) =>\n  {\n    d.stopPropagation();\n    let identifier = $(d.currentTarget).attr('id');\n    this.http.doGrading({ attempt_id : identifier }).subscribe((dta: GraderResponse)=> {\n      console.log(`Grading invoked for the attempt #${identifier}`);\n      console.log(`Assignment Grading Invokation response`,dta);\n      if(dta.response == 200){\n       alert(dta.data.message || `Assignment attempt grading invoked`);\n       this.fetchAssignmentAttempts();\n      } \n      else\n      {\n        alert(`Something went wong: ${dta?.data?.message}`);\n      }       \n    },err=> {\n      alert(err.message);\n    });\n\n  });\n\n}\n\nprivate navigate(commands: any[], pars: any = {}): void {\n  this.ngZone.run(() => this.router.navigate(commands,pars)).then();\n}\n\nformOptions(){\n  return {\n    scrollY: this.helpers.getPageHeight(),\n    data: this.attempts,\n    caption: `Submissions for Assignent #${this.activeAssignmentId}`,\n    columns: [\n      {title: 'ID', data: 'attempt_id'},\n      {title: 'Name', data: 'attempt_name', className: 'editable',\n        render:  (data, type, row) => this.helpers.stringify(data,'teal')\n      },\n      {title: 'Submitor\\'s ID', data: 'attempt_student_identifier', className: 'editable', sortable: false,\n        render:  (data, type, row) => this.helpers.stringify(data,undefined)\n      },\n      {title: 'App URL', data: 'attempt_main_path', className: 'editable', sortable: false,\n        render:  (data, type, row) => this.helpers.stringify(data,undefined)\n      },\n      {\n        title: 'score',\n        data: 'attempt_grade',\n        render:  (data, type, row) => \n        {\n          data = this.helper.json(data);\n          return this.helpers.stringify(`${data.percentage}%`,'teal');\n        }\n      },\n      {title: 'Assignment', data: 'attempt_assignment',\n        render:  (data, type, row) => this.helpers.stringify(`<code>#${row.attempt_assignment}</code> ${row.assignment_name} <sub>by ${row.assignment_owner_name}</sub>`,'blue')\n      },\n     \n      {\n        title: 'Grade Report',\n        sortable: false,\n        data: null,\n        render:  (data,type,row) => { \n          return  `\n            <button class='btn btn-primary simpleReport' id=\"${row.attempt_id}\"> Simple </button> \n            &nbsp;&nbsp;\n            <button class='btn btn-danger complexReport' id=\"${row.attempt_id}\"> Detailed </button>\n          ` ;\n        }\n      },\n      {\n        title: 'Grade Individualy',\n        sortable: false,\n        data: null,\n        render:  (data,type,row) => `<button class='btn btn-warning gradeAssignment' id=\"${row.attempt_id}\"> Grade Attempt </button>`\n      },\n      {\n        title: 'Submitted',\n        data: 'attempt_submission_time', className: 'editable',\n        render:  (data, type, row) => this.helpers.stringify(data,'crimson')\n      },\n      {\n        title: 'Created', data: 'created_at',\n        render:  (data, type, row) => this.helpers.dateify(data,'green')\n      },\n      {\n        title: 'Last Graded',\n        data: 'updated_at',\n        render:  (data, type, row) => this.helpers.dateify(data,undefined)\n      },\n    ]\n    ,dom: 'Bfrtip',        // Needs button container\n    select: true, //'single',\n    responsive: true,\n    altEditor: true,     // Enable altEditor\n    buttons: [\n       'excel',\n       'pdf',\n       {\n        extend: 'selected', // Bind to Selected row\n        text: 'Edit',\n        name: 'edit'        // do not change name\n    },\n    // {\n    //     extend: 'selected', // Bind to Selected row\n    //     text: 'Delete',\n    //     name: 'delete'      // do not change name\n    // },\n    {\n        text: 'Refresh',\n        action:  (e, dt, node, config) => {\n          this.fetchAssignmentAttempts();\n        }\n    }\n    ],\n    onAddRow: function(datatable, rowdata, success, error) {\n        $.ajax({\n            // a tipycal url would be / with type='PUT'\n            url: `/`,\n            type: 'GET',\n            data: rowdata,\n            success: success,\n            error: error\n        });\n    },\n    onDeleteRow: function(datatable, rowdata, success, error) {\n        $.ajax({\n            // a tipycal url would be /{id} with type='DELETE'\n            url: `/`,\n            type: 'GET',\n            data: rowdata,\n            success: success,\n            error: error\n        });\n    },\n    onEditRow: (datatable, rowdata, success, error) => {\n\n      var that = datatable;\n          var dt = datatable.s.dt;\n\n          // Complete new row data\n          var rowDataArray = {};\n\n          var adata = dt.rows({\n              selected: true\n          });\n\n          // Getting the inputs from the edit-modal\n          $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type!=\"file\"]').each(function(i) {\n              rowDataArray[$(this).attr('id')] = $(this).val();\n          });\n\n          //Getting the textArea from the modal\n          $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter('textarea').each(function(i) {\n              rowDataArray[$(this).attr('id')] = $(this).val();\n          });\n\n          //Getting Files from the modal\n          var numFilesQueued = 0;\n          $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type=\"file\"]').each(function(i) {\n              if ($(this).prop('files')[0]) {\n                  ++numFilesQueued;\n                  that.getBase64($(this).prop('files')[0], function(filecontent) {\n                      rowDataArray[$(this).attr('id')] = filecontent;\n                      --numFilesQueued;\n                  });\n              }\n          });\n\n          // Getting the checkbox from the modal\n          $('form[name=\"altEditor-edit-form-' +datatable.random_id + '\"] *').filter(':input[type=\"checkbox\"]').each(function(i) {\n              rowDataArray[$(this).attr('id')] = i; // this?.checked;\n          });\n\n\n        const {\n          attempt_id ,\n          attempt_name,\n          attempt_student_identifier,\n          attempt_main_path,\n          attempt_submission_time,\n          attempt_grading_time,\n          attempt_grade_breakdown,\n          attempt_grade_complete,\n          attempt_assignment,\n          updated_at\n        } = <Attempts>rowDataArray;\n\n          this.http.postLocal({\n            table : 'attempt',\n            command : 'update',\n            attempt_id ,\n          attempt_name,\n          attempt_student_identifier,\n          attempt_main_path,\n          attempt_submission_time,\n          attempt_grading_time,\n          attempt_grade_breakdown,\n          attempt_grade_complete,\n          attempt_assignment,\n          updated_at\n          }).subscribe((d: GraderResponse)=> {\n            if(d.response == 200) this.fetchAssignmentAttempts();\n              console.log(`Assignment Submission Data update attempted!\\nProof:`)\n              console.dir(d)\n          },err=> {\n            console.error();\n          }, ()=> {\n\n            $('.modal,.modal-backdrop').hide();\n\n          })\n\n          /*\n            const { attempt_id ,\n              attempt_name,\n              attempt_student_identifier,\n              attempt_main_path,\n              attempt_submission_time,\n              attempt_grading_time,\n              attempt_grade_breakdown,\n              attempt_grade_complete,\n              attempt_assignment,\n              created_at,\n              updated_at } = rowdata;\n\n            this.http.getLocal({\n              table : 'attempts',\n              command : 'update',\n              attempt_id ,\n              attempt_name,\n              attempt_student_identifier,\n              attempt_main_path,\n              attempt_submission_time,\n              attempt_grading_time,\n              attempt_grade_breakdown,\n              attempt_grade_complete,\n              attempt_assignment,\n              created_at,\n              updated_at\n            }).subscribe((d: GraderResponse)=> {\n                console.log(`Assignment Data update attempted!\\nProof:`)\n                console.dir(d)\n            })\n          */\n\n    }\n  };\n}\n\ninitializeDataTable() {\n  this.dataTable = $(this.table.nativeElement);\n  // console.dir(this.dataTable);\n  this.dataTable.DataTable(this.formOptions());\n}\n\nfetchAssignmentAttempts(){\n  this.http.getAttempts(null, this.activeAssignmentId).subscribe((d: GraderResponse)=> {\n    if(d.response == 200){\n      // console.dir(d.data.message);\n      this.attemptsUpdater.resetAttempts(<Attempts[]>d.data.message);\n     }\n     else\n     {\n       alert(`${d.data.message.toString()}`);\n     }\n  }, err => {});\n}\n\n\nngOnDestroy(){\n  this.attemptsSubscription.unsubscribe();\n}\n\n\n}\n","<p>Viewing Assignent #<code>{{activeAssignmentId}}</code> Attempts</p>\n<table #assignmentBrowseAttempts class=\"display table table-responsive table-sm nowrap col-12\" style=\"width:100%\">\n</table>","import { Router } from '@angular/router';\nimport { ByteGraderHelperService } from './../../../services/byte-grader-helper.service';\nimport { Assignment } from './../../../models/Assignment.model';\nimport { HttpService } from './../../../services/http.service';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { AssignmentsStoreService } from 'src/app/services/stor/assignments.stor.service';\nimport { Subscription } from 'rxjs';\nimport { GraderResponse } from 'src/app/models/Response.model';\n\ndeclare var $;\n@Component({\n  selector: 'app-assignment-browser-placeholder',\n  templateUrl: './assignment-browser-placeholder.component.html',\n  styleUrls: ['./assignment-browser-placeholder.component.css']\n})\nexport class AssignmentBrowserPlaceholderComponent implements OnInit {\n\n  dataTable: any;\n\n  assignmentsSubscription : Subscription;\n\n  @ViewChild('assignmentBrowser', {static: true}) table;\n\n  public assignments:Assignment[];\n\n  constructor(private http: HttpService, private helpers: ByteGraderHelperService, private router: Router, private ngZone: NgZone,  private assignmentsUpdater: AssignmentsStoreService) {\n    // (window as any).pdfMake.vfs = (window as any).pdfFonts.pdfMake.vfs;\n    // console.dir(window)\n\n  }\n\n  ngOnInit(): void {\n\n    //  this.http.countAllRecords().then(console.dir)\n\n    this.initializeDataTable();\n\n    this.assignmentsSubscription = this.assignmentsUpdater.assignmentsUpdated.subscribe((assignments: Assignment[]) => {\n      console.log(`\\n\\nReceived new data .... redrawing table!`)\n      this.assignments = assignments;\n      this.dataTable.DataTable().destroy();;\n      this.initializeDataTable();\n    });\n\n    this.fetchAssignments();\n\n    $(document).on('click','.openAssignment', (d) =>\n    {\n      d.stopPropagation()\n      let identifier = $(d.currentTarget).attr('id');\n      let assignmentData = JSON.parse(($(d.currentTarget).attr('data')||'{}').replace(/'/ig,'\"').replace(/&apos;/ig,\"'\"));\n      \n      this.navigate([`/assignments/browse/rubric/${identifier}`], { state: assignmentData });\n      // /assignments/browse/rubric/${identifier}\n\n    });\n\n\n    $(document).on('click','.openAssignmentSubmissions', (d) =>\n    {\n      d.stopPropagation()\n      let identifier = $(d.currentTarget).attr('id');\n      let assignmentData = JSON.parse(($(d.currentTarget).attr('data')||'{}').replace(/'/ig,'\"').replace(/&apos;/ig,\"'\"));\n      \n      this.navigate([`/assignments/browse/attempts/${identifier}`], { state: assignmentData });\n      // /assignments/browse/rubric/${identifier}\n\n    });\n\n    $(document).on('click','.openAttempts', (d) =>\n    {\n      d.stopPropagation()\n      let assignmentData = JSON.parse(($(d.currentTarget).attr('data')||'{}').replace(/'/ig,'\"').replace(/&apos;/ig,\"'\"));\n      this.navigate([`/assignments/browse/attempts/${assignmentData.assignment_id}`], { state: assignmentData });\n      // /assignments/browse/rubric/${identifier}\n\n    });\n\n    $(document).on('click','.gradeAssignment', (d) =>\n    {\n      d.stopPropagation();\n      alert(`Attempting to grade assignments`);\n      let assignmentData = JSON.parse(($(d.currentTarget).attr('data')||'{}').replace(/'/ig,'\"').replace(/&apos;/ig,\"'\"));\n      this.http.doGrading({ assignment_id : assignmentData.assignment_id }).subscribe((dta: GraderResponse)=> {\n        console.log(`Grading invoked for the assignment #${assignmentData.assignment_id}`)\n        console.log(`Assignment Grading Invokation response`,dta);\n        if(dta.response == 200){\n         alert(dta.data.message || `Assignment grading invoked`);\n        } \n        else\n        {\n          alert(`Something went wong: ${dta?.data?.message}`);\n        }       \n      },err=> {\n        alert(err.message);\n      });\n\n    });\n\n  }\n\n  private navigate(commands: any[], pars: any = {}): void {\n    this.ngZone.run(() => this.router.navigate(commands,pars)).then();\n  }\n\n  formOptions(){\n    return {\n      scrollY: this.helpers.getPageHeight(),\n      data: this.assignments,\n      columns: [\n        {title: 'ID', data: 'assignment_id'},\n        {title: 'Name', data: 'assignment_name', className: 'editable',\n          render:  (data, type, row) => this.helpers.stringify(data,'teal')\n        },\n        {title: 'Summary', data: 'assignment_summary', className: 'editable', sortable: false,\n          render:  (data, type, row) => this.helpers.stringify(data,undefined)\n        },\n\n        {\n          title: 'Grade All',\n          sortable: false,\n          data: null,\n          render:  (data,type,row) => `<button class='btn btn-success gradeAssignment' data=\"${this.helpers.str(row).replace(/'/ig,'&apos;').replace(/\"/ig,\"'\")}\"> Grade All Attempts </button>`\n        },\n        {\n          title: 'Due',\n          data: 'assignment_due', className: 'editable',\n          render:  (data, type, row) => this.helpers.dateify(data,'crimson')\n        },\n        {\n          title: 'Created', data: 'assignment_created',\n          render:  (data, type, row) => this.helpers.dateify(data,'green')\n        },         \n        {\n          title: 'Last Modified',\n          data: 'assignment_last_modified',\n          render:  (data, type, row) => this.helpers.dateify(data,undefined)\n        },\n        {\n          title: '',\n          sortable: false,\n          data: null,\n          render: (data,type,row) => `<button class='btn btn-primary openAssignment' id=\"${row.assignment_id}\" data=\"${this.helpers.str(row).replace(/'/ig,'&apos;').replace(/\"/ig,\"'\")}\"> View Rubric </button>`\n        },  \n        {\n          title: '',\n          sortable: false,\n          data: null,\n          render: (data,type,row) => `<button class='btn btn-primary openAssignmentSubmissions' id=\"${row.assignment_id}\" data=\"${this.helpers.str(row).replace(/'/ig,'&apos;').replace(/\"/ig,\"'\")}\"> View Assignment Submissions </button>`\n        },       \n        {title: 'Notes', data: 'assignment_notes', className: 'editable', sortable: false,\n          render:  (data, type, row) => this.helpers.stringify(data,undefined)\n        },\n        {title: 'Owner', data: 'assignment_owner',\n          render:  (data, type, row) => this.helpers.stringify(row.assignment_owner_name,'blue')\n        }, \n        \n      ]\n      ,dom: 'Bfrtip',        // Needs button container\n      select: true, //'single',\n      responsive: true,\n      altEditor: true,     // Enable altEditor\n      buttons: [\n         'excel',\n         'pdf',\n         {\n          extend: 'selected', // Bind to Selected row\n          text: 'Edit',\n          name: 'edit'        // do not change name\n      },\n      // {\n      //     extend: 'selected', // Bind to Selected row\n      //     text: 'Delete',\n      //     name: 'delete'      // do not change name\n      // },\n      {\n          text: 'Refresh',\n          action:  (e, dt, node, config) => {\n            this.fetchAssignments();\n          }\n      }\n      ],\n      onAddRow: function(datatable, rowdata, success, error) {\n          $.ajax({\n              // a tipycal url would be / with type='PUT'\n              url: `/`,\n              type: 'GET',\n              data: rowdata,\n              success: success,\n              error: error\n          });\n      },\n      onDeleteRow: function(datatable, rowdata, success, error) {\n          $.ajax({\n              // a tipycal url would be /{id} with type='DELETE'\n              url: `/`,\n              type: 'GET',\n              data: rowdata,\n              success: success,\n              error: error\n          });\n      },\n      onEditRow: (datatable, rowdata, success, error) => {\n\n        var that = datatable;\n            var dt = datatable.s.dt;\n\n            // Complete new row data\n            var rowDataArray = {};\n\n            var adata = dt.rows({\n                selected: true\n            });\n\n            // Getting the inputs from the edit-modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type!=\"file\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting the textArea from the modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter('textarea').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting Files from the modal\n            var numFilesQueued = 0;\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type=\"file\"]').each(function(i) {\n                if ($(this).prop('files')[0]) {\n                    ++numFilesQueued;\n                    that.getBase64($(this).prop('files')[0], function(filecontent) {\n                        rowDataArray[$(this).attr('id')] = filecontent;\n                        --numFilesQueued;\n                    });\n                }\n            });\n\n            // Getting the checkbox from the modal\n            $('form[name=\"altEditor-edit-form-' +datatable.random_id + '\"] *').filter(':input[type=\"checkbox\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = i //this?.checked;\n            });\n\n\n          const {\n            assignment_id ,\n            assignment_name,\n            assignment_owner,\n            assignment_due,\n            assignment_summary,\n            assignment_notes,\n            assignment_created,\n            assignment_last_modified,\n          } = <Assignment>rowDataArray;\n\n            this.http.postLocal({\n              table : 'assignment',\n              command : 'update',\n              assignment_id ,\n            assignment_name,\n            assignment_owner,\n            assignment_due,\n            assignment_summary,\n            assignment_notes,\n            assignment_created,\n            assignment_last_modified,\n            }).subscribe((d: GraderResponse)=> {\n              if(d.response == 200) this.fetchAssignments();\n                console.log(`Assignment Data update attempted!\\nProof:`)\n                console.dir(d)\n            },err=> {\n              console.error();\n            }, ()=> {\n\n              $('.modal,.modal-backdrop').hide();\n\n            })\n\n            /*\n              const { attempt_id ,\n                attempt_name,\n                attempt_student_identifier,\n                attempt_main_path,\n                attempt_submission_time,\n                attempt_grading_time,\n                attempt_grade_breakdown,\n                attempt_grade_complete,\n                attempt_assignment,\n                created_at,\n                updated_at } = rowdata;\n\n              this.http.getLocal({\n                table : 'assignments',\n                command : 'update',\n                attempt_id ,\n                attempt_name,\n                attempt_student_identifier,\n                attempt_main_path,\n                attempt_submission_time,\n                attempt_grading_time,\n                attempt_grade_breakdown,\n                attempt_grade_complete,\n                attempt_assignment,\n                created_at,\n                updated_at\n              }).subscribe((d: GraderResponse)=> {\n                  console.log(`Assignment Data update attempted!\\nProof:`)\n                  console.dir(d)\n              })\n            */\n\n      }\n    };\n  }\n\n  initializeDataTable() {\n    this.dataTable = $(this.table.nativeElement);\n    // console.dir(this.dataTable);\n    this.dataTable.DataTable(this.formOptions());\n  }\n\n  fetchAssignments(){\n    this.http.getAssignments().subscribe((d: GraderResponse)=> {\n      if(d.response == 200){\n        // console.dir(d.data.message);\n        this.assignmentsUpdater.resetAssignments(<Assignment[]>d.data.message);\n       }\n       else\n       {\n         alert(`${d.data.message.toString()}`);\n       }\n    }, err => {});\n  }\n\n\n  ngOnDestroy(){\n    this.assignmentsSubscription.unsubscribe();\n  }\n\n}\n","<p class=\"h4 mb-4 text-center\">Available Assignments</p>\n<table #assignmentBrowser class=\"display table table-responsive table-sm nowrap col-12\" style=\"width:100%\">\n</table>\n<!--\n<div id=\"customForm\" style=\"display: none;\">\n    <fieldset class=\"name\">\n        <legend>Identifiers</legend>\n        <editor-field class=\"disabled\" name=\"assignment_id\"></editor-field>\n        <editor-field name=\"assignment_name\"></editor-field>\n        <editor-field class=\"datetime\" name=\"assignment_due\"></editor-field>\n    </fieldset>\n    <fieldset class=\"office\">\n        <legend>Summary</legend>\n        <editor-field name=\"assignment_summary\"></editor-field>\n    </fieldset>\n    <fieldset class=\"hr\">\n        <legend>Notes</legend>\n        <editor-field name=\"assignment_notes\"></editor-field>\n    </fieldset>\n\n</div> -->","<div class=\"container-fluid bg-gray padding\" id=\"printable\" *ngIf=\"activeAssignment\">\n\n    <button id=\"unprintable\" class=\" btn btn-primary \" (click)=\"helper.printPDF( 'printable',activeAssignment?.assignment_name+' by '+ activeAssignment?.assignment_owner_name) \">DOWNLOAD PDF</button>\n\n    <div *ngIf=\"activeAssignment\">\n\n        <div class=\"row \">\n            <div class=\"col-8 col-main-header \">\n                <b class=\"u \">{{activeAssignment?.assignment_name}}</b> &nbsp;&nbsp;&nbsp;\n                <code class=\"code \">( {{helper.plainDateify(activeAssignment?.assignment_created)}} )</code> &nbsp;&nbsp;&nbsp;\n\n            </div>\n            <div class=\"col-1 \">\n\n            </div>\n            <div class=\"col-3 col-bordered \">\n                {{activeAssignment?.assignment_id}}\n            </div>\n        </div>\n        <div class=\"row \">\n            <div class=\"col-9 \">\n                <sub class=\"sub \">by <b>Assignment Owner</b></sub>\n            </div>\n            <div class=\"col-3 col-bordered \">\n                {{helper.plainDateify(activeAssignment?.assignment_due)}}\n            </div>\n        </div>\n\n        <hr *ngIf=\"activeAssignment.assignment_summary\">\n        <div class=\"row \" *ngIf=\"activeAssignment?.assignment_summary\">\n            <div class=\"col-12\">\n                <span class=\"subtitle\">SUMMARY:</span>\n                <span class=\"sub myfont mid-text\">\n                &nbsp; {{activeAssignment?.assignment_summary}}\n                </span>\n            </div>\n        </div>\n\n        <hr *ngIf=\"activeAssignment?.assignment_notes\">\n        <div class=\"row \" *ngIf=\"activeAssignment?.assignment_notes\">\n            <div class=\"col-12\">\n                <span class=\"subtitle\">DESCRIPTION:</span>\n                <span class=\"sub myfont mid-text\">\n                &nbsp;  {{activeAssignment?.assignment_notes}}\n                </span>\n            </div>\n        </div>\n\n    </div>\n\n    <hr>\n    <div class=\"row \">\n        <div class=\"col-12 uppercase mid-text bold\">\n            GRADING CRITERIA\n        </div>\n    </div>\n\n    <div class=\"row padding\" *ngFor=\"let rule of activeAssignment.routes; let idx = index; \">\n\n        <div class=\"col-12 \">\n            <div class=\"container-fluid grading-criterion padding \">\n                <div class=\"row \">\n                    <div class=\"col-11 uu \">\n                        {{idx+1}}. {{rule.rule_name}}\n                    </div>\n                    <div class=\"col-1 col-bordered\">\n                        {{rule.rule_id}}\n                    </div>\n                </div>\n                <div class=\"row \">\n                    <div class=\"col-12 \" style=\" \">\n                        <i class=\"uu small-text bold\">DESCRIPTION</i>:\n                        <span class=\"sub myfont mid-text\"> &nbsp; {{rule?.rule_description}}</span>\n                    </div>\n                </div>\n\n                <p></p>\n                <div class=\"row \">\n                    <div class=\"col-2 col-bordered-left \">\n                        <i class=\"uu small-text \"> METHOD:</i>\n                        <span style=\"color:{{helper.colorize( rule?.rule_method)}}\" class=\"computerfont mid-text bold \">\n                          {{rule?.rule_method}}\n                        </span>\n                    </div>\n                    <div class=\"col-4 col-bordered-left \">\n                        <i class=\"uu small-text \">PATH:</i>\n                        <span class=\"computerfont mid-text bold \" style=\"color:blue; \">\n                          {{rule?.rule_path}}\n                        </span>\n                    </div>\n                    <div class=\"col-4 col-bordered-left \">\n                        <i class=\"uu small-text \">DATA TYPE:</i>\n                        <span class=\"computerfont mid-text bold \" style=\"color: purple \">\n                          {{rule?.rule_expected_data_type}}\n                        </span>\n                    </div>\n                    <div class=\"col-2 col-bordered-left \">\n                        <i class=\"uu small-text myfont \"> STATUS CODE:</i>\n                        <span class=\"computerfont mid-text bold \" style=\"color:crimson \">\n                          {{rule?.rule_expected_status_code}}\n                        </span>\n                    </div>\n                </div>\n\n                <p *ngIf=\"rule?.rule_expected_data\"></p>\n                <div class=\"row\" *ngIf=\"rule?.rule_expected_data\">\n                    <div class=\"col-12\">\n                        <i class=\"uu small-text bold\">EXPECTED STATIC DATA</i>:\n                        <span class=\"sub mid-text myfont \">\n                          {{rule?.rule_expected_data}}\n                        </span>\n                    </div>\n                </div>\n                <hr *ngIf=\"rule?.rule_headers || rule?.rule_parameters\">\n\n                <!-- HEADERS & PARAMETERS -->\n                <div class=\"row \">\n\n                    <div class=\"col-6\" *ngIf=\"rule?.rule_headers\">\n\n                        <i class=\"uu small-text bold \">PROVIDED HEADERS</i>\n                        <table class=\"table table-dark mid-text\">\n                            <thead class=\"uppercase bold small-text\">\n                                <td>Name</td>\n                                <td>Value</td>\n                                <tbody>\n                                    <tr *ngFor=\"let rule_header of helper.json(rule?.rule_headers); let rule_headerIdx = index\">\n                                        <td>{{rule_header?.key}}</td>\n                                        <td>{{rule_header?.value}}</td>\n                                    </tr>\n                                </tbody>\n                        </table>\n\n                    </div>\n                    <div class=\"col-6\" *ngIf=\"rule?.rule_parameters\">\n                        <i class=\"uu small-text bold \">PROVIDED PARAMETERS</i>:\n                        <table class=\"table table-dark mid-text\">\n                            <thead class=\"uppercase bold small-text\">\n                                <td>name</td>\n                                <td>value</td>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let rule_parameter of helper.json(rule?.rule_parameters);let rule_parameterIdx = index;\">\n                                    <td>{{rule_parameter?.key}}</td>\n                                    <td>{{rule_parameter?.value }}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <!-- PATH & CODE MATCHING -->\n                <hr>\n                <div class=\"row \">\n                    <!-- PATH MATCHING -->\n                    <div class=\"col-6\">\n\n                        <i class=\"uu small-text bold uppercase\">PATH MATCHING</i> :\n                        <table class=\"table table-dark mid-text\">\n                            <thead class=\"uppercase bold small-text\">\n                                <td>path</td>\n                                <!-- <td>Match weight</td> -->\n                                <td>MATCHED MARKS</td>\n                                <td>NO MATCH MARKS</td>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>{{rule.rule_path}}</td>\n                                    <!-- <td>{{rule?.rule_grading?.path?.weight}}</td> -->\n                                    <td>{{rule?.rule_grading?.path?.match}}</td>\n                                    <td>{{rule?.rule_grading?.path?.match?.no_match|| 0}}</td>\n                                </tr>\n                                <tr *ngFor=\"let rule_path_match of rule?.rule_grading?.path?.matches\">\n                                    <td>{{rule_path_match?.alternative}}</td>\n                                    <td>{{rule_path_match?.match}}</td>\n                                    <td>{{rule_path_match?.match?.no_match|| 0}}</td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n\n                    </div>\n\n                    <!-- CODE MATCHING -->\n                    <div class=\"col-6\">\n\n                        <i class=\"uu small-text bold uppercase\">STATUS CODE MATCHING</i>\n                        <table class=\"table table-dark mid-text\">\n                            <thead class=\"uppercase bold small-text\">\n                                <td>CODE</td>\n                                <!-- <td>Match Weight</td> -->\n                                <td>MATCHED MARKS</td>\n                                <td>NO MATCH MARKS</td>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>{{rule?.rule_expected_status_code}}</td>\n                                    <!-- <td>{{rule.rule_grading.status_code.weight}}</td> -->\n                                    <td>{{rule?.rule_grading?.status_code?.match}}</td>\n                                    <td>{{rule?.rule_grading?.status_code?.match?.no_match || 0}}</td>\n                                </tr>\n\n                                <tr *ngFor=\"let rule_status_code_match of rule?.rule_grading?.status_code?.matches\">\n                                    <td>{{rule_status_code_match?.alternative}}</td>\n                                    <td>{{rule_status_code_match?.match}}</td>\n                                    <td>{{rule_status_code_match?.match?.no_match || 0}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n\n\n                <!-- VERB & MIME TYPE MATCHING -->\n                <hr>\n                <div class=\"row \">\n                    <!-- VERB MATCHING -->\n                    <div class=\"col-6\">\n\n                        <i class=\"uu small-text bold uppercase\">VERB MATCHING</i>\n                        <table class=\"table table-dark mid-text\">\n                            <thead class=\"uppercase bold small-text\">\n                                <td>VERB</td>\n                                <!-- <td>Match Weight</td> -->\n                                <td>MATCHED MARKS</td>\n                                <td>NO MATCH MARKS</td>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>{{rule?.rule_method}}</td>\n                                    <!-- <td>{{rule?.rule_grading?.verb?.weight}}</td> -->\n                                    <td>{{rule?.rule_grading?.verb?.match}}</td>\n                                    <td>{{rule?.rule_grading?.verb?.match?.no_match || 0}}</td>\n                                </tr>\n\n                                <tr *ngFor=\"let rule_verb_match of rule?.rule_grading?.verb?.matches\">\n                                    <td>{{rule_verb_match?.alternative}}</td>\n                                    <td>{{rule_verb_match?.match}}</td>\n                                    <td>{{rule_verb_match?.match?.no_match || 0}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n\n                    <!-- MIME TYPE MATCHING -->\n                    <div class=\"col-6\">\n\n                        <i class=\"uu small-text bold uppercase\">MIME TYPE MATCHING</i>\n                        <table class=\"table table-dark mid-text\">\n                            <thead class=\"uppercase bold small-text\">\n                                <td>MIME TYPE</td>\n                                <!-- <td>Match Weight</td> -->\n                                <td>MATCHED MARKS</td>\n                                <td>NO MATCH MARKS</td>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>{{rule?.rule_expected_data_type}}</td>\n                                    <!-- <td>{{rule?.rule_grading?.mime_type?.weight}}</td> -->\n                                    <td>{{rule?.rule_grading?.mime_type?.match}}</td>\n                                    <td>{{rule?.rule_grading?.mime_type?.match?.no_match || 0}}</td>\n                                </tr>\n\n                                <tr *ngFor=\"let rule_mime_type_match of rule?.rule_grading?.mime_type?.matches\">\n                                    <td>{{rule_mime_type_match?.alternative}}</td>\n                                    <td>{{rule_mime_type_match?.match}}</td>\n                                    <td>{{rule_mime_type_match?.match?.no_match || 0}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n\n\n\n    <!-- {{(activeAssignment)| json}} -->\n\n\n\n</div>\n\n<div *ngIf=\"!activeAssignment\">\n    <div class=\"i fa fa-spin\"></div>\n    ... Loading assignment rubric\n</div>","import { Rule } from './../../../models/Rule.model';\nimport { HttpService } from './../../../services/http.service';\nimport { Assignment } from './../../../models/Assignment.model';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ByteGraderHelperService } from 'src/app/services/byte-grader-helper.service';\nimport { AssignmentStoreService } from '../../../services/stor/assignment.stor.service'\nimport { Subscription, Observable } from 'rxjs';\nimport { GraderResponse } from 'src/app/models/Response.model';\n\n\n@Component({\n  selector: 'app-assignment-browser-rubric',\n  templateUrl: './assignment-browser-rubric.component.html',\n  styleUrls: ['./assignment-browser-rubric.component.css']\n})\nexport class AssignmentBrowserRubricComponent implements OnInit {\n\nassignmentSubscription : Subscription;\n\n activeAssignment: Assignment;\n\n  helper : ByteGraderHelperService;\n\n  activeAssignmentId: any;\n\n  private nav;\n\n  constructor(private ngZone: NgZone, private router:Router, private activatedRoute:ActivatedRoute, private http : HttpService, private helpers: ByteGraderHelperService, private assignmentUpdater: AssignmentStoreService) {\n\n\n\n    this.helper = this.helpers;\n    this.nav = this.router.getCurrentNavigation();\n    this.activeAssignment = this?.nav?.extras?.state;\n\n  }\n\n  public navigate(commands: any[]): void {\n    this.ngZone.run(() => this.router.navigate(commands)).then();\n  }\n\n  ngOnInit(): void {\n\n\n    this.activeAssignmentId = this.activatedRoute.snapshot.paramMap.get('id');\n\n      //@ Watch for recipe changes\n    this.assignmentSubscription = this.assignmentUpdater.assignmentUpdated.subscribe((assignments: Assignment[]) => {\n      // console.log(`Available Assignments`,assignments)\n      this.activeAssignment = assignments.filter(asg=>asg.assignment_id == this.activeAssignmentId)[0];\n    });\n\n    try {\n      // if(!this?.nav?.extras?.state )\n      if(!history?.state?.assignment_id  || !this?.nav?.extras?.state )\n      {\n        this.fetchAssignmentById(this.activatedRoute.snapshot.paramMap.get(\"id\"))\n       .then( assignmentdata =>{\n          assignmentdata.routes = <Rule[]>assignmentdata.routes.map(rd=>{\n            rd.rule_grading = this.helper.json(rd.rule_grading);\n            // rd.rule_grading.path = this.helper.json(rd.rule_grading.path);\n            // rd.rule_grading.mime_type = this.helper.json(rd.rule_grading.mime_type);\n            // rd.rule_grading.status_code = this.helper.json(rd.rule_grading.status_code);\n            // rd.rule_grading.verb = this.helper.json(rd.rule_grading.verb);\n            return rd;\n          });\n\n          this.assignmentUpdater.addAssignment(assignmentdata);\n          // this.activeAssignment = assignmentdata;\n        })\n        .catch(e=>{\n          this.router.navigateByUrl(`/assignments/browse`)\n        });\n      }\n      else //if(!nav.extras.state.assignment_id)\n      {\n\n        this.assignmentUpdater.addAssignment(<Assignment>(this.nav.extras.state));\n\n        // console.log(`... Fetching assignment rules for the assignment '${this.nav.extras.state.assignment_name}'`)\n\n\n        //@ Fetch the relevant assignment route/rule data\n        this.fetchAssignmentRoutes(this.activeAssignmentId)\n        .then( (routeAssignmentData: any) =>{\n\n            // console.log(`route assignment rule`, routeAssignmentData)\n\n           let assignmentRoutes =  <Rule[]>routeAssignmentData.owned.map(rd=>{\n            rd.rule_grading = this.helpers.json(rd.rule_grading);\n            return rd;\n          });\n\n          // console.log(`\\nAssignment routes === `, assignmentRoutes);\n\n          this.assignmentUpdater.registerRoutes(assignmentRoutes, this.activeAssignmentId);\n\n         })\n         .catch(e=>{\n           console.log(`\\n\\n@ Error at Fetch assignment routes`)\n           console.dir(e);\n           this.router.navigateByUrl(`/assignments/browse/rubric/`)\n         });\n\n      }\n      // else\n      // {\n      //   throw new Error();\n      // }\n    } catch (error) {\n      console.log(`@~117 fetch assignment failed`,error)\n      this.router.navigateByUrl(`/assignments/browse`);\n    }\n\n  }\n\n  private async fetchAssignmentById( assignmentId ) : Promise<Assignment>\n  {\n    return new Promise((resolve,reject)=>\n      this.http.getAssignments(assignmentId).subscribe((d: GraderResponse)=>{\n        if(d.response != 200 || !d.data.message[0]) reject();\n        resolve(d.data.message[0]);\n      })\n    );\n  }\n\n  private async fetchAssignmentRoutes( assignmentId ) : Promise<Rule[]>\n  {\n    return new Promise((resolve,reject)=>\n      this.http.getRules(assignmentId,true).subscribe((d: GraderResponse)=>{\n        if(d.response != 200) reject();\n        resolve(d.data.message);\n      })\n    );\n  }\n\n  private browseAllAssignments(){\n    this.navigate([`/assignments/browse`]);\n  }\n\n  ngOnDestroy(){\n    this.activeAssignment = null;\n    this.assignmentSubscription.unsubscribe();\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assignment-browser',\n  templateUrl: './assignment-browser.component.html',\n  styleUrls: ['./assignment-browser.component.css']\n})\nexport class AssignmentBrowserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assignment-generator',\n  templateUrl: './assignment-generator.component.html',\n  styleUrls: ['./assignment-generator.component.css']\n})\nexport class AssignmentGeneratorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-method-manager',\n  templateUrl: './method-manager.component.html',\n  styleUrls: ['./method-manager.component.css']\n})\nexport class MethodManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>method-manager works!</p>\n","import { HttpService } from './../../../services/http.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SubUser } from 'src/app/models/SubUser.model';\nimport {NgbCalendar, NgbDate, NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-new-assignment',\n  templateUrl: './new-assignment.component.html',\n  styleUrls: ['./new-assignment.component.css']\n})\nexport class NewAssignmentComponent implements OnInit {\n\n\n  model: NgbDateStruct;\n\n  isDisabled = (date: NgbDate, current: {month: number, year: number}) => date.month !== current.month;\n  isWeekend = (date: NgbDate) =>  this.calendar.getWeekday(date) >= 6;\n\n\n  newAssignmentForm:FormGroup;\n\n  users : SubUser[];\n\n  constructor( private http: HttpService, private calendar: NgbCalendar   ) { }\n\n  ngOnInit(): void {\n\n    this.http.getUsers().subscribe(d=>\n    {\n       if (d.response !=200) alert(d.data.message);\n      this.users = d.data.message;\n    });\n\n    this.newAssignmentForm = new FormGroup({\n      assignment_name  : new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      assignment_owner  : new FormControl(null, Validators.required),\n      assignment_summary : new FormControl(null),\n      assignment_notes : new FormControl(null),\n      assignment_due: new FormControl(null)\n    });\n\n  }\n\n  saveAssignment()\n  {\n    // console.dir(this.newAssignmentForm)\n    this.http.addAssignment(this.newAssignmentForm.value).subscribe((d:{response,data:{message,command}})=>{\n      if(d.response != 200)\n      {\n        alert(d.data.message);\n      }\n      else\n      {\n        this.newAssignmentForm.reset();\n        alert(\"Assignment Saved!\");\n      }\n    })\n  }\n\n}\n","<div class=\"card\">\n    <form class=\"border border-light p-5\" [formGroup]=\"newAssignmentForm\" (ngSubmit)=\"saveAssignment()\">\n\n        <p class=\"h4 mb-4 text-center\">NEW ASSIGNMENT</p>\n\n        <div id=\"sortable-form\" class=\"droptrue drop-list ui-sortable\">\n\n            <div class=\"col-12 row\">\n                <div class=\"col-md-4\">\n                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                        <label for=\"assignment_name\">Name<sup style=\"color:crimson;\">*</sup></label>\n                        <input type=\"text\" id=\"assignment_name\" formControlName=\"assignment_name\" name=\"assignment_name\" class=\"form-control form-control-lg mb-4\" placeholder=\"Assignment Name\">\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div data-template=\"dSelectTemp\" data-popover=\"select\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"assignment_owner\">Owner<sup style=\"color:crimson;\">*</sup></label>\n                        <input class=\"browser-default form-control form-control-lg mb-4\" list=\"assignment_owner\" formControlName=\"assignment_owner\" name=\"assignment_owner\" placeholder=\"Assignment Owner\">\n                        <datalist id=\"assignment_owner\" *ngIf=\"users\">\n                        <option  *ngFor=\"let owner of users\" [value]=\"owner.id\">{{owner.name}}</option>\n                    </datalist>\n                        <datalist id=\"rule_assignment\" *ngIf=\"!users\">\n                        <option value=\"\" selected>Refresh to Load owners</option>\n                    </datalist>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <!-- <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                        <label for=\"assignment_due\">Due Date</label>\n                        <input type=\"text\" id=\"assignment_due\" name=\"assignment_due\" class=\"form-control mb-4 form-control-lg\" placeholder=\"Due Date\">\n                    </div> -->\n\n                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                        <label for=\"assignment_due\">Due Date<sup style=\"color:crimson;\">*</sup></label>\n\n                        <div class=\"input-group\">\n                            <!-- [dayTemplate]=\"customDay\"\n                          [markDisabled]=\"isDisabled\" -->\n                            <input class=\"form-control form-control-lg\" [dayTemplate]=\"customDay\" placeholder=\"yyyy-mm-dd\" formControlName=\"assignment_due\" name=\"assignment_due\" ngbDatepicker [dayTemplate]=\"customDay\" [markDisabled]=\"isDisabled\" #d=\"ngbDatepicker\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-lg btn-outline-secondary calendar fa fa-calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\n                            </div>\n                        </div>\n\n                        <ng-template #customDay let-date let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n                            <span class=\"custom-day\" [class.weekend]=\"isWeekend(date)\" [class.focused]=\"focused\" [class.bg-primary]=\"selected\" [class.hidden]=\"date.month !== currentMonth\" [class.text-muted]=\"disabled\">\n                            {{ date.day }}\n                          </span>\n                        </ng-template>\n                    </div>\n\n                    <!-- <div class=\"input-group\">\n                        <label for=\"assignment_due\">Due Date</label>\n                        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"model\" ngbDatepicker [dayTemplate]=\"customDay\" [markDisabled]=\"isDisabled\" #d=\"ngbDatepicker\">\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\n                        </div>\n                    </div> -->\n                </div>\n            </div>\n\n\n\n            <div class=\"row col-12\">\n                <div class=\"col-md-6\">\n                    <div data-template=\"dTextareaTemp\" data-popover=\"textarea\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"assignment_summary\">Summary</label>\n                        <textarea id=\"assignment_summary\" formControlName=\"assignment_summary\" name=\"assignment_summary\" class=\"form-control mb-4\" placeholder=\"Summary\"></textarea>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div data-template=\"dTextareaTemp\" data-popover=\"textarea\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"assignment_notes\">Notes</label>\n                        <textarea id=\"assignment_notes\" formControlName=\"assignment_notes\" name=\"assignment_notes\" class=\"form-control mb-4\" placeholder=\"Notes\"></textarea>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n        </div>\n\n        <button class=\"btn btn-info btn-block my-4 btn-lg\" [disabled]=\"!newAssignmentForm.valid\" type=\"submit\">Add Assignment</button>\n\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem, copyArrayItem, } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-output-manager',\n  templateUrl: './output-manager.component.html',\n  styleUrls: ['./output-manager.component.css']\n})\nexport class OutputManagerComponent implements OnInit {\n\n  todos = [\n    {\n      name: 'Angular',\n      category: 'Web Development'\n    },\n    {\n      name: 'Flexbox',\n      category: 'Web Development'\n    },\n    {\n      name: 'iOS',\n      category: 'App Development'\n    },\n    {\n      name: 'Java',\n      category: 'Software development'\n    }\n  ];\n  \n  completed = [\n    {\n      name: 'Android',\n      category: 'Mobile Development'\n    },\n    {\n      name: 'MongoDB',\n      category: 'Databases'\n    },\n    {\n      name: 'ARKit',\n      category: 'Augmented Reality'\n    },\n    {\n      name: 'React',\n      category: 'Web Development'\n    }\n  ];\n\n\n  compdsleteder = []\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDrop(evt: CdkDragDrop<any[]>, copy:boolean = false, noDrop: boolean = false ){\n    if(evt.previousContainer == evt.container)\n    {\n      moveItemInArray(evt.container.data, evt.previousIndex, evt.currentIndex);\n    }\n    else\n    {\n      if(noDrop) return;      \n      if(!copy)\n      {\n        transferArrayItem(evt.previousContainer.data, evt.container.data, evt.previousIndex, evt.currentIndex);\n      }\n      else\n      {\n        copyArrayItem(evt.previousContainer.data,evt.container.data, evt.previousIndex, evt.currentIndex);\n      }\n    }\n  }\n\n  \n\n}\n","<div class=\"list-container\" cdkDropListGroup>\n    <!-- [cdkDropListConnectedTo]=\"[doneList]\"  -->\n    <div class=\"todo-container column-container col-lg-3 col-sm-12\">\n        <div class=\"list bg-success\" cdkDropList #toDoList=\"cdkDropList\" [cdkDropListData]=\"todos\" (cdkDropListDropped)=\"onDrop($event,false,true)\">\n            <h2>Owned Rules</h2>\n            <mat-card *ngFor=\"let todo of todos\" cdkDrag>\n                <mat-card-header>\n                    <mat-card-title>{{todo.name}}</mat-card-title>\n                    <mat-card-subtitle>{{todo.category}}</mat-card-subtitle>\n                </mat-card-header>\n            </mat-card>\n        </div>\n    </div>\n\n    <!--  [cdkDropListConnectedTo]=\"toDoList\" -->\n    <div class=\"done-container column-container col-lg-3 col-sm-12\">\n        <div class=\"list  bg-warning\" cdkDropList #doneList=\"cdkDropList\" [cdkDropListData]=\"completed\" (cdkDropListDropped)=\"onDrop($event,false,true)\">\n            <h2>Public Rules</h2>\n            <mat-card *ngFor=\"let complete of completed\" cdkDrag>\n                <mat-card-header>\n                    <mat-card-title>{{complete.name}}</mat-card-title>\n                    <mat-card-subtitle>{{complete.category}}</mat-card-subtitle>\n                </mat-card-header>\n            </mat-card>\n        </div>\n    </div>\n\n    <!-- [cdkDropListConnectedTo]=\"toDoList\" -->\n    <div class=\"done-container column-container col-lg-3 col-sm-12\">\n        <div class=\"list bg-danger\" cdkDropList #doneList=\"cdkDropList\" [cdkDropListData]=\"compdsleteder\" (cdkDropListDropped)=\"onDrop($event,true)\">\n            <h2 class=\"text-white\">Independent Rules</h2>\n            <mat-card *ngFor=\"let complete of compdsleteder\" cdkDrag>\n                <mat-card-header>\n                    <mat-card-title>{{complete.name}}</mat-card-title>\n                    <mat-card-subtitle>{{complete.category}}</mat-card-subtitle>\n                </mat-card-header>\n            </mat-card>\n        </div>\n    </div>\n    <!-- [cdkDropListConnectedTo]=\"toDoList\" -->\n    <div class=\"done-container column-container col-lg-3 col-sm-12\">\n        <div class=\"list bg-primary\" cdkDropList #doneList=\"cdkDropList\" [cdkDropListData]=\"compdsleteder\" (cdkDropListDropped)=\"onDrop($event,true)\">\n            <h2 class=\"text-white\">Chained Rules</h2>\n            <mat-card *ngFor=\"let complete of compdsleteder\" cdkDrag>\n                <mat-card-header>\n                    <mat-card-title>{{complete.name}}</mat-card-title>\n                    <mat-card-subtitle>{{complete.category}}</mat-card-subtitle>\n                </mat-card-header>\n            </mat-card>\n        </div>\n    </div>\n\n</div>","import { ByteGraderHelperService } from './../../../services/byte-grader-helper.service';\nimport { Rule } from './../../../models/Rule.model';\nimport { HttpService } from './../../../services/http.service';\nimport { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RulesStoreService } from 'src/app/services/stor/rules.stor.service';\nimport { Subscription } from 'rxjs';\nimport { GraderResponse } from 'src/app/models/Response.model';\n\ndeclare var $;\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n\n  dataTable: any;\n  rulesSubscription : Subscription;\n\n  @ViewChild('ruleOverviewBrowser', {static: true}) table;\n  constructor(private http: HttpService, private helpers: ByteGraderHelperService, private router:Router, private ngZone: NgZone,  private rulesUpdater: RulesStoreService ) { }\n\n  public routes: Rule[];\n\n  ngOnInit(): void {\n\n    this.initializeDataTable();\n    this.fetchRoutes();\n    this.rulesSubscription = this.rulesUpdater.rulesUpdateWatcher.subscribe((rules: Rule[]) => {\n      console.log(`\\n\\nReceived new data .... redrawing table!`)\n      this.routes = rules;\n      this.dataTable.DataTable().destroy();;\n      this.initializeDataTable();\n    });\n\n  }\n\n\n  private navigate(commands: any[], pars: any = {}): void {\n    this.ngZone.run(() => this.router.navigate(commands,pars)).then();\n  }\n\n  formOptions()\n  {\n\n    return {\n      scrollY: this.helpers.getPageHeight(),\n      data: this.routes,\n      columns: [\n\n          { title: \"Id\", data: 'rule_id'  },\n          { title: \"Method\", data: 'rule_method',\n            render:  (data, type, row) => this.helpers.stringify(data,this.helpers.colorize(data.toString()))\n          },\n          { title: \"Path\", data: 'rule_path' ,\n            render:  (data, type, row) => this.helpers.stringify(data,'blue')\n          },\n          { title: \"Name\", data: 'rule_name' ,\n            render:  (data, type, row) => this.helpers.stringify(data,undefined)\n          },\n          { title: \"Description\", data: 'rule_description' ,\n            render:  (data, type, row) => this.helpers.stringify(data,undefined)\n          },\n          {\n            title: \"Assignment\",\n            data: 'rule_assignment' ,\n            render : (data, type, row) => this.helpers.stringify(`${row.assignment_name} <sub>(${row.assignment_owner_name})</sub>`,'teal')\n          },\n          // { title: \"HTP Verb\", data: 'rule_http_verb' },\n          {\n            title: \"Expected Status Code\",\n            data: 'rule_expected_status_code',\n            render:  (data, type, row) => this.helpers.stringify(data,'blue')\n          },\n          {\n              title: \"Expected Data Type\",\n              data: 'rule_expected_data_type',\n              render:  (data, type, row) => this.helpers.stringify(data,'brown')\n          },\n          { title: \"Expected Data\", data: 'rule_expected_data' ,\n            render:  (data, type, row) => this.helpers.jsonify(data)\n          },\n          { title: \"Headers\", data: 'rule_headers' ,\n            render:  (data, type, row) => this.helpers.jsonify(data)\n          },\n          { title: \"Body Parameters\", data: 'rule_parameters',\n            render:  (data, type, row) => this.helpers.jsonify(data)\n          },\n          { title: \"Grading\", data: 'rule_grading' ,\n            render:  (data, type, row) => this.helpers.jsonify(data)\n          },\n          { title: \"Created At\", data: 'created_at',\n            render:  (data, type, row) => this.helpers.dateify(data,'green')\n          },\n          { title: \"Updated At\", data: 'updated_at',\n            render:  (data, type, row) => this.helpers.dateify(data,'orange')\n          }\n      ],\n      dom: 'Bfrtip',        // Needs button container\n      select: true, //'single',\n      responsive: true,\n      altEditor: true,     // Enable altEditor\n      buttons: [\n         'excel',\n         'pdf',\n         {\n          extend: 'selected', // Bind to Selected row\n          text: 'Edit',\n          name: 'edit'        // do not change name\n      },\n      // {\n      //     extend: 'selected', // Bind to Selected row\n      //     text: 'Delete',\n      //     name: 'delete'      // do not change name\n      // },\n      {\n          text: 'Refresh',\n          action:  (e, dt, node, config) => {\n            this.fetchRoutes();\n          }\n      }\n      ],\n      onEditRow: (datatable, rowdata, success, error) => {\n\n        var that = datatable;\n            var dt = datatable.s.dt;\n\n            // Complete new row data\n            var rowDataArray = {};\n\n            var adata = dt.rows({\n                selected: true\n            });\n\n            // Getting the inputs from the edit-modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type!=\"file\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting the textArea from the modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter('textarea').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting Files from the modal\n            var numFilesQueued = 0;\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type=\"file\"]').each(function(i) {\n                if ($(this).prop('files')[0]) {\n                    ++numFilesQueued;\n                    that.getBase64($(this).prop('files')[0], function(filecontent) {\n                        rowDataArray[$(this).attr('id')] = filecontent;\n                        --numFilesQueued;\n                    });\n                }\n            });\n\n            // Getting the checkbox from the modal\n            $('form[name=\"altEditor-edit-form-' +datatable.random_id + '\"] *').filter(':input[type=\"checkbox\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = this.checked;\n            });\n\n\n          const {\n            rule_id,\n            rule_description,\n            rule_expected_data,\n            rule_expected_data_type,\n            rule_expected_status_code,\n            rule_http_verb,\n            rule_method,\n            rule_name,\n            rule_path,\n          } = <Rule>rowDataArray;\n\n            this.http.postLocal({\n              table : 'rule',\n              command : 'update',\n              rule_id,\n            rule_description,\n            rule_expected_data,\n            rule_expected_data_type,\n            rule_expected_status_code,\n            rule_http_verb,\n            rule_method,\n            rule_name,\n            rule_path,\n            }).subscribe((d: GraderResponse)=> {\n                if(d.response == 200) this.fetchRoutes();\n                console.log(`Assignment Rule/Route Data update attempted!\\nProof:`)\n                console.dir(d)\n            },err=> {\n              console.error();\n            }, ()=> {\n              $('.modal,.modal-backdrop').hide();\n            })\n\n      }\n    };\n  }\n\n  initializeDataTable() { \n    this.dataTable = $(this.table.nativeElement);\n    // console.dir(this.dataTable);\n    this.dataTable.DataTable(this.formOptions());\n  }\n\n  fetchRoutes(){\n    this.http.getRules().subscribe((d: GraderResponse)=> {\n      if(d.response == 200){\n        this.rulesUpdater.resetRules(<Rule[]>d.data.message);\n      }\n      else\n      {\n        alert(`${d.data.message.toString()}`);\n      }\n    }, err => {});\n  }\n\n  ngOnDestroy(){\n    this.rulesSubscription.unsubscribe();\n  }\n\n}\n","<p class=\"h4 mb-4 text-center\">Grading Rule Preview</p>\n<table #ruleOverviewBrowser class=\"display table table-responsive table-sm\" style=\"width:100%\">\n</table>","import { Chaining } from './../../../models/Chaining.model';\nimport { Rule } from './../../../models/Rule.model';\nimport { GraderResponse } from './../../../models/Response.model';\nimport { Component, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Assignment } from 'src/app/models/Assignment.model';\nimport { User } from 'src/app/models/User.model';\nimport { ByteGraderHelperService } from 'src/app/services/byte-grader-helper.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { AssignmentsStoreService } from 'src/app/services/stor/assignments.stor.service';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem, copyArrayItem } from '@angular/cdk/drag-drop';\n\ndeclare var $;\n\n@Component({\n  selector: 'app-path-manager',\n  templateUrl: './path-manager.component.html',\n  styleUrls: ['./path-manager.component.css']\n})\nexport class PathManagerComponent implements OnInit,OnDestroy {\n\n  userProfile: User;\n  assignmentsSubscription : Subscription;\n\n  public gradingRules : {\n    owned : Rule[],\n    public: Rule[],\n    ids: Number[],\n  };\n\n  public gradingSchema: Rule[] = [];\n\n  public ruleBin = [];\n\n\n  @ViewChild('ownedRules', {static: true}) ownedRules;\n  ownedTable: any;\n\n  @ViewChild('publicRules', {static: true}) publicRules;\n  publicTable: any;\n\n  public activeAssignment: Assignment;\n\n  public assignments:Assignment[];\n\n  public userAssignments: Assignment[];\n\n\n  constructor(private http: HttpService, public helpers: ByteGraderHelperService, private router: Router, private ngZone: NgZone,  private assignmentsUpdater: AssignmentsStoreService) {\n\n  }\n  ngOnDestroy(): void {\n    this.assignmentsSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n   \n    this.userProfile = this.helpers.getUserInfo();\n\n    this.assignmentsSubscription = this.assignmentsUpdater.assignmentsUpdated.subscribe((assignments: Assignment[]) => {\n      this.assignments = assignments;\n      this.userAssignments = assignments.filter(assignment => <number>assignment.assignment_owner == <number>this.userProfile.id);\n    });\n\n    this.fetchAssignments();\n\n\n    $(document).on('click','.assignmentPicker', (d) =>\n    {\n      d.stopPropagation();\n      let identifier = $(d.currentTarget).attr('id');\n      this.ngZone.run(() => this.setActiveAssignment( this.userAssignments.filter( assgnmnt => assgnmnt.assignment_id == identifier )[0]));\n    })\n\n    $(document).on('dblclick','.parentRuleList',(evt)=>{\n      evt.stopPropagation();\n      const identifier = $(evt.currentTarget).attr('id');\n      const idxs = identifier.split('-');\n      const item_position = parseInt( idxs[1], 10);\n      let removeParentRules = confirm(`Do you want to reset the dependencies for this grading rule?`);\n      if(removeParentRules) this.ngZone.run(() => this.gradingSchema[item_position].parent_rules = [] );\n    })\n\n    $(document).on('click','.idParent', (d) =>\n    {\n      d.stopPropagation();\n      const identifier = $(d.currentTarget).attr('id');\n      const idxs = identifier.split('-');\n      const item_idx = parseInt( idxs[1], 10);\n      const item_id = parseInt( idxs[0], 10)\n\n      const default_id = this.gradingRules.ids[0];\n\n      //@ Capture the parent rules\n      const parent_rule = prompt(`Enter this Item's parent id. If multiple, separate by a comma`,`${default_id},`);\n      if(!parent_rule) return;\n\n      //@ Handle internal rule mapping\n      \n      this.ngZone.run(() => {\n\n        parent_rule.split(',')\n        .map(a=>parseInt(a,10))\n        .filter(b=>(!isNaN(b)) && (this.gradingRules.ids.indexOf(b)!= -1 ) && (b!=item_id))\n        .forEach( rule_id => {\n          //@ Add the parent rule dependency\n            this.gradingSchema[item_idx].parent_rules.push(rule_id);  \n        });\n        \n        // alert(`${identifier} clicked === ${item_idx}`);\n        this.gradingSchema[item_idx].parent_rules = this.gradingSchema[item_idx].parent_rules.filter((a,idx)=> (this.gradingSchema[item_idx].parent_rules.lastIndexOf(a) == idx) );\n\n      });\n      \n\n    });\n\n\n  }\n\n  private navigate(commands: any[], pars: any = {}): void {\n    this.ngZone.run(() => this.router.navigate(commands,pars)).then();\n  }\n\n  setActiveAssignment(assignment: Assignment){\n    this.activeAssignment = <Assignment>assignment;\n    if(!this.activeAssignment) return;\n    this.fetchAssignmentRules(this.activeAssignment.assignment_id);\n  }\n\n  hasActiveAssignment(){\n    return this.activeAssignment != undefined;\n  }\n\n  clearActiveAssignment() {\n    this.activeAssignment = undefined;\n  }\n\n  stringify(data){\n    return this.helpers.str(data);\n  }\n\n  fetchAssignments(){\n    this.http.getAssignments().subscribe((d: GraderResponse)=> {\n      if(d.response == 200){\n        // console.dir(d.data.message);\n        this.assignmentsUpdater.resetAssignments(<Assignment[]>d.data.message);\n       }\n       else\n       {\n         alert(`${d.data.message.toString()}`);\n       }\n    }, err => {});\n  }\n\n  fetchAssignmentRules(assignmentId){\n    this.http.getRules(assignmentId,true,true).subscribe((d: GraderResponse) => {\n      if(d.response == 200)\n      {\n        this.setGradingRules(d.data.message);   \n      }\n      else{\n        alert(`${d.data.message.toString()}`);\n      }\n    })\n  }\n\n\n  onDrop(evt: CdkDragDrop<any[]>, copy:boolean = false, noDrop: boolean = false, bin: boolean = false ){\n    if(evt.previousContainer == evt.container)\n    {\n      moveItemInArray(evt.container.data, evt.previousIndex, evt.currentIndex);     \n    }\n    else\n    {\n      if(noDrop){\n        if(bin){         \n          //@ remove the item from the array\n          evt.previousContainer.data.splice(evt.previousIndex,1);\n        }\n        return;\n      }       \n      if(!copy)\n      {\n        transferArrayItem(evt.previousContainer.data, evt.container.data, evt.previousIndex, evt.currentIndex);       \n      }\n      else\n      {\n        this.gradingSchema.splice(evt.currentIndex,0, <Rule>this.helpers.clone(evt.previousContainer.data[evt.previousIndex]));\n          // copyArrayItem(evt.previousContainer.data,evt.container.data, evt.previousIndex, evt.currentIndex);\n      }\n    }\n  }\n\n\n  saveGradingScheme(){\n    // let minimizedGradingScheme = [];\n\n    // this.gradingSchema.forEach((ruleItem: Rule, idx) => {\n    //   minimizedGradingScheme[idx] = {\n    //     rule: ruleItem.rule_id,\n    //     parents: ruleItem.parent_rules,\n    //   };\n    // });\n    let sure = confirm(`Save the grading scheme for the assignment ${this.activeAssignment.assignment_name}?`);\n    if(!sure) return;\n\n    let rule_chaining: Chaining = {\n      chaining_type : 'explicit',\n      chaining_assignment : this.activeAssignment.assignment_id,\n      chaining_rules: this.gradingSchema,\n    };\n\n    this.http.addChaining(rule_chaining).subscribe((d:GraderResponse)=>{\n      if(d.response == 200){\n        alert( `Grading rule chaining added for the assignment ${this.activeAssignment.assignment_name}.`);\n        this.ngZone.run(() => this.resetChainingUI());\n       }\n       else\n       {\n         alert(`${d.data.message.toString()}`);\n       }\n    });\n\n  }\n\n  resetChainingUI(){\n    this.ngZone.run(() =>{\n    \n      this.setActiveAssignment(undefined);\n\n      this.setGradingRules(undefined); \n\n      this.gradingSchema = [];\n    \n      this.ruleBin = [];\n\n    });\n  }\n\n  setGradingRules( bundledObj ){\n\n    //@ don't waste time\n    if(!bundledObj||!bundledObj.owned||!bundledObj.public||!bundledObj.ids) { \n      this.gradingRules = bundledObj; \n      return;\n    }\n\n    //@ setup the base object\n    this.gradingRules = {\n        owned : [],\n        public: [],\n        ids: [],\n      };                                                                                                      \n\n    //@ convert to object\n   let props = [\"owned\",\"public\",\"ids\"];\n    \n   props.forEach(prop => {\n      this.gradingRules[prop] = (Array.isArray(bundledObj[prop]))\n      ?  bundledObj[prop]\n      : Object.keys(bundledObj[prop]).map(vl=>bundledObj[prop][vl]);                                                                                                      \n   });\n\n  }\n\n\n}\n","<div *ngIf=\"!userAssignments\" style=\"text-align: center !important;\">\n    <br><br>\n    <h3><code>You have not added any assignments. <br> Please add one to continue. </code></h3>\n    <br>\n    <button class=\"btn btn-block btn-success\" routerLink=\"/assignments/new\" routerLinkActive=\"active\">\n      CREATE ASSIGNMENT\n    </button>\n    <br><br>\n</div>\n\n<span *ngIf=\"hasActiveAssignment()\">\n <u><b>{{activeAssignment.assignment_name}}</b> <sub> by <b>{{activeAssignment.assignment_owner_name}}</b></sub></u>\n  &nbsp;&nbsp;<button (click)=\"resetChainingUI()\"  type=\"button\" class=\"btn btn-danger\"><i class=\"fa fa-times\"></i></button>\n</span>\n\n<div *ngIf=\"userAssignments && !hasActiveAssignment()\" class=\"dropdown\">\n    <b><u><h2>Pick an Assignment to edit</h2></u></b>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item assignmentPicker clickable\" *ngFor=\"let personal_assignment of userAssignments;let idx = index\" [ngClass]=\"{'list-group-item-primary': idx%2 == 0 }\" id=\"{{personal_assignment.assignment_id}}\">\n            {{personal_assignment.assignment_name}} <sub>by <i><b>{{personal_assignment.assignment_owner_name}}</b></i></sub> <sup><b class=\"pull-right\"><i>Due {{helpers.plainDateify(personal_assignment.assignment_due)}}</i></b></sup>\n        </li>\n    </ul>\n</div>\n\n<div *ngIf=\"gradingRules\">\n    <hr>\n    <b><u><h2>Grading Rule Setup </h2></u></b>\n\n    <p class=\"text-sm text-bold bg-warning text-dark row\">\n        <small><b><i>`Owned`</i></b> rules are those that are primarily tied to this assignment whereas <b><i>`Public`</i></b> rules refer to those owned/tied by/to other assignments.</small>\n    </p>\n\n    <!-- cdkDropListGroup -->\n    <div class=\"list-container\">\n\n        <!--  [cdkDropListConnectedTo]=\"toDoList\" -->\n        <div class=\"done-container column-container col-lg-3 col-sm-12\">\n            <div class=\"list bg-warning\" cdkDropList #publicList=\"cdkDropList\" [cdkDropListData]=\"gradingRules.public\" (cdkDropListDropped)=\"onDrop($event,false,true)\" [cdkDropListConnectedTo]=\"[mappingList]\">\n                <h2>{{gradingRules.public.length || 0}} Public Rules</h2>\n                <div *ngIf=\"gradingRules.public[0]\">\n                    <mat-card *ngFor=\"let ruleItem of gradingRules.public\" cdkDrag>\n                        <mat-card-header>\n                            <mat-card-title><span class=\"idBox\">{{ruleItem.rule_id}}</span>{{ruleItem.rule_name}}</mat-card-title>\n                            <mat-card-subtitle><b>{{ruleItem.rule_method}}</b> <i>{{ruleItem.rule_path}}</i></mat-card-subtitle>\n                        </mat-card-header>\n                    </mat-card>\n                </div>\n\n            </div>\n        </div>\n\n        <!-- [cdkDropListConnectedTo]=\"[publicList]\"  -->\n        <div class=\"todo-container column-container col-lg-3 col-sm-12\">\n            <div class=\"list bg-success\" cdkDropList #ownedList=\"cdkDropList\" [cdkDropListData]=\"gradingRules.owned\" (cdkDropListDropped)=\"onDrop($event,false,true)\" [cdkDropListConnectedTo]=\"[mappingList]\">\n                <h2> {{gradingRules.owned.length || 0}} Owned Rules</h2>\n                <div *ngIf=\"gradingRules.owned[0]\">\n                    <mat-card *ngFor=\"let ruleItem of gradingRules.owned\" cdkDrag>\n                        <mat-card-header>\n                            <mat-card-title><span class=\"idBox\">{{ruleItem.rule_id}}</span>{{ruleItem.rule_name}}</mat-card-title>\n                            <mat-card-subtitle><b>{{ruleItem.rule_method}}</b> <i>{{ruleItem.rule_path}}</i></mat-card-subtitle>\n                        </mat-card-header>\n                    </mat-card>\n                </div>\n\n            </div>\n        </div>\n\n\n\n        <!-- [cdkDropListConnectedTo]=\"toDoList\" -->\n        <div class=\"done-container column-container col-lg-3 col-sm-12\">\n            <div class=\"list bg-primary\" style=\"min-height: 10vw !important;\" cdkDropList #mappingList=\"cdkDropList\" [cdkDropListData]=\"gradingSchema\" (cdkDropListDropped)=\"onDrop($event,true)\" [cdkDropListConnectedTo]=\"[publicList,ownedList,trashList]\">\n                <h2 class=\"text-white\">Grading Definition</h2>\n                <div *ngIf=\"gradingSchema[0]\">\n                    <mat-card *ngFor=\"let ruleItem of gradingSchema;index as idx;  \" cdkDrag>\n                        <span class=\"idParent float-right button\" id=\"{{ruleItem.rule_id}}-{{idx}}\">+</span>\n                        <mat-card-header>\n                            <mat-card-title> <span class=\"idBox\">{{ruleItem.rule_id}}</span> {{ruleItem.rule_name}}</mat-card-title>\n                            <mat-card-subtitle><b>{{ruleItem.rule_method}}</b> <i>{{ruleItem.rule_path}}</i></mat-card-subtitle>\n                        </mat-card-header>\n                        <span id=\"{{ruleItem.rule_id}}-{{idx}}\" *ngIf=\"ruleItem.parent_rules[0]\" class=\"parentRuleList\">\n                        Parents: {{ruleItem.parent_rules.join(',')}}\n                      </span>\n                    </mat-card>\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"done-container column-container col-lg-3 col-sm-12\">\n            <div class=\"list bg-danger\" style=\"min-height: 10vw !important;\" cdkDropList #trashList=\"cdkDropList\" [cdkDropListData]=\"ruleBin\" (cdkDropListDropped)=\"onDrop($event,true,true,true)\" [cdkDropListConnectedTo]=\"[mappingList]\">\n                <h2 class=\"text-white\">TRASH</h2>\n\n\n            </div>\n            <div *ngIf=\"gradingSchema[0]\">\n                <button class=\"btn btn-block btn-success padding\" (click)=\"saveGradingScheme()\">SAVE GRADING SETUP</button>\n            </div>\n        </div>\n\n\n    </div>\n    <!-- \n    <p>1. Define bundle type [(recipent/dependant/ has parent),(donor/links to)]</p>\n    <p>2x. (if has parent) Define extectations under &#123;expects&#125; </p>\n    <p>2x. (if has children) Define passed down value [and any transformations]</p> -->\n\n</div>\n\n\n<!-- \n\n<br>\n<br>\n<br>\n\n<h3>RULE BUNDLING/CHAINING!</h3>\n<hr>\n<p>1. Define bundle type [(recipent/dependant/ has parent),(donor/links to)]</p>\n<p>2x. (if has parent) Define extectations under &#123;expects&#125; </p>\n<p>2x. (if has children) Define passed down value [and any transformations]</p>\n<p></p>\n<p></p>\n\n<code>Grading Rules Relationship schema</code>\n<pre>\n  &#123;\n    \"expects\" : &#123; &#125;,\n    \"status_code\" : \"NUMERIC_CODE_EXPECTED\",  <i style=\"color:gray;\">// if code isn't matched, [attempt transformations in safe mode or skip to next]</i>\n    <span style=\"color:blue\">\"transformations\" : &#123;</span>\n      <span style=\"color:red\">\"regex\" : &#123;</span>\n        \"extract\"  : [\n          &#123;\n            \"find\": \"REGEX_PATTERN\",\n            \"in\" : \"HEADER/BODY\",\n            \"store_as\" : \"key_name\",\n            \"affects\" : \"KEYS/VALUES\"\n          &#125;\n        ]\n        \"replace\"  : [\n          &#123;\n            \"find\": \"REGEX_PATTERN\",\n            \"in\" : \"HEADER/BODY\",\n            \"with\": \"VALUE TO REPLACE WITH\"\n            \"store_as\" : \"key_name\",\n            \"affects\" : \"KEYS/VALUES\"\n          &#125;\n        ]\n      <span style=\"color:red\">&#125;</span>\n      <span style=\"color:blueviolet\">\"functions\" : [</span>\n        &#123;\n          \"find\" : \"PARAMETER_NAME\",   <i style=\"color:gray;\">// if <b>*</b> is sepecified or is left null, entire 'in' will be fed to the method </i>\n          \"in\"   :  \"HEADER/BODY\",  <i style=\"color:gray;\">// required</i>\n          \"method\" : \"ACTUAL TRANSFORM FUNCTION\", <i style=\"color:gray;\">// valid php function accepting a single parameter and expecting the transformed result</i>\n        &#125;\n      <span style=\"color:blueviolet\">]</span>\n    <span style=\"color:blue\">&#125;,</span>\n  &#125;\n</pre> -->\n\n\n\n<!--\n  ##### MAIL RELATED SETTINGS\n\n  # SMTP Non-Encrypted 25\n  autossh -fNR 25:localhost:25 ianmin2@bixbyte.io\n\n  # SMTP TLS 587\n  autossh -fNR 587:localhost:587 ianmin2@bixbyte.io\n\n  # SMTP SSL 465\n  autossh -fNR 465:localhost:465 ianmin2@bixbyte.io\n\n  # POP3 Non-Encrypted 110\n  autossh -fNR 110:localhost:110 ianmin2@bixbyte.io\n\n  # POP3 SSL 995\n  autossh -fNR 995:localhost:995 ianmin2@bixbyte.io\n-->","import { StatusCode } from './../../../models/StatusCode.model';\nimport { Assignment } from './../../../models/Assignment.model';\nimport { HttpService } from './../../../services/http.service';\nimport { MimeType } from './../../../models/MimeType.model';\nimport { StaticDataService } from './../../../services/static-data.service';\nimport { FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport {NgbCalendar, NgbDate, NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-route-manager',\n  templateUrl: './route-manager.component.html',\n  styleUrls: ['./route-manager.component.css']\n})\n\nexport class RouteManagerComponent implements OnInit {\n\n  model: NgbDateStruct;\n\n  isDisabled = (date: NgbDate, current: {month: number, year: number}) => date.month !== current.month;\n  isWeekend = (date: NgbDate) =>  this.calendar.getWeekday(date) >= 6;\n\n\n  private keyValueFormGroup(){\n    return new FormGroup({\n      key : new FormControl(),\n      value : new FormControl(),\n    });\n  }\n  private gradingSubFormGroup(){\n    return new FormGroup({\n      alternative: new FormControl(null, [Validators.required]),\n      match: new FormControl(100),\n      no_match: new FormControl(0)\n    })\n  }\n\n  private gradingSubFormArray()\n  {\n    return new FormArray([\n      // this.gradingSubFormGroup()\n    ]);\n  }\n\n  private gradingForm()\n  {\n    return new FormGroup({\n      weight : new FormControl(100,[Validators.required]),\n      match : new FormControl(100,[Validators.required]),\n      no_match : new FormControl(0),\n      matches : this.gradingSubFormArray(),\n    })\n\n  }\n\nprivate available_positions = [\"headers\",\"parameters\"];\n\nprivate available_match_positions = {\n  \"verb\": 'rule_grading.verb.matches',\n  \"path\" : 'rule_grading.path.matches',\n  \"status_code\" :'rule_grading.status_code.matches',\n  \"mime_type\": 'rule_grading.mime_type.matches'\n};\n\n  newRouteForm:FormGroup;\n\n  mimeTypes: MimeType[];\n\n  statusCodes: StatusCode[];\n\n  headers : string[];\n\n  assignments: Assignment[];\n\n  constructor(private staticData: StaticDataService, private http: HttpService, private calendar: NgbCalendar ) { }\n\n  ngOnInit(): void {\n\n    //@ Load the list of available mime types\n    this.mimeTypes =  this.staticData.MimeTypes();\n\n    this.headers = this.staticData.Headers();\n\n    this.statusCodes = this.staticData.StatusCodes();\n\n    //@ Fetch and load a list of assignments\n    this.http.getAssignments().subscribe(d=>{\n      if (d.response !=200) alert(d.data.message);\n      this.assignments = d.data.message;\n    })\n\n    //@ Define the reactive form structure\n    this.newRouteForm = new FormGroup({\n      rule_method : new FormControl(null, Validators.required),\n      rule_path : new FormControl(null, Validators.required),\n      rule_name : new FormControl(null, Validators.required),\n      rule_description : new FormControl(null, Validators.required),\n      rule_assignment : new FormControl(null,Validators.required),\n      rule_expected_status_code : new FormControl('200',Validators.required),\n      rule_expected_data_type : new FormControl('text/html', Validators.required),\n      rule_expected_data : new FormControl(null),\n      rule_headers : new FormArray([]),\n      rule_parameters : new FormArray([\n        // this.keyValueFormGroup()\n      ]),\n      rule_grading: new FormGroup({\n        verb : this.gradingForm(),\n        path : this.gradingForm(),\n        status_code : this.gradingForm(),\n        mime_type : this.gradingForm()\n      }),\n    });\n\n  }\n\n\n  //@ The form submission handler\n  saveRoute()\n  {\n\n    // console.dir(this.newRouteForm);\n\n    /**\n     * @ Format the data into the proper format\n     *\n     * rule_grading {verb,path,status_ced,mime_type}\n     *\n     */\n\n    //@ Match & assign grading related parameters\n\n    let gradingControls = this.newRouteForm.controls['rule_grading']['controls'];\n\n    let grading_keys = Object.keys(this.newRouteForm.controls['rule_grading']['controls']);\n\n    grading_keys.forEach(gradingKey=>{\n      // console.log(`\\n${gradingKey}`);\n      // console.dir(gradingControls[gradingKey]);\n\n      let gradingSubMatchControls = gradingControls[gradingKey]['controls']['matches'];\n      let gradingSubMatchControlValues = gradingSubMatchControls['controls'].map(a=>a.value);\n       //@ Add 'value' to the 'value.matches' Array field\n      this.newRouteForm.controls['rule_grading']['value'][gradingKey]['matches'].push(...gradingSubMatchControlValues);\n       // gradingControls['value']['matches']\n    });\n\n\n    //@ Match & Assign 'rule_header' related parameters\n    let ruleHeaderValues = this.newRouteForm.controls['rule_headers']['controls'].map(a=>a.value);\n    this.newRouteForm.controls['rule_headers']['value'].push(...ruleHeaderValues);\n\n    //@ Match & Assign 'rule_parameters' related parameters\n    let ruleParameterValues = this.newRouteForm.controls['rule_parameters']['controls'].map(a=>a.value);\n    this.newRouteForm.controls['rule_parameters']['value'].push(...ruleParameterValues);\n\n    //  console.dir(this.newRouteForm);\n\n    //@ Send the data over to the server for storage\n    this.http.post(`${this.http.applicationHost}?command=add&table=rule`, this.newRouteForm.value).subscribe((resp:{response,data:{message,command}})=>{\n      if(resp.response != 200)\n      {\n        alert(resp.data.message);\n      }\n      else\n      {\n        this.newRouteForm.reset();\n        alert(\"Grading rule Saved!\");\n      }\n     });\n\n    //  this.newRouteForm.controls['rule_grading']['value'][gradingKey]['matches']\n\n  }\n\n  newGradingPair()\n  {\n\n  }\n\n  newValuePair( formDesignation: string)\n  {\n    if( this.available_positions.indexOf(formDesignation.toLowerCase()) != -1)\n    {\n      (<FormArray>this.newRouteForm.get(`rule_${formDesignation.toLowerCase()}`))['controls'].push(this.keyValueFormGroup());\n    }\n    else\n    {\n      console.log(`\\n_____________________\\nINVALID VALUE PAIR POSITION\\n_____________________\\nTry ${this.available_positions.join('\\n')}\\n_____________________\\n`);\n    }\n  }\n\n  removeValuePair(formDesignation: string, idx : number)\n  {\n    if( this.available_positions.indexOf(formDesignation.toLowerCase()) != -1)\n    {\n      (<FormArray>this.newRouteForm.get(`rule_${formDesignation.toLowerCase()}`))['controls'].splice(idx,1);\n    }\n    else\n    {\n      console.log(`\\n_____________________\\nINVALID VALUE PAIR POSITION\\n_____________________\\nTry ${this.available_positions.join('\\n')}\\n_____________________\\n`);\n    }\n  }\n\n  newGradingCriteria( gradingPosition : string )\n  {\n    if( this.available_match_positions[gradingPosition.toLowerCase()]){\n      (<FormArray>this.newRouteForm.get(this.available_match_positions[gradingPosition.toLowerCase()]))['controls'].push(this.gradingSubFormGroup());\n    }\n    else\n    {\n      console.log(`\\n_____________________\\nINVALID GRADING POSITION\\n_____________________\\nTry ${Object.keys(this.available_match_positions).join('\\n')}\\n_____________________\\n`);\n    }\n  }\n\n  removeGradingCriteria( gradingPosition : string, idx:number )\n  {\n    if( this.available_match_positions[gradingPosition.toLowerCase()]){\n      (<FormArray>this.newRouteForm.get(this.available_match_positions[gradingPosition.toLowerCase()]))['controls'].splice(idx,1);\n    }\n    else\n    {\n      console.log(`\\n_____________________\\nINVALID GRADING POSITION\\n_____________________\\nTry ${this.available_positions.join('\\n')}\\n_____________________\\n`);\n    }\n  }\n\n}\n","<div class=\"card\">\n    <form class=\"border border-light p-5\" [formGroup]=\"newRouteForm\" (ngSubmit)=\"saveRoute()\">\n\n        <p class=\"h4 mb-4 text-center\">NEW GRADING RULE</p>\n\n        <hr>\n\n        <div id=\"sortable-form\" class=\"droptrue drop-list ui-sortable\">\n\n\n            <!-- NAME, ASSIGNMENT & EXPECTED STATUS CODE-->\n            <div class=\"row col-12 bg-black padding\">\n                <div class=\"col-md-4\">\n                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                        <label for=\"rule_name\">Rule Name<sup style=\"color:crimson;\">*</sup></label>\n                        <input type=\"text\" id=\"rule_name\" name=\"rule_name\" formControlName=\"rule_name\" class=\"form-control  form-control-lg mb-4\" placeholder=\"Rule name\">\n                    </div>\n                </div>\n\n                <div class=\"col-md-3\">\n                    <div data-template=\"dSelectTemp\" data-popover=\"select\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"rule_assignment\">Assignment<sup style=\"color:crimson;\">*</sup></label>\n                        <input class=\"browser-default form-control form-control-lg mb-4\" list=\"rule_assignment\" name=\"rule_assignment\" formControlName=\"rule_assignment\" placeholder=\"Assignment \">\n                        <datalist id=\"rule_assignment\" *ngIf=\"assignments\">\n                            <option  *ngFor=\"let asgnt of assignments\" [value]=\"asgnt.assignment_id\">{{asgnt.assignment_name}}</option>\n                        </datalist>\n                        <datalist id=\"rule_assignment\" *ngIf=\"!assignments\">\n                          <option value=\"\" selected>Refresh to Load Assignments</option>\n                      </datalist>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"rule_expected_status_code\">Expected Status Code<sup style=\"color:crimson;\">*</sup></label>\n                        <!-- <input type=\"number\" id=\"rule_expected_status_code\" name=\"rule_expected_status_code\" class=\"form-control form-control-lg mb-4\" value=\"200\" placeholder=\"Expected Status Code\"> -->\n                        <input class=\"browser-default form-control form-control-lg mb-4\" list=\"rule_expected_status_code\" name=\"rule_expected_status_code\" formControlName=\"rule_expected_status_code\" placeholder=\"Expected Status Code\">\n                        <datalist id=\"rule_expected_status_code\" *ngIf=\"statusCodes\">\n                            <option  *ngFor=\"let statCode of statusCodes\" [value]=\"statCode.code\">{{statCode.description}}</option>\n                        </datalist>\n                        <datalist id=\"rule_expected_status_code\" *ngIf=\"!statusCodes\">\n                            <option value=\"\" selected>Refresh to Load Status Codes</option>\n                        </datalist>\n                    </div>\n                </div>\n\n            </div>\n            <!-- END OF --- NAME, ASSIGNMENT & EXPECTED STATUS CODE-->\n\n\n            <!-- METHOD, PATH & RESPONSE TYPE -->\n            <div class=\"row col-12 bg-black padding\">\n                <div class=\"col-md-3\">\n                    <div data-template=\"dSelectTemp\" data-popover=\"select\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"rule_method\"> HTTP Method<sup style=\"color:crimson;\">*</sup></label>\n                        <!-- <input class=\"browser-default form-control mb-4\" placeholder=\"HTTP Method\" list=\"rule_method\" name=\"rule_method\"> -->\n\n                        <select class=\"custom-select custom-select-lg mb-4\" name=\"rule_method\" formControlName=\"rule_method\" id=\"rule_method\">\n                          <option  selected>GET</option>\n                          <option  >POST</option>\n                          <option  >PUT</option>\n                          <option  >DELETE</option>\n                          <option >OPTIONS</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                        <label for=\"rule_path\">Path<sup style=\"color:crimson;\">*</sup></label>\n                        <input type=\"text\" id=\"rule_path\" name=\"rule_path\" formControlName=\"rule_path\" class=\"form-control form-control-lg mb-4\" placeholder=\"/path\">\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div data-template=\"dSelectTemp\" data-popover=\"select\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"rule_expected_data_type\">Response Format<sup style=\"color:crimson;\">*</sup></label>\n                        <input class=\"browser-default form-control form-control-lg mb-4\" placeholder=\"Response Type\" list=\"rule_expected_data_type\" formControlName=\"rule_expected_data_type\" name=\"rule_expected_data_type\">\n\n                        <datalist id=\"rule_expected_data_type\" *ngIf=\"mimeTypes\">\n                            <option  *ngFor=\"let typ of mimeTypes \" [value]=\"typ.mime\">{{typ.description}}</option>\n                        </datalist>\n                        <datalist id=\"rule_expected_data_type\" *ngIf=\"!mimeTypes \">\n                          <option value=\" \" selected>Refresh to Load Response Formats</option>\n                      </datalist>\n                    </div>\n                </div>\n            </div>\n            <!-- END OF ---  METHOD, PATH & RESPONSE TYPE -->\n\n\n            <!--DESCRIPTION & EXPECTED DATA -->\n            <div class=\"row col-12 bg-black padding \">\n\n                <div class=\"col-md-6 \">\n                    <div data-template=\"dTextareaTemp \" data-popover=\"textarea \" class=\" \" style=\"position: relative; left: 0px; top: 0px; \" data-original-title=\" \" title=\" \">\n                        <label for=\"rule_description \">Description<sup style=\"color:crimson;\">*</sup></label>\n                        <textarea id=\"rule_description \" name=\"rule_description\" formControlName=\"rule_description\" class=\"form-control form-control-lg mb-4 \" placeholder=\"Assignment Description \"></textarea>\n                    </div>\n                </div>\n\n                <div class=\"col-md-5 \">\n                    <div data-template=\"dTextareaTemp \" data-popover=\"textarea\" class=\" \" style=\"position: relative; left: 0px; top: 0px; \" data-original-title=\" \" title=\" \">\n                        <label for=\"rule_expected_data \">Expected Data</label>\n                        <textarea id=\"rule_expected_data \" name=\"rule_expected_data\" formControlName=\"rule_expected_data\" class=\"form-control form-control-lg mb-4 \" placeholder=\"Expected response data \"></textarea>\n                    </div>\n                </div>\n\n            </div>\n            <!-- EO ---DESCRIPTION & EXPECTED DATA -->\n\n\n            <!-- HEADERS -->\n            <div class=\"row col-12 bg-black\">\n                <hr class=\"row col-12\" style=\"background-color: white !important;\">\n                <div class=\"col-md-4 col-sm-6\">\n                    HEADERS\n                </div>\n                <div class=\"col-md-2 col-sm-6\">\n                    <button class=\"btn btn-success btn-sm\" type=\"button\" (click)=\"newValuePair('headers')\">ADD</button>\n                </div>\n            </div>\n\n            <div class=\"row col-12 bg-black padding\" formArrayName=\"rule_headers\">\n\n                <div class=\"col-12 d-none d-xs-none d-sm-none d-md-block d-l-block d-xl-block\" *ngIf=\"newRouteForm.get('rule_headers')['controls'].length > 0\">\n                    <div class=\"row col-12\">\n                        <div class=\"col-4\">\n                            <label>Header</label>\n                        </div>\n                        <div class=\"col-4\">\n                            <label>Value</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-12 row\" *ngFor=\"let hdrVal of newRouteForm.get('rule_headers')['controls'];let idx = index\">\n\n                    <div class=\"col-12 row form-group\" [formGroupName]=\"idx\">\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                <label class=\"d-sm-block d-md-none d-lg-none d-l-none d-xl-none \">Header<sup style=\"color:crimson;\">*</sup></label>\n                                <input formControlName=\"key\" class=\"browser-default form-control form-control-lg mb-4\" placeholder=\"Header\" list=\"rule_headers\" name=\"key\">\n                                <datalist id=\"rule_headers\" *ngIf=\"headers\">\n                                    <option  *ngFor=\"let hdr of headers \" >{{hdr}}</option>\n                                </datalist>\n                                <datalist id=\"rule_headers\" *ngIf=\"!headers\">\n                                  <option value=\" \" selected>Refresh to Load Header Types Formats</option>\n                                </datalist>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"d-sm-block d-md-none d-lg-none d-l-none d-xl-none \">Value<sup style=\"color:crimson;\">*</sup></label>\n                                <input formControlName=\"value\" type=\"text\" name=\"value\" class=\"form-control form-control-lg mb-4\" placeholder=\"Value\">\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-2\">\n                            <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\" (click)=\"removeValuePair('headers',idx)\">X</button>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n            <!-- END OF --- HEADERS -->\n\n\n            <!-- BODY PARAMETERS -->\n            <div class=\"row col-12 bg-black\">\n                <hr class=\"row col-12\" style=\"background-color: white !important;\">\n                <div class=\"col-md-4 col-sm-6\">\n                    BODY PARAMETERS\n                </div>\n                <div class=\"col-md-2 col-sm-6\">\n                    <button class=\"btn btn-success btn-sm\" type=\"button\" (click)=\"newValuePair('parameters')\">ADD</button>\n                </div>\n            </div>\n\n            <div class=\"row col-12 bg-black padding\" formArrayName=\"rule_parameters\">\n\n                <div class=\"col-12 d-none d-xs-none d-sm-none d-md-block d-l-block d-xl-block\" *ngIf=\"newRouteForm.get('rule_parameters')['controls'].length > 0\">\n                    <div class=\"row col-12\">\n                        <div class=\"col-4\">\n                            <label>Parameter</label>\n                        </div>\n                        <div class=\"col-4\">\n                            <label>Value</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-12 row form-group\" *ngFor=\"let parVal of newRouteForm.get('rule_parameters')['controls'];let pidx = index\">\n\n                    <div class=\"col-12 row form-group\" [formGroupName]=\"pidx\">\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                <label class=\"d-sm-block d-md-none d-lg-none d-l-none d-xl-none \">Parameter<sup style=\"color:crimson;\">*</sup></label>\n                                <input type=\"text\" name=\"key\" class=\"form-control form-control-lg mb-4\" placeholder=\"Parameter\" formControlName=\"key\">\n                            </div>\n                        </div>\n\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"d-sm-block d-md-none d-lg-none d-l-none d-xl-none \">Value<sup style=\"color:crimson;\">*</sup></label>\n                                <input type=\"text\" name=\"value\" class=\"form-control form-control-lg mb-4\" placeholder=\"Value\" formControlName=\"value\">\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-2\">\n                            <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\" (click)=\"removeValuePair('parameters',pidx)\">X</button>\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n\n\n\n            </div>\n            <!-- END OF --- BODY PARAMETERS -->\n\n\n            <div class=\"row col-12 bg-black\">\n                <hr class=\"row col-12\" style=\"background-color: white !important;\">\n                <div class=\"col-md-4 col-sm-6\">\n                    GRADING\n                </div>\n                <!-- <div class=\"col-md-2 col-sm-6\">\n                    <button class=\"btn btn-success btn-sm\" type=\"button\" (click)=\"newValuePair('parameters')\">ADD</button>\n                </div> -->\n            </div>\n\n            <div class=\"row col-12 bg-black\" formGroupName=\"rule_grading\">\n\n                <!-- SO -- PATH -->\n                <div class=\"col-12 row\" formGroupName=\"path\">\n\n                    <div class=\"row col-12 bg-black\">\n                        <hr class=\"row col-12\" style=\"background-color: white !important;\">\n                        <div class=\"col-md-1\"></div>\n                        <div class=\"col-md-4 col-sm-6\">\n                            Path\n                        </div>\n                        <div class=\"col-md-2 col-sm-6\">\n                            <button class=\"btn btn-success btn-sm\" type=\"button\" (click)=\"newGradingCriteria('path')\">ADD</button>\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 row form-group\">\n\n                        <!-- <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">weight</label>\n                                <input type=\"text\" name=\"weight\" class=\"form-control form-control-lg mb-4\" placeholder=\"Parameter\" formControlName=\"weight\">\n                            </div>\n                        </div> -->\n\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">Match Marks<sup style=\"color:crimson;\">*</sup> </label>\n                                <input type=\"number\" name=\"match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for positive match\" formControlName=\"match\">\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">No Match Marks</label>\n                                <input type=\"number\" name=\"no_match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for negative match\" formControlName=\"no_match\">\n                            </div>\n                        </div>\n\n                        <!-- <div class=\"col-md-2\">\n                            <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\">X</button>\n                        </div> -->\n\n                    </div>\n\n\n                    <div class=\"col-12 row\" formGroupName=\"matches\">\n\n                        <div class=\"col-12 row form-group\" *ngFor=\"let parVal of newRouteForm.get('rule_grading.path.matches')['controls'];let pathidx = index\">\n\n                            <div class=\"col-12 row form-group\" formGroupName=\"{{pathidx}}\">\n\n                                <div class=\"col-md-4\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">Alternate Path<sup style=\"color:crimson;\">*</sup></label>\n                                        <input type=\"text\" name=\"alternative\" class=\"form-control form-control-lg mb-4\" placeholder=\"Parameter\" formControlName=\"alternative\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">Match Marks<sup style=\"color:crimson;\">*</sup></label>\n                                        <input type=\"number\" name=\"match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for positive match\" formControlName=\"match\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">No Match Marks</label>\n                                        <input type=\"number\" name=\"no_match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for negative match\" formControlName=\"no_match\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-2\">\n                                    <div style=\"margin-top: 1.8em !important;\"></div>\n                                    <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\" (click)=\"removeGradingCriteria('path',pathidx)\">X</button>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n                <!-- EO -- PATH -->\n\n                <!-- SO -- VERB -->\n                <div class=\"col-12 row\" formGroupName=\"verb\">\n\n                    <div class=\"row col-12 bg-black\">\n                        <hr class=\"row col-12\" style=\"background-color: white !important;\">\n                        <div class=\"col-md-1\"></div>\n                        <div class=\"col-md-4 col-sm-6\">\n                            Verb\n                        </div>\n                        <div class=\"col-md-2 col-sm-6\">\n                            <button class=\"btn btn-success btn-sm\" type=\"button\" (click)=\"newGradingCriteria('verb')\">ADD</button>\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 row form-group\">\n\n                        <!-- <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">weight</label>\n                                <input type=\"text\" name=\"weight\" class=\"form-control form-control-lg mb-4\" placeholder=\"Parameter\" formControlName=\"weight\">\n                            </div>\n                        </div> -->\n\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">Match Marks<sup style=\"color:crimson;\">*</sup></label>\n                                <input type=\"number\" name=\"match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for positive match\" formControlName=\"match\">\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">No Match Marks</label>\n                                <input type=\"number\" name=\"no_match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for negative match\" formControlName=\"no_match\">\n                            </div>\n                        </div>\n\n                        <!-- <div class=\"col-md-2\">\n                          <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\">X</button>\n                      </div> -->\n\n                    </div>\n\n\n                    <div class=\"col-12 row\" formGroupName=\"matches\">\n\n                        <div class=\"col-12 row form-group\" *ngFor=\"let parVal of newRouteForm.get('rule_grading.verb.matches')['controls'];let verbidx = index\">\n\n                            <div class=\"col-12 row form-group\" formGroupName=\"{{verbidx}}\">\n\n                                <div class=\"col-md-4\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">Alternate verb<sup style=\"color:crimson;\">*</sup></label>\n                                        <select class=\"custom-select custom-select-lg mb-4\" name=\"alternative\" id=\"alternative\" formControlName=\"alternative\">\n                                          <option >GET</option>\n                                          <option >POST</option>\n                                          <option >PUT</option>\n                                          <option >DELETE</option>\n                                          <option >OPTIONS</option>\n                                        </select>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">Match Marks<sup style=\"color:crimson;\">*</sup></label>\n                                        <input type=\"number\" name=\"match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for positive match\" formControlName=\"match\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">No Match Marks</label>\n                                        <input type=\"number\" name=\"no_match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for negative match\" formControlName=\"no_match\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-2\">\n                                    <div style=\"margin-top: 1.8em !important;\"></div>\n                                    <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\" (click)=\"removeGradingCriteria('verb',verbidx)\">X</button>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n                <!-- EO - VERB -->\n\n                <!-- SO --STATUS CODE  -->\n                <div class=\"col-12 row\" formGroupName=\"status_code\">\n\n                    <div class=\"row col-12 bg-black\">\n                        <hr class=\"row col-12\" style=\"background-color: white !important;\">\n                        <div class=\"col-md-1\"></div>\n                        <div class=\"col-md-4 col-sm-6\">\n                            Status Code\n                        </div>\n                        <div class=\"col-md-2 col-sm-6\">\n                            <button class=\"btn btn-success btn-sm\" type=\"button\" (click)=\"newGradingCriteria('status_code')\">ADD</button>\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 row form-group\">\n\n                        <!-- <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">weight</label>\n                                <input type=\"text\" name=\"weight\" class=\"form-control form-control-lg mb-4\" placeholder=\"Parameter\" formControlName=\"weight\">\n                            </div>\n                        </div> -->\n\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">Match Marks<sup style=\"color:crimson;\">*</sup></label>\n                                <input type=\"number\" name=\"match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for positive match\" formControlName=\"match\">\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">No Match Marks</label>\n                                <input type=\"number\" name=\"no_match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for negative match\" formControlName=\"no_match\">\n                            </div>\n                        </div>\n\n                        <!-- <div class=\"col-md-2\">\n                          <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\">X</button>\n                      </div> -->\n\n                    </div>\n\n\n                    <div class=\"col-12 row\" formGroupName=\"matches\">\n\n                        <div class=\"col-12 row form-group\" *ngFor=\"let parVal of newRouteForm.get('rule_grading.status_code.matches')['controls'];let status_codeidx = index\">\n\n                            <div class=\"col-12 row form-group\" formGroupName=\"{{status_codeidx}}\">\n\n                                <div class=\"col-md-4\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">Alternate status_code<sup style=\"color:crimson;\">*</sup></label>\n                                        <input type=\"text\" name=\"alternative\" class=\"form-control form-control-lg mb-4\" placeholder=\"Alternate Status Code\" formControlName=\"alternative\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">Match Marks<sup style=\"color:crimson;\">*</sup></label>\n                                        <input type=\"number\" name=\"match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for positive match\" formControlName=\"match\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">No Match Marks</label>\n                                        <input type=\"number\" name=\"no_match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for negative match\" formControlName=\"no_match\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-2\">\n                                    <div style=\"margin-top: 1.8em !important;\"></div>\n                                    <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\" (click)=\"removeGradingCriteria('status_code',status_codeidx)\">X</button>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n                <!-- EO STATUS CODE -->\n\n                <!-- SO -- MIME TYPE -->\n                <div class=\"col-12 row\" formGroupName=\"mime_type\">\n\n                    <div class=\"row col-12 bg-black\">\n                        <hr class=\"row col-12\" style=\"background-color: white !important;\">\n                        <div class=\"col-md-1\"></div>\n                        <div class=\"col-md-4 col-sm-6\">\n                            MIME Type\n                        </div>\n                        <div class=\"col-md-2 col-sm-6\">\n                            <button class=\"btn btn-success btn-sm\" type=\"button\" (click)=\"newGradingCriteria('mime_type')\">ADD</button>\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 row form-group\">\n\n                        <!-- <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">weight</label>\n                                <input type=\"text\" name=\"weight\" class=\"form-control form-control-lg mb-4\" placeholder=\"Parameter\" formControlName=\"weight\">\n                            </div>\n                        </div> -->\n\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">Match Marks<sup style=\"color:crimson;\">*</sup></label>\n                                <input type=\"number\" name=\"match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for positive match\" formControlName=\"match\">\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-4\">\n                            <div data-template=\"dTextInputTemp\" data-popover=\"input\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                                <label class=\"\">No Match Marks</label>\n                                <input type=\"number\" name=\"no_match\" class=\"form-control form-control-lg mb-4\" placeholder=\"Marks for negative match\" formControlName=\"no_match\">\n                            </div>\n                        </div>\n\n                        <!-- <div class=\"col-md-2\">\n                          <button class=\"btn btn-block btn-outline-danger btn-lg\" type=\"button\">X</button>\n                      </div> -->\n\n                    </div>\n\n\n                    <div class=\"col-12 row\" formGroupName=\"matches\">\n\n                        <div class=\"col-12 row form-group\" *ngFor=\"let parVal of newRouteForm.get('rule_grading.mime_type.matches')['controls'];let mime_typeidx = index\">\n\n                            <div class=\"col-12 row form-group\" formGroupName=\"{{mime_typeidx}}\">\n\n                                <div class=\"col-md-4\">\n                                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                                        <label class=\"\">Alternate mime_type<sup style=\"color:crimson;\">*</sup></label>\n                                        <!-- <input type=\"text\" class=\"form-control form-control-lg mb-4 \"> -->\n                                        <input name=\"alternative\" class=\"browser-default form-control form-control-lg mb-4 \" placeholder=\"Alternate Mime Type\" formControlName=\"alternative\" list=\"rule_expected_data_type\">\n\n                                        <datalist id=\"rule_expected_data_type\" *ngIf=\"mimeTypes\">\n                                            <option  *ngFor=\"let typ of mimeTypes\" [value]=\"typ.mime\">{{typ.description}}</option>\n                                        </datalist>\n                                        <datalist id=\"rule_expected_data_type\" *ngIf=\"!mimeTypes\">\n                                          <option value=\" \" selected>Refresh to Load Response Formats</option>\n                                        </datalist>\n\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3 \">\n                                    <div data-template=\"dTextInputTemp \" data-popover=\"input \" class=\" \" style=\"position: relative; left: 0px; top: 0px; \" data-original-title=\" \" title=\" \">\n                                        <label class=\" \">Match Marks<sup style=\"color:crimson;\">*</sup></label>\n                                        <input type=\"number \" name=\"match\" class=\"form-control form-control-lg mb-4 \" placeholder=\"Marks for positive match \" formControlName=\"match\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3 \">\n                                    <div data-template=\"dTextInputTemp \" data-popover=\"input \" class=\" \" style=\"position: relative; left: 0px; top: 0px; \" data-original-title=\" \" title=\" \">\n                                        <label class=\" \">No Match Marks</label>\n                                        <input type=\"number \" name=\"no_match \" class=\"form-control form-control-lg mb-4 \" placeholder=\"Marks for negative match\" formControlName=\"no_match\">\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-2 \">\n                                    <div style=\"margin-top: 1.8em !important; \"></div>\n                                    <button class=\"btn btn-block btn-outline-danger btn-lg \" type=\"button \" (click)=\"removeGradingCriteria( 'mime_type',mime_typeidx) \">X</button>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n                <!-- SO -- MIME TYPE -->\n\n            </div>\n\n\n        </div>\n\n        <button class=\"btn btn-lg btn-info btn-block my-4\" [disabled]=\"!newRouteForm.valid\" type=\"submit \">Add Grading Rule</button>\n\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assignment-grading',\n  templateUrl: './assignment-grading.component.html',\n  styleUrls: ['./assignment-grading.component.css']\n})\nexport class AssignmentGradingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>assignment-grading works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assignment-placeholder',\n  templateUrl: './assignment-placeholder.component.html',\n  styleUrls: ['./assignment-placeholder.component.css']\n})\nexport class AssignmentPlaceholderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>\n    <i style=\"color:red; text-align: center; margin: 0 auto;width:100%;\"> Welcome to your grading assistant</i>\n</h4>\n\n<div class=\"col-12\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card bg-dark\">\n                <div class=\"card-header\" id=\"headingZero\">\n                    <h5 class=\"mb-0\">\n                        <p class=\"extra-padded\" routerLink=\"/assignments/new\" routerLinkActive=\"active\">\n                            ADD A NEW ASSIGNMENT\n                        </p>\n                    </h5>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"card bg-dark\">\n                <div class=\"card-header\" id=\"headingZeroAlpha\">\n                    <h5 class=\"mb-0\">\n                        <p class=\"extra-padded\" routerLink=\"/assignments/browse\" routerLinkActive=\"active\">\n                            VIEW EXISTING ASSIGNMENTS\n                        </p>\n                    </h5>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"card bg-dark\">\n                <div class=\"card-header\" id=\"headingZeroAlpha\">\n                    <h5 class=\"mb-0\">\n                        <p class=\"extra-padded\" routerLink=\"/assignments/generator/routes\" routerLinkActive=\"active\">\n                            ADD GRADING RULE\n                        </p>\n                    </h5>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"card bg-dark\">\n                <div class=\"card-header\" id=\"headingZeroAlpha\">\n                    <h5 class=\"mb-0\">\n                        <p class=\"extra-padded\" routerLink=\"/assignments/generator/review\" routerLinkActive=\"active\">\n                            VIEW GRADING RULES\n                        </p>\n                    </h5>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <p></p>\n\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card bg-dark\">\n                <div class=\"card-header\" id=\"headingZeroAlpha\">\n                    <h5 class=\"mb-0\">\n                        <p class=\"extra-padded\" routerLink=\"/assignments/generator/chaining\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n                            BUNDLE/GROUP RULES\n                        </p>\n                    </h5>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"card bg-dark\">\n                <div class=\"card-header\" id=\"headingZeroAlpha\">\n                    <h5 class=\"mb-0\">\n                        <p class=\"extra-padded\" routerLink=\"/assignments/browse/chainings\" routerLinkActive=\"active\">\n                            VIEW BUNDLED RULES\n                        </p>\n                    </h5>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"card bg-dark\">\n                <div class=\"card-header\" id=\"headingZeroAlpha\">\n                    <h5 class=\"mb-0\">\n                        <p class=\"extra-padded\" routerLink=\"/assignments/submit\" routerLinkActive=\"active\">\n                            SUBMIT AN ASSIGNMENT\n                        </p>\n                    </h5>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"card bg-dark\">\n                <div class=\"card-header\" id=\"headingZeroAlpha\">\n                    <h5 class=\"mb-0\">\n                        <p class=\"extra-padded\" routerLink=\"/assignments/browse/submissions\" routerLinkActive=\"active\">\n                            VIEW ASSIGNMENT SUBMISSIONS\n                        </p>\n                    </h5>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <p></p>\n\n\n</div>","import { Attempts } from './../../models/Attempts.model';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ByteGraderHelperService } from '../../services/byte-grader-helper.service';\nimport { Assignment } from '../../models/Assignment.model';\nimport { HttpService } from '../../services/http.service';\nimport { ViewChild } from '@angular/core';\nimport { AttemptStoreService } from 'src/app/services/stor/attempts.stor.service';\nimport { Subscription } from 'rxjs';\nimport { GraderResponse } from 'src/app/models/Response.model';\n\ndeclare var $;\n\n\n@Component({\n  selector: 'app-assignment-submission-browser',\n  templateUrl: './assignment-submission-browser.component.html',\n  styleUrls: ['./assignment-submission-browser.component.css']\n})\nexport class AssignmentSubmissionBrowserComponent implements OnInit {\n  dataTable: any;\n\n  attemptsSubscription : Subscription;\n\n  @ViewChild('assignmentSubmissionBrowser', {static: true}) table;\n\n  public attempts:Attempts[];\n\n  constructor(private http: HttpService, private helpers: ByteGraderHelperService, private router: Router, private ngZone: NgZone,  private attemptsUpdater: AttemptStoreService) {\n    // (window as any).pdfMake.vfs = (window as any).pdfFonts.pdfMake.vfs;\n    // console.dir(window)\n  }\n\n  ngOnInit(): void {\n\n    //  this.http.countAllRecords().then(console.dir)\n\n    this.initializeDataTable();\n\n    this.attemptsSubscription = this.attemptsUpdater.attemptsUpdated.subscribe((attempts: Attempts[]) => {\n      console.log(`\\n\\nReceived new data .... redrawing table!`)\n      this.attempts = attempts;\n      this.dataTable.DataTable().destroy();;\n      this.initializeDataTable();\n    });\n\n    this.fetchAssignmentAttempts();\n\n    // $(document).on('click','.openAssignment', (d) =>\n    // {\n    //   d.stopPropagation()\n    //   let identifier = $(d.currentTarget).attr('id');\n    //   let assignmentData = JSON.parse(($(d.currentTarget).attr('data')||'{}').replace(/'/ig,'\"').replace(/&apos;/ig,\"'\"));\n    //   this.navigate([`/attempts/browse/rubric/${identifier}`], { state: assignmentData });\n    //   // /attempts/browse/rubric/${identifier}\n\n    // })\n\n\n      //@ Attempt to get the simple report\n      $(document).on('click','.simpleReport', (d) =>\n      {\n        d.stopPropagation()\n        let identifier = $(d.currentTarget).attr('id');\n\n        //@ Navigate to the relevant route \n        let targetUrl = `${this.http.applicationHost}?command=get&table=gradereport&attempt_id=${identifier}`;   \n        window.open(targetUrl, \"_blank\");  \n\n      });\n\n      // @ Attempt to get the complex report\n      $(document).on('click','.complexReport', (d) =>\n      {\n        d.stopPropagation()\n        let identifier = $(d.currentTarget).attr('id');\n\n        //@ Navigate to the relevant route \n        let targetUrl = `${this.http.applicationHost}?command=get&table=gradereport&attempt_id=${identifier}&technical=true`;   \n        window.open(targetUrl, \"_blank\");  \n\n      })\n\n\n  }\n\n  private navigate(commands: any[], pars: any = {}): void {\n    this.ngZone.run(() => this.router.navigate(commands,pars)).then();\n  }\n\n  formOptions(){\n    return {\n      scrollY: this.helpers.getPageHeight(),\n      data: this.attempts,\n      columns: [\n        {title: 'ID', data: 'attempt_id'},\n        {title: 'Name', data: 'attempt_name', className: 'editable',\n          render:  (data, type, row) => this.helpers.stringify(data,'teal')\n        },\n        {title: 'Submitor\\'s ID', data: 'attempt_student_identifier', className: 'editable', sortable: false,\n          render:  (data, type, row) => this.helpers.stringify(data,undefined)\n        },\n        {title: 'App URL', data: 'attempt_main_path', className: 'editable', sortable: false,\n          render:  (data, type, row) => this.helpers.stringify(data,undefined)\n        },\n        {title: 'Assignment', data: 'attempt_assignment',\n          render:  (data, type, row) => this.helpers.stringify(row.attempt_assignment,'blue')\n        },\n        {\n          title: 'Grade Report',\n          sortable: false,\n          data: null,\n          render:  (data,type,row) => `\n            <button class='btn btn-primary simpleReport' id=\"${row.attempt_id}\" data=\"${this.helpers.str(row).replace(/'/ig,'&apos;').replace(/\"/ig,\"'\")}\"> Simple </button> \n            &nbsp;&nbsp;\n            <button class='btn btn-danger complexReport' id=\"${row.attempt_id}\" data=\"${this.helpers.str(row).replace(/'/ig,'&apos;').replace(/\"/ig,\"'\")}\"> Detailed </button>\n          `\n        },\n        {\n          title: 'Submitted',\n          data: 'attempt_submission_time', className: 'editable',\n          render:  (data, type, row) => this.helpers.stringify(data,'crimson')\n        },\n        {\n          title: 'Created', data: 'created_at',\n          render:  (data, type, row) => this.helpers.dateify(data,'green')\n        },\n        {\n          title: 'Last Modified',\n          data: 'updated_at',\n          render:  (data, type, row) => this.helpers.dateify(data,undefined)\n        },\n      ]\n      ,dom: 'Bfrtip',        // Needs button container\n      select: true, //'single',\n      responsive: true,\n      altEditor: true,     // Enable altEditor\n      buttons: [\n         'excel',\n         'pdf',\n         {\n          extend: 'selected', // Bind to Selected row\n          text: 'Edit',\n          name: 'edit'        // do not change name\n      },\n      // {\n      //     extend: 'selected', // Bind to Selected row\n      //     text: 'Delete',\n      //     name: 'delete'      // do not change name\n      // },\n      {\n          text: 'Refresh',\n          action:  (e, dt, node, config) => {\n            this.fetchAssignmentAttempts();\n          }\n      }\n      ],\n      onAddRow: function(datatable, rowdata, success, error) {\n          $.ajax({\n              // a tipycal url would be / with type='PUT'\n              url: `/`,\n              type: 'GET',\n              data: rowdata,\n              success: success,\n              error: error\n          });\n      },\n      onDeleteRow: function(datatable, rowdata, success, error) {\n          $.ajax({\n              // a tipycal url would be /{id} with type='DELETE'\n              url: `/`,\n              type: 'GET',\n              data: rowdata,\n              success: success,\n              error: error\n          });\n      },\n      onEditRow: (datatable, rowdata, success, error) => {\n\n        var that = datatable;\n            var dt = datatable.s.dt;\n\n            // Complete new row data\n            var rowDataArray = {};\n\n            var adata = dt.rows({\n                selected: true\n            });\n\n            // Getting the inputs from the edit-modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type!=\"file\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting the textArea from the modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter('textarea').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting Files from the modal\n            var numFilesQueued = 0;\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type=\"file\"]').each(function(i) {\n                if ($(this).prop('files')[0]) {\n                    ++numFilesQueued;\n                    that.getBase64($(this).prop('files')[0], function(filecontent) {\n                        rowDataArray[$(this).attr('id')] = filecontent;\n                        --numFilesQueued;\n                    });\n                }\n            });\n\n            // Getting the checkbox from the modal\n            $('form[name=\"altEditor-edit-form-' +datatable.random_id + '\"] *').filter(':input[type=\"checkbox\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = i //this?.checked;\n            });\n\n\n          const {\n            attempt_id ,\n            attempt_name,\n            attempt_student_identifier,\n            attempt_main_path,\n            attempt_submission_time,\n            attempt_grading_time,\n            attempt_grade_breakdown,\n            attempt_grade_complete,\n            attempt_assignment,\n            updated_at\n          } = <Attempts>rowDataArray;\n\n            this.http.postLocal({\n              table : 'attempt',\n              command : 'update',\n              attempt_id ,\n            attempt_name,\n            attempt_student_identifier,\n            attempt_main_path,\n            attempt_submission_time,\n            attempt_grading_time,\n            attempt_grade_breakdown,\n            attempt_grade_complete,\n            attempt_assignment,\n            updated_at\n            }).subscribe((d: GraderResponse)=> {\n              if(d.response == 200) this.fetchAssignmentAttempts();\n                console.log(`Assignment Submission Data update attempted!\\nProof:`)\n                console.dir(d)\n            },err=> {\n              console.error();\n            }, ()=> {\n\n              $('.modal,.modal-backdrop').hide();\n\n            })\n\n            /*\n              const { attempt_id ,\n                attempt_name,\n                attempt_student_identifier,\n                attempt_main_path,\n                attempt_submission_time,\n                attempt_grading_time,\n                attempt_grade_breakdown,\n                attempt_grade_complete,\n                attempt_assignment,\n                created_at,\n                updated_at } = rowdata;\n\n              this.http.getLocal({\n                table : 'attempts',\n                command : 'update',\n                attempt_id ,\n                attempt_name,\n                attempt_student_identifier,\n                attempt_main_path,\n                attempt_submission_time,\n                attempt_grading_time,\n                attempt_grade_breakdown,\n                attempt_grade_complete,\n                attempt_assignment,\n                created_at,\n                updated_at\n              }).subscribe((d: GraderResponse)=> {\n                  console.log(`Assignment Data update attempted!\\nProof:`)\n                  console.dir(d)\n              })\n            */\n\n      }\n    };\n  }\n\n  initializeDataTable() {\n    this.dataTable = $(this.table.nativeElement);\n    // console.dir(this.dataTable);\n    this.dataTable.DataTable(this.formOptions());\n  }\n\n  fetchAssignmentAttempts(){\n    this.http.getAttempts().subscribe((d: GraderResponse)=> {\n      if(d.response == 200){\n        // console.dir(d.data.message);\n        this.attemptsUpdater.resetAttempts(<Attempts[]>d.data.message);\n       }\n       else\n       {\n         alert(`${d.data.message.toString()}`);\n       }\n    }, err => {});\n  }\n\n\n  ngOnDestroy(){\n    this.attemptsSubscription.unsubscribe();\n  }\n}\n","<p class=\"h4 mb-4 text-center\">Submitted Assignment Attempts</p>\n<table #assignmentSubmissionBrowser class=\"display table table-responsive table-sm nowrap\" style=\"width:100%\">\n</table>","import { Assignment } from './../../models/Assignment.model';\nimport { Attempts } from './../../models/Attempts.model';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AssignmentsStoreService } from 'src/app/services/stor/assignments.stor.service';\nimport { Subscription } from 'rxjs';\nimport { GraderResponse } from 'src/app/models/Response.model';\n\n@Component({\n  selector: 'app-assignment-submission',\n  templateUrl: './assignment-submission.component.html',\n  styleUrls: ['./assignment-submission.component.css']\n})\nexport class AssignmentSubmissionComponent implements OnInit {\n\n  assignmentsSubscription : Subscription;\n  newAttemptForm:FormGroup;\n\n  attempts : Attempts[];\n\n  assignments : Assignment[];\n\n  constructor( private http: HttpService,  private assignmentsUpdater: AssignmentsStoreService ) { }\n\n  ngOnInit(): void {\n\n    this.assignmentsSubscription = this.assignmentsUpdater.assignmentsUpdated.subscribe((assignments: Assignment[]) => {\n      console.log(`\\n\\nReceived new data .... redrawing table!`)\n      this.assignments = assignments;\n    });\n\n    this.newAttemptForm = new FormGroup({\n      attempt_name  : new FormControl(null, [Validators.required, Validators.minLength(3)]),\n      attempt_student_identifier  : new FormControl(null, Validators.required),\n      attempt_assignment : new FormControl(null, Validators.required),\n      attempt_main_path : new FormControl(null,[Validators.required, Validators.minLength(14)]),\n    });\n\n    this.fetchAssignments();\n\n  }\n\n  fetchAssignments(){\n    this.http.getAssignments().subscribe((d: GraderResponse)=> {\n      if(d.response == 200){\n        // console.dir(d.data.message);\n        this.assignmentsUpdater.resetAssignments(<Assignment[]>d.data.message);\n       }\n       else\n       {\n         alert(`${d.data.message.toString()}`);\n       }\n    }, err => {});\n  }\n\n  saveAttempt()\n  {\n    // console.dir(this.newAttemptForm)\n    this.http.addAttempt(this.newAttemptForm.value).subscribe((d:{response,data:{message,command}})=>{\n      if(d.response != 200)\n      {\n        alert(d.data.message);\n      }\n      else\n      {\n        this.newAttemptForm.reset();\n        alert(\"Assignment Attempt Submitted!\");\n      }\n    })\n  }\n\n  ngOnDestroy(){\n    this.assignmentsSubscription.unsubscribe();\n  }\n\n\n}\n","<div class=\"card\">\n    <form class=\"border border-light p-5\" [formGroup]=\"newAttemptForm\" (ngSubmit)=\"saveAttempt()\">\n\n        <u class=\"h4 mb-12 text-left font-weight-bold \">SUBMIT AN ASSIGNMENT</u>\n        <p></p>\n\n        <div id=\"sortable-form\" class=\"droptrue drop-list ui-sortable\">\n\n            <div class=\"col-12 row\">\n                <div class=\"col-md-4\">\n                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                        <label for=\"attempt_name\">Your Name<sup style=\"color:crimson;\">*</sup></label>\n                        <input type=\"text\" id=\"attempt_name\" formControlName=\"attempt_name\" name=\"attempt_name\" class=\"form-control form-control-lg mb-4\" placeholder=\"Submitor's Name\">\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div data-template=\"dTextInputTemp\" data-popover=\"input\" style=\"position: relative; left: 0px; top: 0px;\" class=\"\" data-original-title=\"\" title=\"\">\n                        <label for=\"attempt_student_identifier\">Student Id<sup style=\"color:crimson;\">*</sup></label>\n                        <input type=\"text\" id=\"attempt_student_identifier\" formControlName=\"attempt_student_identifier\" name=\"attempt_student_identifier\" class=\"form-control form-control-lg mb-4\" placeholder=\"Student Id\">\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div data-template=\"dSelectTemp\" data-popover=\"select\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"attempt_assignment\">Assignment<sup style=\"color:crimson;\">*</sup></label>\n                        <input class=\"browser-default form-control form-control-lg mb-4\" list=\"attempt_assignment\" name=\"attempt_assignment\" formControlName=\"attempt_assignment\" placeholder=\"Assignment \">\n                        <datalist id=\"attempt_assignment\" *ngIf=\"assignments\">\n                        <option  *ngFor=\"let asgnt of assignments\" [value]=\"asgnt.assignment_id\">{{asgnt.assignment_name}}</option>\n                    </datalist>\n                        <datalist id=\"attempt_assignment\" *ngIf=\"!assignments\">\n                      <option value=\"\" selected>Refresh to Load Assignments</option>\n                  </datalist>\n                    </div>\n                </div>\n                <!-- <div class=\"col-md-4\">\n                    <div data-template=\"dSelectTemp\" data-popover=\"select\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"assignment_owner\">Owner<sup style=\"color:crimson;\">*</sup></label>\n                        <input class=\"browser-default form-control form-control-lg mb-4\" list=\"assignment_owner\" formControlName=\"assignment_owner\" name=\"assignment_owner\" placeholder=\"Assignment Owner\">\n                        <datalist id=\"assignment_owner\" *ngIf=\"users\">\n                      <option  *ngFor=\"let owner of users\" [value]=\"owner.id\">{{owner.name}}</option>\n                  </datalist>\n                        <datalist id=\"rule_assignment\" *ngIf=\"!users\">\n                      <option value=\"\" selected>Refresh to Load owners</option>\n                  </datalist>\n                    </div>\n                </div> -->\n\n            </div>\n\n\n\n            <div class=\"row col-12\">\n                <div class=\"col-md-12\">\n                    <div data-template=\"dTextareaTemp\" data-popover=\"textarea\" class=\"\" style=\"position: relative; left: 0px; top: 0px;\" data-original-title=\"\" title=\"\">\n                        <label for=\"attempt_main_path\">Main Application URL<sup style=\"color:crimson;\">*</sup></label>\n                        <input type=\"text\" id=\"attempt_main_path\" formControlName=\"attempt_main_path\" name=\"attempt_main_path\" class=\"form-control mb-4 form-control-lg\" placeholder=\"Your Application's URL\" />\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n        <pre>\n         \n        </pre>\n\n        <button class=\"btn btn-info btn-block my-4 btn-lg\" [disabled]=\"!newAttemptForm.valid\" type=\"submit\">Submit Assignment</button>\n\n    </form>\n</div>","import { Chaining } from './../../models/Chaining.model';\nimport { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GraderResponse } from 'src/app/models/Response.model';\nimport { Rule } from 'src/app/models/Rule.model';\nimport { ByteGraderHelperService } from 'src/app/services/byte-grader-helper.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { ChainingsStoreService } from 'src/app/services/stor/chainings.stor.service';\n\n@Component({\n  selector: 'app-assignment-viewer',\n  templateUrl: './assignment-viewer.component.html',\n  styleUrls: ['./assignment-viewer.component.css']\n})\nexport class AssignmentViewerComponent implements OnInit {\n\n  dataTable: any;\n  chainingsSubscription : Subscription;\n\n  @ViewChild('ruleChainingBrowser', {static: true}) table;\n  constructor(private http: HttpService, private helpers: ByteGraderHelperService, private router:Router, private ngZone: NgZone,  private chainingsUpdater: ChainingsStoreService ) { }\n\n  public routes: Chaining[];\n\n  ngOnInit(): void {\n\n    this.initializeDataTable();\n    this.fetchRoutes();\n    this.chainingsSubscription = this.chainingsUpdater.chainingsUpdateWatcher.subscribe((chainings: Chaining[]) => {\n      console.log(`\\n\\nReceived new data .... redrawing table!`)\n      this.routes = chainings;\n      this.dataTable.DataTable().destroy();;\n      this.initializeDataTable();\n    });\n\n  }\n\n\n  private navigate(commands: any[], pars: any = {}): void {\n    this.ngZone.run(() => this.router.navigate(commands,pars)).then();\n  }\n\n  formOptions()\n  {\n\n    return {\n      scrollY: this.helpers.getPageHeight(),\n      data: this.routes,\n      columns: [\n\n          { title: \"Id\", data: 'chaining_id'  },\n          {\n            title: \"Assignment\",\n            data: 'chaining_assignment' ,\n            render : (data, type, row) => this.helpers.stringify(`${row.assignment_name} <sub>(${row.assignment_owner_name})</sub>`,'teal')\n          },         \n          { title: \"Created At\", data: 'created_at',\n            render:  (data, type, row) => this.helpers.dateify(data,'green')\n          },\n          { title: \"Updated At\", data: 'updated_at',\n            render:  (data, type, row) => this.helpers.dateify(data,'orange')\n          },\n          {\n            title : \"Bundling Data\", data: \"chaining_rules\", \n            render : (data, type, row) => this.helpers.jsonify(data)\n          }\n      ],\n      dom: 'Bfrtip',        // Needs button container\n      select: true, //'single',\n      responsive: true,\n      altEditor: true,     // Enable altEditor\n      buttons: [\n         'excel',\n         'pdf',\n         {\n          extend: 'selected', // Bind to Selected row\n          text: 'Edit',\n          name: 'edit'        // do not change name\n      },\n      // {\n      //     extend: 'selected', // Bind to Selected row\n      //     text: 'Delete',\n      //     name: 'delete'      // do not change name\n      // },\n      {\n          text: 'Refresh',\n          action:  (e, dt, node, config) => {\n            this.fetchRoutes();\n          }\n      }\n      ],\n      onEditRow: (datatable, rowdata, success, error) => {\n\n        var that = datatable;\n            var dt = datatable.s.dt;\n\n            // Complete new row data\n            var rowDataArray = {};\n\n            var adata = dt.rows({\n                selected: true\n            });\n\n            // Getting the inputs from the edit-modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type!=\"file\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting the textArea from the modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter('textarea').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting Files from the modal\n            var numFilesQueued = 0;\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type=\"file\"]').each(function(i) {\n                if ($(this).prop('files')[0]) {\n                    ++numFilesQueued;\n                    that.getBase64($(this).prop('files')[0], function(filecontent) {\n                        rowDataArray[$(this).attr('id')] = filecontent;\n                        --numFilesQueued;\n                    });\n                }\n            });\n\n            // Getting the checkbox from the modal\n            $('form[name=\"altEditor-edit-form-' +datatable.random_id + '\"] *').filter(':input[type=\"checkbox\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = i; // this.checked;\n            });\n\n\n          const {\n            chaining_id,\n            chaining_assignment,\n            chaining_rules            \n          } = <Chaining>rowDataArray;\n\n            this.http.postLocal({\n              table : 'chaining',\n              command : 'update',\n              chaining_id,\n            chaining_assignment,\n            chaining_rules            \n            }).subscribe((d: GraderResponse)=> {\n                if(d.response == 200) this.fetchRoutes();\n                console.log(`Rule Bundling Data update attempted!\\nProof:`)\n                console.dir(d)\n            },err=> {\n              console.error();\n            }, ()=> {\n              $('.modal,.modal-backdrop').hide();\n            })\n\n      }\n    };\n  }\n\n  initializeDataTable() { \n    this.dataTable = $(this.table.nativeElement);\n    // console.dir(this.dataTable);\n    this.dataTable.DataTable(this.formOptions());\n  }\n\n  fetchRoutes(){\n    this.http.getChaining().subscribe((d: GraderResponse)=> {\n      if(d.response == 200){\n        this.chainingsUpdater.resetChainings(<Chaining[]>d.data.message);\n      }\n      else\n      {\n        alert(`${d.data.message.toString()}`);\n      }\n    }, err => {});\n  }\n\n  ngOnDestroy(){\n    this.chainingsSubscription.unsubscribe();\n  }\n\n\n}\n","<p class=\"h4 mb-4 text-center\">Grading Rules</p>\n<table #ruleChainingBrowser class=\"display table table-responsive table-sm\" style=\"width:100%\">\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assignments-menu',\n  templateUrl: './assignments-menu.component.html',\n  styleUrls: ['./assignments-menu.component.css']\n})\nexport class AssignmentsMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"accordion\">\n\n\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"headingZero\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-block\" routerLink=\"/assignments/new\" routerLinkActive=\"active\">\n              NEW ASSIGNMENT\n            </button>\n            </h5>\n        </div>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"headingZeroAlpha\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-block\" routerLink=\"/assignments/browse\" routerLinkActive=\"active\">\n            VIEW ASSIGNMENTS\n          </button>\n            </h5>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"headingOne\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-block\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                  GRADING RULES & LINKS\n                </button>\n            </h5>\n        </div>\n        <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n\n                <div class=\"list-group\">\n\n                    <button type=\"button\" class=\"list-group-item list-group-item-action btn-sm\" routerLink=\"/assignments/generator/routes\" routerLinkActive=\"active\">\n                        ADD RULE\n                    </button>\n                    <!-- <button type=\"button\" class=\"list-group-item list-group-item-action\" routerLink=\"/assignments/generator/paths\" routerLinkActive=\"active\">\n                        DEFINE PATH\n                      </button>\n                    <button type=\"button\" class=\"list-group-item list-group-item-action\" routerLink=\"/assignments/generator/methods\" routerLinkActive=\"active\">\n                        DEFINE METHOD\n                      </button>\n                    <button type=\"button\" class=\"list-group-item list-group-item-action\" routerLink=\"/assignments/generator/outputs\" routerLinkActive=\"active\">\n                        EXPECTED OUTPUTS  ...  status codes, data-type, marks ...\n                      </button> -->\n                    <button type=\"button\" class=\"list-group-item list-group-item-action btn-sm\" routerLink=\"/assignments/generator/review\" routerLinkActive=\"active\">\n                        VIEW RULES\n                    </button>\n                    <button type=\"button\" class=\"list-group-item list-group-item-action btn-sm\" routerLink=\"/assignments/generator/chaining\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n                      BUNDLE/GROUP RULES\n                    </button>\n                    <!-- -->\n                    <button type=\"button\" class=\"list-group-item list-group-item-action btn-sm\" routerLink=\"/assignments/browse/chainings\" routerLinkActive=\"active\">\n                        BUNDLED RULES\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n\n\n    <!-- DATABASE & DEFINITIONS -->\n    <div class=\"card\">\n        <div class=\"card-header\" id=\"headingTwo\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-block collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n                      SUBMISSIONS\n                    </button>\n            </h5>\n        </div>\n        <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n\n                <div class=\"list-group\">\n                    <button type=\"button\" class=\"list-group-item list-group-item-action btn-block btn-sm\" routerLink=\"/assignments/submit\" routerLinkActive=\"active\">\n                     NEW SUBMISSION\n                    </button>\n                    <button type=\"button\" class=\"list-group-item list-group-item-action btn-block btn-sm\" routerLink=\"/assignments/browse/submissions\" routerLinkActive=\"active\">\n                      VIEW SUBMISSIONS\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assignments',\n  templateUrl: './assignments.component.html',\n  styleUrls: ['./assignments.component.css']\n})\nexport class AssignmentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-2\">\n        <app-assignments-menu></app-assignments-menu>\n    </div>\n    <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import { Attempts } from './../../models/Attempts.model';\nimport { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Chaining } from 'src/app/models/Chaining.model';\nimport { GraderResponse } from 'src/app/models/Response.model';\nimport { ByteGraderHelperService } from 'src/app/services/byte-grader-helper.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { AttemptStoreService } from 'src/app/services/stor/attempts.stor.service';\n\n@Component({\n  selector: 'app-grades-browser',\n  templateUrl: './grades-browser.component.html',\n  styleUrls: ['./grades-browser.component.css']\n})\nexport class GradesBrowserComponent implements OnInit {\n\n\n  dataTable: any;\n  attemptsSubscription : Subscription;\n\n  @ViewChild('gradesBrowser', {static: true}) table;\n  constructor(private http: HttpService, private helpers: ByteGraderHelperService, private router:Router, private ngZone: NgZone,  private attemptUpdater: AttemptStoreService ) { }\n\n  public attempts: Attempts[];\n\n  ngOnInit(): void {\n\n    this.initializeDataTable();\n    this.fetchAttempts();\n    this.attemptsSubscription = this.attemptUpdater.attemptsUpdated.subscribe((chainings: Attempts[]) => {\n      console.log(`\\n\\nReceived new data .... redrawing table!`);\n      this.attempts = chainings;\n      this.dataTable.DataTable().destroy();;\n      this.initializeDataTable();\n    });\n\n  }\n\n\n  private navigate(commands: any[], pars: any = {}): void {\n    this.ngZone.run(() => this.router.navigate(commands,pars)).then();\n  }\n\n  formOptions()\n  {\n\n    return {\n      scrollY: this.helpers.getPageHeight(),\n      data: this.attempts,\n      columns: [\n\n          { title: \"Id\", data: 'attempt_id'  },\n          {\n            title: \"Assignment\",\n            data: 'assignment_name' ,\n            render : (data, type, row) => this.helpers.stringify(`${row.assignment_name} <sub>(${row.assignment_owner_name})</sub>`,'teal')\n          },  \n          {\n            title: \"Student\",\n            data: 'attempt_name' ,\n            render : (data, type, row) => this.helpers.stringify(`${row.attempt_name} <sub>(${row.attempt_student_identifier})</sub>`,'deepskyblue')\n          }, \n          {\n            title: \"Application host\",\n            data: 'attempt_main_path' \n          }, \n          {\n            title : \"Grade\", data: \"attempt_grade\", \n            render : (data, type, row) =>\n            {\n              data = this.helpers.json(data||{ });\n              return  (data.possible) ? \n                this.helpers.stringify(`${data.total} of ${data.possible} <sub>(${data.percentage}%)</sub>`,'teal')\n                :  this.helpers.stringify(`No data`,'red');\n            },       \n          }, \n          {\n            title: \"Is Graded\",\n            data: 'attempt_grade_complete',\n            render: (data,type,row) => (data) ? 'true' : 'false'\n          }, \n          { \n            title: \"Submitted At\", \n            data: 'created_at',\n            render:  (data, type, row) => this.helpers.dateify(data,'green')\n          },\n          { \n            title: \"Last graded at\", \n            data: 'updated_at',\n            render:  (data, type, row) => this.helpers.dateify(data,'orange')\n          },         \n      ],\n      dom: 'Bfrtip',        // Needs button container\n      select: true, //'single',\n      responsive: true,\n      altEditor: true,     // Enable altEditor\n      buttons: [\n         'excel',\n         'pdf',\n         {\n          extend: 'selected', // Bind to Selected row\n          text: 'Edit',\n          name: 'edit'        // do not change name\n      },\n      // {\n      //     extend: 'selected', // Bind to Selected row\n      //     text: 'Delete',\n      //     name: 'delete'      // do not change name\n      // },\n      {\n          text: 'Refresh',\n          action:  (e, dt, node, config) => {\n            this.fetchAttempts();\n          }\n      }\n      ],\n      onEditRow: (datatable, rowdata, success, error) => {\n\n        var that = datatable;\n            var dt = datatable.s.dt;\n\n            // Complete new row data\n            var rowDataArray = {};\n\n            var adata = dt.rows({\n                selected: true\n            });\n\n            // Getting the inputs from the edit-modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type!=\"file\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting the textArea from the modal\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter('textarea').each(function(i) {\n                rowDataArray[$(this).attr('id')] = $(this).val();\n            });\n\n            //Getting Files from the modal\n            var numFilesQueued = 0;\n            $('form[name=\"altEditor-edit-form-' + datatable.random_id + '\"] *').filter(':input[type=\"file\"]').each(function(i) {\n                if ($(this).prop('files')[0]) {\n                    ++numFilesQueued;\n                    that.getBase64($(this).prop('files')[0], function(filecontent) {\n                        rowDataArray[$(this).attr('id')] = filecontent;\n                        --numFilesQueued;\n                    });\n                }\n            });\n\n            // Getting the checkbox from the modal\n            $('form[name=\"altEditor-edit-form-' +datatable.random_id + '\"] *').filter(':input[type=\"checkbox\"]').each(function(i) {\n                rowDataArray[$(this).attr('id')] = i; // this.checked;\n            });\n\n\n          const {\n            attempt_id,\n            attempt_name,\n            attempt_student_identifier,\n            attempt_main_path,\n            attempt_assignment            \n          } = <Attempts>rowDataArray;\n\n            this.http.postLocal({\n              table : 'attempts',\n              command : 'update',\n              attempt_id,\n              attempt_name,\n              attempt_student_identifier,\n              attempt_main_path,\n              attempt_assignment,           \n            }).subscribe((d: GraderResponse)=> {\n                if(d.response == 200) this.fetchAttempts();\n                console.log(`Assignment Submission Data update attempted!\\nProof:`)\n                console.dir(d)\n            },err=> {\n              console.error();\n            }, ()=> {\n              $('.modal,.modal-backdrop').hide();\n            })\n\n      }\n    };\n  }\n\n  initializeDataTable() { \n    this.dataTable = $(this.table.nativeElement);\n    // console.dir(this.dataTable);\n    this.dataTable.DataTable(this.formOptions());\n  }\n\n  fetchAttempts(){\n    this.http.getAttempts().subscribe((d: GraderResponse)=> {\n      if(d.response == 200){\n        this.attemptUpdater.resetAttempts(<Attempts[]>d.data.message);\n        // this.chainingsUpdater.resetChainings(<Chaining[]>d.data.message);\n      }\n      else\n      {\n        alert(`${d.data.message.toString()}`);\n      }\n    }, err => {});\n  }\n\n  ngOnDestroy(){\n    this.attemptsSubscription.unsubscribe();\n  }\n\n\n}\n","<p class=\"h4 mb-4 text-center\">Assignment Grades</p>\n<table #gradesBrowser class=\"display table table-responsive table-sm\" style=\"width:100%\">\n</table>","\n// import { Component, OnInit } from '@angular/core';\n\n// @Component({\n//   selector: 'app-grades-placeholder',\n//   templateUrl: './grades-placeholder.component.html',\n//   styleUrls: ['./grades-placeholder.component.css']\n// })\n// export class GradesPlaceholderComponent implements OnInit {\n\n//   constructor() { }\n\n//   ngOnInit(): void {\n//   }\n\n// }\n\n\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable, NgZone, OnInit} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject, Observable, of as observableOf, Subscription} from 'rxjs';\nimport {CdkDragDrop} from '@angular/cdk/drag-drop';\nimport { Router } from '@angular/router';\nimport { GraderResponse } from 'src/app/models/Response.model';\nimport { ByteGraderHelperService } from './../../services/byte-grader-helper.service';\nimport { Rule } from './../../models/Rule.model';\nimport { HttpService } from 'src/app/services/http.service';\nimport { AssignmentsStoreService } from 'src/app/services/stor/assignments.stor.service';\nimport { Assignment } from 'src/app/models/Assignment.model';\n\n/**\n * File node data with nested structure.\n * Each node has a filename, and a type or a list of children.\n */\nexport class FileNode {\n  id: string;\n  children: FileNode[];\n  filename: string;\n  type: any;\n}\n\n/** Flat node with expandable and level information */\nexport class FileFlatNode {\n  constructor(\n    public expandable: boolean,\n    public filename: string,\n    public level: number,\n    public type: any,\n    public id: string\n  ) {}\n}\n\n\nexport class RuleNode {\n  id: string;\n  children: RuleNode[];\n  ruleName: string;\n  ruleData: Rule;\n}\n\nexport class RuleFlatNode {\n  constructor(\n    public expandable: boolean,\n    public title: string,\n    public level: number,\n    public type: any,\n    public id: string\n  ) {}\n}\n\n/**\n * The file structure tree data in string. The data could be parsed into a Json object\n */\nconst TREE_DATA = JSON.stringify({\n  Applications: {\n    Calendar: 'app',\n    Chrome: 'app',\n    Webstorm: 'app'\n  },\n  Documents: {\n    angular: {\n      src: {\n        compiler: 'ts',\n        core: 'ts'\n      }\n    },\n    material2: {\n      src: {\n        button: 'ts',\n        checkbox: 'ts',\n        input: 'ts'\n      }\n    }\n  },\n  Downloads: {\n    October: 'pdf',\n    November: 'pdf',\n    Tutorial: 'html'\n  },\n  Pictures: {\n    'Photo Booth Library': {\n      Contents: 'dir',\n      Pictures: 'dir'\n    },\n    Sun: 'png',\n    Woods: 'jpg'\n  }\n});\n\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class FileAndRuleDatabase {\n  dataChange = new BehaviorSubject<FileNode[]>([]);\n\n  get data(): FileNode[] { return this.dataChange.value; }\n\n\n  // +++++++++++++++++++++++++++++++++++\n  dataRuleChange = new BehaviorSubject<RuleNode[]>([]);\n\n\n  get dataRule(): RuleNode[] { return this.dataRuleChange.value; }\n  // ***********************************\n  \n\n  constructor(private helper:ByteGraderHelperService) {\n    this.initialize();\n  }\n\n  initialize() {\n\n    // Parse the string to json object.    \n    const dataObject = this.helper.json(TREE_DATA);\n\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(dataObject, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n\n  // +++++++++++++++++++++++++++++++++++\n  initializeRule(TREE_RULE_DATA) {\n    \n    console.log(`~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`)\n    console.dir(this.helper.json(TREE_RULE_DATA));\n    console.log(`~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`)\n\n    // Parse the string to json object.\n    const dataRuleObject = this.helper.json(TREE_RULE_DATA);\n\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\n    //     file node as children.\n    const dataRule = this.buildRuleTree(dataRuleObject, 0);\n\n    // Notify the change.\n    this.dataRuleChange.next(dataRule);\n  }\n  // ***********************************\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `FileNode`.\n   */\n  buildFileTree(obj: {[key: string]: any}, level: number, parentId: string = '0'): FileNode[] {\n\n    return Object.keys(obj).reduce<FileNode[]>((accumulator, key, idx) => {\n      const value = obj[key];\n      const node = new FileNode();\n      node.filename = key;\n      /**\n       * Make sure your node has an id so we can properly rearrange the tree during drag'n'drop.\n       * By passing parentId to buildFileTree, it constructs a path of indexes which make\n       * it possible find the exact sub-array that the node was grabbed from when dropped.\n       */\n      node.id = `${parentId}/${idx}`;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1, node.id);\n        } else {\n          node.type = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  // +++++++++++++++++++++++++++++++++++\n  buildRuleTree(obj: {[key: string]: any}, level: number, parentId: string = '0'): RuleNode[] {\n   \n    console.info(`---------------------------`)\n    console.dir(obj)\n    console.info(`---------------------------`)\n\n    return Object.keys(obj).reduce<RuleNode[]>((accumulator, key, idx) => {\n      const val = obj[key];\n      const node = new RuleNode();\n      node.ruleName = key;\n\n      node.id = `${parentId}/${idx}`;\n\n      if(val!=null){\n        if(typeof val === 'object') {\n          node.children = this.buildRuleTree(val, level+1, node.id);\n        }\n        else\n        {\n          node.ruleData = val;\n        }\n      }\n\n      return accumulator.concat(node);\n\n    }, []);\n\n  }\n  // ***********************************\n\n\n}\n\n\n\n/**\n * @title Tree with flat nodes\n */\n@Component({\n  selector: 'grades-placeholder.component',\n  templateUrl: 'grades-placeholder.component.html',\n  styleUrls: ['grades-placeholder.component.css'],\n  providers: [FileAndRuleDatabase]\n})\nexport class GradesPlaceholderComponent implements OnInit {\n\n  //@ PRIVATE DATA ACCESS\n  private dataStorObj: FileAndRuleDatabase;\n\n\n  treeControl: FlatTreeControl<FileFlatNode>;\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\n  expandedNodeSet = new Set<string>();\n  dragging = false;\n  expandTimeout: any;\n  expandDelay = 1000;\n\n  // +++++++++++++++++++++++++++++++++++\n  treeRuleControl: FlatTreeControl<RuleFlatNode>;\n  treeRuleFlattener: MatTreeFlattener<RuleNode, RuleFlatNode>;\n  dataRuleSource: MatTreeFlatDataSource<RuleNode, RuleFlatNode>;\n  expandedRuleNodeSet = new Set<string>();\n  // ***********************************\n\n  assignmentsSubscription : Subscription;\n\n  public gradingRules :any;\n\n  public activeAssignment: Assignment;\n\n  public assignments:Assignment[];\n\n  public userAssignments: Assignment[];\n\n\n\n  constructor(database: FileAndRuleDatabase, private http: HttpService, public helpers: ByteGraderHelperService, private router: Router, private ngZone: NgZone,  private assignmentsUpdater: AssignmentsStoreService) {\n\n    this.dataStorObj = database;\n\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\n      this._isExpandable, this._getChildren);\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => this.rebuildTreeForData(data));\n\n     // +++++++++++++++++++++++++++++++++++\n     this.treeRuleFlattener = new MatTreeFlattener(this.transformerRule, this._getRuleLevel,\n      this._isRuleExpandable, this._getRuleChildren);\n    this.treeRuleControl = new FlatTreeControl<RuleFlatNode>(this._getRuleLevel, this._isRuleExpandable);\n    this.dataRuleSource = new MatTreeFlatDataSource(this.treeRuleControl, this.treeRuleFlattener);\n\n    // database.dataRuleChange.subscribe(this.rebuildRuleTreeForData);\n\n    // ***********************************\n\n  }\n  ngOnInit(): void {\n    this.fetchAssignmentRules(10004);\n  }\n\n  transformer = (node: FileNode, level: number) => {\n    return new FileFlatNode(!!node.children, node.filename, level, node.type, node.id);\n  }\n  private _getLevel = (node: FileFlatNode) => node.level;\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\n\n\n  // +++++++++++++++++++++++++++++++++++\n\n  transformerRule = (node: RuleNode, level: number) => {\n    return new RuleFlatNode(!!node.children, node.ruleName, level, node.ruleData, node.id);\n  }\n  private _getRuleLevel = (node: RuleFlatNode) => node.level;\n  private _isRuleExpandable = (node: RuleFlatNode) => node.expandable;\n  private _getRuleChildren = (node: RuleNode): Observable<RuleNode[]> => observableOf(node.children);\n  hasRuleChild = (_: number, _nodeData: RuleFlatNode) => _nodeData.expandable;\n\n\n  // ***********************************\n\n  /**\n   * This constructs an array of nodes that matches the DOM,\n   * and calls rememberExpandedTreeNodes to persist expand state\n   */\n  visibleNodes(): FileNode[] {\n    this.rememberExpandedTreeNodes(this.treeControl, this.expandedNodeSet);\n    const result = [];\n\n    function addExpandedChildren(node: FileNode, expanded: Set<string>) {\n      result.push(node);\n      if (expanded.has(node.id)) {\n        node.children.map(child => addExpandedChildren(child, expanded));\n      }\n    }\n    this.dataSource.data.forEach(node => {\n      addExpandedChildren(node, this.expandedNodeSet);\n    });\n    return result;\n  }\n\n  // +++++++++++++++++++++++++++++++++++\n  visibleRuleNodes(): RuleNode[] {\n    this.rememberRuleExpandedTreeNodes(this.treeRuleControl, this.expandedRuleNodeSet);\n    const result = [];\n\n    function addExpandedRuleChildren(node: RuleNode, expanded: Set<string>) {\n      result.push(node);\n      if (expanded.has(node.id)) {\n        node.children.map(child => addExpandedRuleChildren(child, expanded));\n      }\n    }\n    this.dataRuleSource.data.forEach(node => {\n      addExpandedRuleChildren(node, this.expandedRuleNodeSet);\n    });\n    return result;\n  }\n  // ***********************************\n\n  /**\n   * Handle the drop - here we rearrange the data based on the drop event,\n   * then rebuild the tree.\n   * */\n  drop(event: CdkDragDrop<string[]>) {\n    // console.log('origin/destination', event.previousIndex, event.currentIndex);\n  \n    // ignore drops outside of the tree\n    if (!event.isPointerOverContainer) return;\n\n    // construct a list of visible nodes, this will match the DOM.\n    // the cdkDragDrop event.currentIndex jives with visible nodes.\n    // it calls rememberExpandedTreeNodes to persist expand state\n    const visibleNodes = this.visibleNodes();\n\n    // deep clone the data source so we can mutate it\n    const changedData = this.helpers.json(this.helpers.str(this.dataSource.data));\n\n    // recursive find function to find siblings of node\n    function findNodeSiblings(arr: Array<any>, id: string): Array<any> {\n      let result, subResult;\n      arr.forEach(item => {\n        if (item.id === id) {\n          result = arr;\n        } else if (item.children) {\n          subResult = findNodeSiblings(item.children, id);\n          if (subResult) result = subResult;\n        }\n      });\n      return result;\n    }\n\n    // remove the node from its old place\n    const node = event.item.data;\n    const siblings = findNodeSiblings(changedData, node.id);\n    const siblingIndex = siblings.findIndex(n => n.id === node.id);\n    const nodeToInsert: FileNode = siblings.splice(siblingIndex, 1)[0];\n\n    // determine where to insert the node\n    const nodeAtDest = visibleNodes[event.currentIndex];\n    if (nodeAtDest.id === nodeToInsert.id) return;\n\n    // determine drop index relative to destination array\n    let relativeIndex = event.currentIndex; // default if no parent\n    const nodeAtDestFlatNode = this.treeControl.dataNodes.find(n => nodeAtDest.id === n.id);\n    const parent = this.getParentNode(nodeAtDestFlatNode);\n    if (parent) {\n      const parentIndex = visibleNodes.findIndex(n => n.id === parent.id) + 1;\n      relativeIndex = event.currentIndex - parentIndex;\n    }\n    // insert node \n    const newSiblings = findNodeSiblings(changedData, nodeAtDest.id);\n    if (!newSiblings) return;\n    newSiblings.splice(relativeIndex, 0, nodeToInsert);\n    \n    // rebuild tree with mutated data\n    this.rebuildTreeForData(changedData);\n  }\n\n  // +++++++++++++++++++++++++++++++++++\n  dropRule(event: CdkDragDrop<string[]>) {\n    // console.log('origin/destination', event.previousIndex, event.currentIndex);\n  \n    // ignore drops outside of the tree\n    if (!event.isPointerOverContainer) return;\n\n    // construct a list of visible nodes, this will match the DOM.\n    // the cdkDragDrop event.currentIndex jives with visible nodes.\n    // it calls rememberExpandedTreeNodes to persist expand state\n    const visibleNodes = this.visibleRuleNodes();\n\n    // deep clone the data source so we can mutate it\n    const changedData = this.helpers.json(this.helpers.str(this.dataRuleSource.data));\n\n    // recursive find function to find siblings of node\n    function findNodeSiblings(arr: Array<any>, id: string): Array<any> {\n      let result, subResult;\n      arr.forEach(item => {\n        if (item.id === id) {\n          result = arr;\n        } else if (item.children) {\n          subResult = findNodeSiblings(item.children, id);\n          if (subResult) result = subResult;\n        }\n      });\n      return result;\n    }\n\n    // remove the node from its old place\n    const node = event.item.data;\n    const siblings = findNodeSiblings(changedData, node.id);\n    const siblingIndex = siblings.findIndex(n => n.id === node.id);\n    const nodeToInsert: RuleNode = siblings.splice(siblingIndex, 1)[0];\n\n    // determine where to insert the node\n    const nodeAtDest = visibleNodes[event.currentIndex];\n    if (nodeAtDest.id === nodeToInsert.id) return;\n\n    // determine drop index relative to destination array\n    let relativeIndex = event.currentIndex; // default if no parent\n    const nodeAtDestFlatNode = this.treeRuleControl.dataNodes.find(n => nodeAtDest.id === n.id);\n    const parent = this.getRuleParentNode(nodeAtDestFlatNode);\n    if (parent) {\n      const parentIndex = visibleNodes.findIndex(n => n.id === parent.id) + 1;\n      relativeIndex = event.currentIndex - parentIndex;\n    }\n    // insert node \n    const newSiblings = findNodeSiblings(changedData, nodeAtDest.id);\n    if (!newSiblings) return;\n    newSiblings.splice(relativeIndex, 0, nodeToInsert);\n    \n    // rebuild tree with mutated data\n    this.rebuildRuleTreeForData(changedData);\n  }\n  // ***********************************\n\n  /**\n   * Experimental - opening tree nodes as you drag over them\n   */\n  dragStart() {\n    this.dragging = true;\n  }\n\n  dragEnd() {\n    this.dragging = false;\n  }\n\n  dragHover(node: FileFlatNode) {\n    if (this.dragging) {\n      clearTimeout(this.expandTimeout);\n      this.expandTimeout = setTimeout(() => {\n        this.treeControl.expand(node);\n      }, this.expandDelay);\n    }\n  }\n  // +++++++++++++++++++++++++++++++++++\n  dragRuleHover(node: RuleFlatNode) {\n    if (this.dragging) {\n      clearTimeout(this.expandTimeout);\n      this.expandTimeout = setTimeout(() => {\n        this.treeRuleControl.expand(node);\n      }, this.expandDelay);\n    }\n  }\n  // ***********************************\n  \n  dragHoverEnd() {\n    if (this.dragging) {\n      clearTimeout(this.expandTimeout);\n    }\n  }\n\n  // +++++++++++++++++++++++++++++++++++\n  dragRuleHoverEnd() {\n    if (this.dragging) {\n      clearTimeout(this.expandTimeout);\n    }\n  }\n  // ***********************************\n\n  /**\n   * The following methods are for persisting the tree expand state\n   * after being rebuilt\n   */\n\n  rebuildTreeForData(data: any) {\n    this.rememberExpandedTreeNodes(this.treeControl, this.expandedNodeSet);\n    this.dataSource.data = data;\n    this.forgetMissingExpandedNodes(this.treeControl, this.expandedNodeSet);\n    this.expandNodesById(this.treeControl.dataNodes, Array.from(this.expandedNodeSet));\n  }\n  // +++++++++++++++++++++++++++++++++++\n  rebuildRuleTreeForData(data: any) {    \n    this.rememberRuleExpandedTreeNodes(this.treeRuleControl, this.expandedRuleNodeSet);\n    this.dataRuleSource.data = data;\n    this.forgetRuleMissingExpandedNodes(this.treeRuleControl, this.expandedRuleNodeSet);\n    this.expandNodesById(this.treeRuleControl.dataNodes, Array.from(this.expandedRuleNodeSet));\n  }\n  // ***********************************\n\n  private rememberRuleExpandedTreeNodes(\n    treeControl: FlatTreeControl<RuleFlatNode>,\n    expandedNodeSet: Set<string>\n  ) {\n    if (treeControl.dataNodes) {\n      treeControl.dataNodes.forEach((node) => {\n        if (treeControl.isExpandable(node) && treeControl.isExpanded(node)) {\n          // capture latest expanded state\n          expandedNodeSet.add(node.id);\n        }\n      });\n    }\n  }\n\n  private rememberExpandedTreeNodes(\n    treeControl: FlatTreeControl<FileFlatNode>,\n    expandedNodeSet: Set<string>\n  ) {\n    if (treeControl.dataNodes) {\n      treeControl.dataNodes.forEach((node) => {\n        if (treeControl.isExpandable(node) && treeControl.isExpanded(node)) {\n          // capture latest expanded state\n          expandedNodeSet.add(node.id);\n        }\n      });\n    }\n  }\n\n  private forgetMissingExpandedNodes(\n    treeControl: FlatTreeControl<FileFlatNode>,\n    expandedNodeSet: Set<string>\n  ) {\n    if (treeControl.dataNodes) {\n      expandedNodeSet.forEach((nodeId) => {\n        // maintain expanded node state\n        if (!treeControl.dataNodes.find((n) => n.id === nodeId)) {\n          // if the tree doesn't have the previous node, remove it from the expanded list\n          expandedNodeSet.delete(nodeId);\n        }\n      });\n    }\n  }\n  \n  private forgetRuleMissingExpandedNodes(\n    treeControl: FlatTreeControl<RuleFlatNode>,\n    expandedNodeSet: Set<string>\n  ) {\n    if (treeControl.dataNodes) {\n      expandedNodeSet.forEach((nodeId) => {\n        // maintain expanded node state\n        if (!treeControl.dataNodes.find((n) => n.id === nodeId)) {\n          // if the tree doesn't have the previous node, remove it from the expanded list\n          expandedNodeSet.delete(nodeId);\n        }\n      });\n    }\n  }\n\n  private expandNodesById(flatNodes: FileFlatNode[] | RuleFlatNode[], ids: string[]) {\n    if (!flatNodes || flatNodes.length === 0) return;\n    const idSet = new Set(ids);\n    return flatNodes.forEach((node) => {\n      if (idSet.has(node.id)) {\n        this.treeControl.expand(node);\n        let parent = this.getParentNode(node);\n        while (parent) {\n          this.treeControl.expand(parent);\n          parent = this.getParentNode(parent);\n        }\n      }\n    });\n  }\n \n\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\n    const currentLevel = node.level;\n    if (currentLevel < 1) {\n      return null;\n    }\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[i];\n      if (currentNode.level < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n\n\n\n  // +++++++++++++++++++++++++++++++++++\n\n  private getRuleParentNode(node: RuleFlatNode): RuleFlatNode | null {\n    const currentLevel = node.level;\n    if (currentLevel < 1) {\n      return null;\n    }\n    const startIndex = this.treeRuleControl.dataNodes.indexOf(node) - 1;\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeRuleControl.dataNodes[i];\n      if (currentNode.level < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n\n  cnvRule( obj ){\n    console.dir(obj)\n    let kys = Object.keys(obj);\n    return kys.reduce((cm,cr)=>{ cm[cr]=this.cnvRuleChild(obj[cr]); return cm;  },{   });\n  }\n\n  cnvRuleChild (ths: Array<Rule>)\n  {\n    return ths.reduce((cum,cur,idx)=>{ cum[cur.rule_name] = `(${cur.rule_id}) ${cur.rule_method} ${cur.rule_path}`; return cum;   },{})\n  }\n\n  fetchAssignmentRules(assignmentId) {\n    this.http.getRules(assignmentId,true,true).subscribe((d: GraderResponse) => {\n      if(d.response == 200)\n      {\n\n        this.gradingRules = this.cnvRule(this.helpers.json(d.data.message));\n\n\n       this.dataStorObj.initializeRule(this.helpers.str(this.gradingRules));\n\n      }\n      else{\n        alert(`${d.data.message.toString()}`);\n      }\n    })\n  }\n  // ***********************************\n\n}","<!-- Use the mat-card-content to add the proper spacing. -->\n\n\n<!-- <div class=\"board\">\n    <div class=\"card-list mat-elevation-z1\" *ngFor=\"let track of tracks; let i=index\">\n\n        <h2 cdkDragHandle class=\"mat-h2\">{{track.title}}</h2>\n\n        <div class=\"card-list-content\" cdkDropList [id]=\"track.id\" [cdkDropListData]=\"track.tasks\" [cdkDropListConnectedTo]=\"trackIds\" (cdkDropListDropped)=\"onTaskDrop($event)\" [ngStyle]=\"{'background-color': trackColor[i]}\">\n\n\n            <mat-card style=\"margin: 2%;\" *ngFor=\"let task of track.tasks\" cdkDrag>\n\n                <mat-card-content>\n                    <h2>{{task.title}}</h2>\n                    {{task.description}}\n                </mat-card-content>\n            </mat-card>\n        </div>\n\n    </div>\n</div> -->\n\n\n<p>Drag and drop the tree nodes. Move them within the same level, or across different levels.</p>\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding cdkDrag [cdkDragData]=\"node\" (mouseenter)=\"dragHover(node)\" (mouseleave)=\"dragHoverEnd()\" (cdkDragStarted)=\"dragStart()\" (cdkDragReleased)=\"dragEnd()\">\n        <button mat-icon-button disabled></button> {{node.filename}} : {{node.type}}\n    </mat-tree-node>\n\n    <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding cdkDrag [cdkDragData]=\"node\" (mouseenter)=\"dragHover(node)\" (mouseleave)=\"dragHoverEnd()\" (cdkDragStarted)=\"dragStart()\" (cdkDragReleased)=\"dragEnd()\">\n        <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.filename\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button> {{node.filename}} : {{node.type}}\n    </mat-tree-node>\n</mat-tree>\n\n<!-- <mat-tree [dataSource]=\"dataRuleSource\" [treeControl]=\"treeRuleControl\" cdkDropList (cdkDropListDropped)=\"dropRule($event)\">\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding cdkDrag [cdkDragData]=\"node\" (mouseenter)=\"dragRuleHover(node)\" (mouseleave)=\"dragRuleHoverEnd()\" (cdkDragStarted)=\"dragStart()\" (cdkDragReleased)=\"dragEnd()\">\n        <button mat-icon-button disabled></button> {{node.rulename}} : {{node.type}}\n    </mat-tree-node>\n\n    <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding cdkDrag [cdkDragData]=\"node\" (mouseenter)=\"dragRuleHover(node)\" (mouseleave)=\"dragRuleHoverEnd()\" (cdkDragStarted)=\"dragStart()\" (cdkDragReleased)=\"dragEnd()\">\n        <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.rulename\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button> {{node.filename}} : {{node.type}}\n    </mat-tree-node>\n</mat-tree> -->\n\n<p>Check out the <a href=\"https://medium.com/briebug-blog/angular-implementing-drag-and-drop-in-a-material-tree-f96b9fe40f81\" target=\"_blank\">complete write-up here</a>.</p>\n<!-- Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grades-reviewer',\n  templateUrl: './grades-reviewer.component.html',\n  styleUrls: ['./grades-reviewer.component.css']\n})\nexport class GradesReviewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>grades-reviewer works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grades-viewer',\n  templateUrl: './grades-viewer.component.html',\n  styleUrls: ['./grades-viewer.component.css']\n})\nexport class GradesViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>grades-viewer works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grades',\n  templateUrl: './grades.component.html',\n  styleUrls: ['./grades.component.css']\n})\nexport class GradesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  selectedPath:string = \"Assignments\"\n\n  @Input() title:string;\n  constructor() {\n\n    this.title = (this.title) ? this.title : \"ByteGrader\";\n\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n\n}\n","<nav class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-black\" style=\"background-color: #E10A0A;\">\n    <a class=\"navbar-brand bg-main logo\" href=\"#\">{{title}}</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n  <span class=\"navbar-toggler-icon\"></span>\n</button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n        <ul class=\"navbar-nav mr-auto\">\n            <byte-menu-button customClass=\"\" title=\"Assignments\" targetUrl=\"/assignments\"></byte-menu-button>\n            <byte-menu-button customClass=\"\" title=\"Grades\" targetUrl=\"/grades\"></byte-menu-button>\n            <byte-menu-button customClass=\"\" title=\"Submit Assignment\" targetUrl=\"/submissions\"></byte-menu-button>\n            <!-- <byte-menu-dropdown isAlignedRight=\"false\" title=\"ASSIGNMENTS\" targetUrl=\"/assignments\" customClass=\"\" subMenuItems=\"[\n              { 'customClass': '', 'targetUrl': '/assignments/new', 'title': 'New Assignment', 'isolated': false, 'action': null },\n              {'customClass': '', 'targetUrl': '/assignments/browse', 'title': 'Browse Assignments', 'isolated': false, 'action': null }\n              ]\"></byte-menu-dropdown>\n            <byte-menu-dropdown isAlignedRight=\"false\" title=\"GRADES\" targetUrl=\"/grades\" customClass=\"\" subMenuItems=\"[\n              { 'customClass': '', 'targetUrl': '/grades/browse', 'title': 'View Grades', 'isolated': false, 'action': null },\n              { 'customClass': '', 'targetUrl': '/grades/review', 'title': 'Review Grades', 'isolated': false, 'action': null }\n              ]\"></byte-menu-dropdown> -->\n        </ul>\n\n        <ul class=\"navbar-nav\">\n\n            <byte-menu-dropdown isAlignedRight=\"true\" title=\"Manage\" targetUrl=\"/\" customClass=\"\" subMenuItems=\"[\n              { 'customClass': '', 'targetUrl': '/nada', 'title': 'Save Data', 'isolated': false, 'action': null },\n              { 'customClass': '', 'targetUrl': '/nada', 'title': 'Fetch Data', 'isolated': false, 'action': null },\n              {'customClass': '', 'targetUrl': '/nada', 'title': 'Something Else Here', 'isolated': true, 'action': null }\n              ]\"></byte-menu-dropdown>\n\n        </ul>\n        <!-- <byte-menu-right></byte-menu-right> -->\n    </div>\n</nav>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'byte-menu-button',\n  templateUrl: './menu-button.component.html',\n  styleUrls: ['./menu-button.component.css']\n})\nexport class MenuButtonComponent implements OnInit {\n\n  // @Output() pathSelected = new EventEmitter<string>();\n\n  @Input() customClass:string;\n  @Input() targetUrl:string;\n  @Input() title:string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  // onSelect(path:string)\n  // {\n  //   // console.log(`\\n\\n=========================================================\\n@menu-button onSelect selecting '${path}'\\n=========================================================\\n\\n`)\n  //   this.pathSelected.emit(path);\n  // }\n\n}\n","<li class=\"nav-item {{customClass}}\">\n    <a class=\"nav-link\" routerLinkActive=\"active\" [routerLink]=\"targetUrl\" [innerText]=\"title\"></a>\n</li>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'byte-menu-dropdown',\n  templateUrl: './menu-dropdown.component.html',\n  styleUrls: ['./menu-dropdown.component.css']\n})\n\n\n\n\n\nexport class MenuDropdownComponent implements OnInit {\n\n  @Input() customClass:string = \"\";\n  @Input() targetUrl:string = \"\";\n  @Input() title:string = \"\";\n  @Input() subMenuItems: any = \"\";\n  @Input() isAlignedRight:string = \"\";\n\n\n  constructor(private router:Router) {\n\n   }\n\n  ngOnInit(): void {\n\n    let rgx = new RegExp(/\\{(.*?)\\}/ig);\n\n    this.subMenuItems = this.subMenuItems\n    .replace(/\\'/ig,'\"')\n    .match(rgx)\n    .map(itm=>JSON.parse(itm),[]);\n\n\n  }\n\n\n  doDisplayElements()\n  {\n    console.dir( this.subMenuItems);\n  }\n\n  getAlignment()\n  {\n    let v = this.isAlignedRight.toLowerCase();\n    return (v == \"true\" || v== \"y\" || v==\"1\" || v== \"yes\")  ? true : false;\n  }\n\n  navigateTo(navigationPath = '/')\n  {\n\n    let navRoute = navigationPath.split('/').filter(a=>a);\n    navRoute[0] = `${navRoute[0]? '/'+navRoute[0]: '/'}`;\n    this.router.navigate(navRoute);\n  }\n\n}\n","<li class=\"nav-item dropdown\">\n    <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" (click)=\"navigateTo(targetUrl)\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" [innerText]=\"title\">\n\n    </a>\n    <div [ngClass]=\"{'dropdown-menu-right': getAlignment()}\" class=\"dropdown-menu  bg-black\" aria-labelledby=\"navbarDropdown\">\n        <span *ngFor=\"let menuItem of subMenuItems\">\n            <div *ngIf=\"menuItem.isolated\" class=\"dropdown-divider\"></div>\n            <a (click)=\"navigateTo(menuItem.targetUrl)\" class=\"dropdown-item {{customClass}}\" (click)=\"menuItem.action\" >{{menuItem.title}}</a>\n        </span>\n\n    </div>\n</li>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'byte-menu-right',\n  templateUrl: './menu-right.component.html',\n  styleUrls: ['./menu-right.component.css']\n})\nexport class MenuRightComponent implements OnInit {\n\n  @Input() customClass:string;\n  @Input() targetUrl:string;\n  @Input() title:string;\n\n  searchString: string = \"\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  onInputChange(event:any){\n    this.searchString = event.target.value;\n  }\n\n  onSearchClick(event:any){\n    event.preventDefault();\n    console.log(\"search clicked!\")\n  }\n\n\n}\n","<form class=\"form-inline {{customClass}}\">\n    <input class=\"form-control mr-sm-2\" type=\"search\" (input)=\"onInputChange($event)\" aria-label=\"Search\">\n    <button class=\"btn btn-outline-light my-2 my-sm-0\" [disabled]=\"searchString.length <= 2\" type=\"submit\" (click)=\"onSearchClick($event)\">Search</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-wrap d-flex flex-row align-items-center\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-12 text-center\">\n                <span class=\"display-1 d-block\">\n                <b class=\"uno\">4</b>\n                <b class=\"dos\">0</b>\n                <b class=\"tres\">4</b>\n              </span>\n                <div class=\"mb-4 lead not-found-text\">The page you are looking for was not found.</div>\n                <div class=\"homing-button\">\n                    <a routerLink=\"/\" class=\"btn btn-link\">Back to Earth</a>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { LocalStorageService } from 'angular-2-local-storage';\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// @Injectable()\nexport class AuthInterceptService implements HttpInterceptor {\n\n   constructor(private _localStorage: LocalStorageService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authToken = this._localStorage.get(\"auth\");\n\n    if(!authToken) return next.handle(req);\n\n    const modifiedRequest = req.clone({\n      headers: req.headers.set('Grader-Authorization', `Bearer ${authToken}`),\n    });\n\n    return next.handle(modifiedRequest);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {  CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  // canActivate(): boolean {\n  //   if (!this.auth.isAuthenticated()) {\n  //     this.router.navigate(['auth']);\n  //     return false;\n  //   }\n  //   return true;\n  // }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if (!this.auth.isAuthenticated()) {\n            this.router.navigate(['auth']);\n            return false;\n          }\n          return true;\n  }\n}\n","import { LocalStorageService } from 'angular-2-local-storage';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n@Injectable()\nexport class AuthService {\n  private jwtHelper: JwtHelperService = new JwtHelperService();\n  constructor(private _localStorage:LocalStorageService) {}\n  // ...\n  public isAuthenticated(): boolean {\n    const token:string = this._localStorage.get('auth');\n    // Check whether the token is expired and return\n    // true or false\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {DatePipe, JsonPipe} from '@angular/common'\nimport html2canvas from 'html2canvas'\nimport  jspdf from 'jspdf'\nimport { LocalStorageService } from 'angular-2-local-storage';\nimport { User } from '../models/User.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ByteGraderHelperService {\n\n  constructor(private _localStorage: LocalStorageService)\n  {\n\n  }\n\n  jsonPipe = new JsonPipe();\n  pipe = new DatePipe('en-GB');\n\n  printPDF (elementID,target) {\n\n\n    const domElement = document.getElementById(elementID);\n\n    const ideal_height = 2040;\n\n    alert(domElement.clientHeight);\n\n\n\n\n    html2canvas(domElement, { onclone: (document) => {\n        document.getElementById('unprintable').style.visibility = 'hidden'\n      }}).then(canvas => {\n        var imgWidth = 208;\n        var imgHeight = canvas.height * imgWidth / canvas.width;\n        const contentDataURL = canvas.toDataURL('image/png')\n        let pdf = new jspdf('p', 'mm', 'letter');\n        var position = 0;\n        pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\n        pdf.save(`${target}.pdf`);\n      });\n\n\n  }\n\n  clone( data: any )\n  {\n    try {\n      return this.json(this.str(data));\n    } catch (error) {\n      return data;\n    }\n  }\n\n\n  colorize( method: string ) : string\n  {\n    switch (method.toLowerCase().replace(/\\s/ig,'')) {\n      case 'get':\n        return 'green';\n        break;\n\n      case 'post':\n        return 'brown';\n      break;\n\n      case 'put':\n        return 'orange';\n        break;\n\n      case 'delete':\n        return 'crimson'\n      break;\n\n      default:\n        return 'yellow';\n        break;\n    }\n  }\n\n  jsonify (data)\n  {\n    //@ Format the data to prettified JSON\n    return `<pre>${this.jsonPipe.transform(this.json(data))}</pre>`;\n  }\n\n  plainJsonify(data)\n  {\n    return this.jsonPipe.transform(this.json(data));\n  }\n\n  dateify (data, color)\n  {\n    //@ Format the data into a date\n    color= color ? `style='color:${color}'` : '';\n\n    return `<pre ${color}>${data ? this.pipe.transform(data.replace(/\\s\\+/ig,'+'), 'medium') : 'not specified'}</pre>`;\n  }\n\n  plainDateify(data)\n  {\n    return data ? this.pipe.transform(data.replace(/\\s\\+/ig,'+'), 'medium') : 'not specified';\n  }\n\n  stringify(data, color)\n  {\n    color= color ? `style='color:${color}'` : '';\n    return `<pre ${color}>${data}</pre>`;\n  }\n\n  plainStringify(data)\n  {\n    return this.str(data);\n  }\n\n  json  ( obj )\n  {\n    try {\n            return ( typeof(obj) === 'object' ) ? obj : JSON.parse( obj.replace(/&quot;/ig,'\"') )\n    }\n    catch(e)\n    {\n        return obj;\n    }\n  }\n\n\n  str ( obj )\n  {\n    try {\n        return ( typeof(obj) === \"object\" ) ? JSON.stringify(obj) : obj ;\n    } catch (error) {\n        return obj;\n    }\n  }\n\n  getPageHeight()\n  {\n\n    const body = document.body,\n    html = document.documentElement;\n\n    return Math.min( body.scrollHeight, body.offsetHeight,html.clientHeight, html.scrollHeight, html.offsetHeight ) - 500;\n\n  }\n\n  getUserInfo()\n  {\n\n    const userToken: string = this._localStorage.get('auth');\n    if(!userToken) return <User>{};\n    return <User>this.json(atob(userToken.split('.')[1]));\n\n  }\n\n\n}\n","import { LoginModel } from './../models/Login.model';\nimport { Attempts } from './../models/Attempts.model';\nimport { Chaining } from './../models/Chaining.model';\nimport { User } from './../models/User.model';\nimport { Assignment } from './../models/Assignment.model';\nimport { Rule } from './../models/Rule.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SubUser } from './../models/SubUser.model';\nimport { GraderResponse } from '../models/Response.model';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  tableNames: String[] = ['users','routes','chainings','attempts','assignments']\n\n  applicationHost:string =    \"/618985/api.php/\"; // `${window.location.href}/api.php/`; //\"http://localhost/\"; \n\n  constructor(private http: HttpClient) { }\n\n  post(url:string, data:any){\n    return this.http.post(url,data);\n  }\n\n  getLocal( data : any)\n  {\n    return this.http.get(this.applicationHost, { params: data });\n  }\n\n  postLocal( data : any)\n  {\n    return this.http.post(this.applicationHost, data);\n  }\n\n  //=============================================================================\n  //# COUNT SUMMARY\n  //=============================================================================\n  countAllRecords()\n  {\n    return Promise.all(\n      this.tableNames.map( tableName =>\n        new Promise((resolve,reject) =>\n          this.http.post(this.applicationHost,{ command : 'count', table : tableName  })\n          .subscribe(( fieldData: GraderResponse)=> {\n            resolve(fieldData.data.message);\n          },\n          err => {\n            reject(err)\n          })\n        )\n      )\n    )\n  }\n\n\n  //=============================================================================\n  //# USERS\n  //=============================================================================\n\n  login( userCredentials : LoginModel  )\n  {\n    return this.http.post(`${this.applicationHost}?command=auth`,userCredentials,{headers: {\"content-type\": \"application/json\"}} );\n  }\n\n  addUser( userData: User )\n  {\n    return this.http.post(`${this.applicationHost}?command=add&table=user`, userData,{headers: {\"content-type\": \"application/json\"}});\n  }\n\n  getUsers()\n  {\n    return this.http.get<GraderResponse>(`${this.applicationHost}?command=get&table=users`);\n  }\n\n  //=============================================================================\n  //# ASSIGNMENTS\n  //=============================================================================\n\n  addAssignment(assignmentData : Assignment)\n  {\n    assignmentData['assignment_due'] = new Date(parseInt(assignmentData['assignment_due']['year']),parseInt(assignmentData['assignment_due']['month']),parseInt(assignmentData['assignment_due']['day'])).toISOString();\n    return this.http.post(`${this.applicationHost}?command=add&table=assignment`, assignmentData, {headers: {\"content-type\": \"application/json\"}});\n  }\n\n  getAssignments(id?)\n  {\n    return this.http.get<GraderResponse>(`${this.applicationHost}?command=get&table=assignments${id?'&id='+id:''}`);\n  }\n\n  //=============================================================================\n  //# RULES\n  //=============================================================================\n  addRule( ruleData: Rule )\n  {\n    return this.http.post(`${this.applicationHost}?command=add&table=route`, ruleData, {headers: {\"content-type\": \"application/json\"}});\n  }\n\n  getRules(id?,isIdAssignment=false,grouped=false)\n  {\n    return this.http.get<GraderResponse>(`${this.applicationHost}?command=get&table=routes${id?'&id='+id+'&byAssignment='+isIdAssignment+'&grouped='+grouped:''}`);\n  }\n\n\n  //=============================================================================\n  //# CHAINING\n  //=============================================================================\n\n  addChaining(chaining: Chaining)\n  {\n    return this.http.post(`${this.applicationHost}?command=add&table=chaining`,chaining, {headers: {\"content-type\": \"application/json\"}});\n  }\n\n  getChaining()\n  {\n    return this.http.get<GraderResponse>(`${this.applicationHost}?command=get&table=chaining`);\n  }\n\n\n  //=============================================================================\n  //# ATTEMPTS\n  //=============================================================================\n\n  addAttempt( attempt: Attempts )\n  {\n    return this.http.post(`${this.applicationHost}?command=add&table=attempt`,attempt,{headers: {\"content-type\": \"application/json\"}});\n  }\n\n  getAttempts(assignment?,id?)\n  {\n    return this.http.get<GraderResponse>(`${this.applicationHost}?command=get&table=attempts${assignment?'&assignment='+assignment:''}${id?'&id='+id:''}`);\n  }\n\n\n  //=============================================================================\n  //# GRADING\n  //=============================================================================\n  doGrading ( referenceObject: any )\n  {\n    return this.http.post<GraderResponse>(`${this.applicationHost}?command=grade`,referenceObject,{headers: {\"content-type\": \"application/json\"}});\n  }\n\n}\n","import { StatusCode } from './../models/StatusCode.model';\nimport { MimeType } from './../models/MimeType.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class StaticDataService {\n\nprivate mime_types : MimeType[] = [{\"extension\":\".abw\",\"description\":\"AbiWord document\",\"mime\":\"application/x-abiword\"},{\"extension\":\".arc\",\"description\":\"Archive document (multiple files embedded)\",\"mime\":\"application/x-freearc\"},{\"extension\":\".avi\",\"description\":\"AVI: Audio Video Interleave\",\"mime\":\"video/x-msvideo\"},{\"extension\":\".azw\",\"description\":\"Amazon Kindle eBook format\",\"mime\":\"application/vnd.amazon.ebook\"},{\"extension\":\".bin\",\"description\":\"Any kind of binary data\",\"mime\":\"application/octet-stream\"},{\"extension\":\".bmp\",\"description\":\"Windows OS/2 Bitmap Graphics\",\"mime\":\"image/bmp\"},{\"extension\":\".bz\",\"description\":\"BZip archive\",\"mime\":\"application/x-bzip\"},{\"extension\":\".bz2\",\"description\":\"BZip2 archive\",\"mime\":\"application/x-bzip2\"},{\"extension\":\".csh\",\"description\":\"C-Shell script\",\"mime\":\"application/x-csh\"},{\"extension\":\".css\",\"description\":\"Cascading Style Sheets (CSS)\",\"mime\":\"text/css\"},{\"extension\":\".csv\",\"description\":\"Comma-separated values (CSV)\",\"mime\":\"text/csv\"},{\"extension\":\".doc\",\"description\":\"Microsoft Word\",\"mime\":\"application/msword\"},{\"extension\":\".docx\",\"description\":\"Microsoft Word (OpenXML)\",\"mime\":\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"},{\"extension\":\".eot\",\"description\":\"MS Embedded OpenType fonts\",\"mime\":\"application/vnd.ms-fontobject\"},{\"extension\":\".epub\",\"description\":\"Electronic publication (EPUB)\",\"mime\":\"application/epub+zip\"},{\"extension\":\".gz\",\"description\":\"GZip Compressed Archive\",\"mime\":\"application/gzip\"},{\"extension\":\".gif\",\"description\":\"Graphics Interchange Format (GIF)\",\"mime\":\"image/gif\"},{\"extension\":\".html\",\"description\":\"HyperText Markup Language (HTML)\",\"mime\":\"text/html\"},{\"extension\":\".ico\",\"description\":\"Icon format\",\"mime\":\"image/vnd.microsoft.icon\"},{\"extension\":\".ics\",\"description\":\"iCalendar format\",\"mime\":\"text/calendar\"},{\"extension\":\".jar\",\"description\":\"Java Archive (JAR)\",\"mime\":\"application/java-archive\"},{\"extension\":\".jpg\",\"description\":\"JPEG images\",\"mime\":\"image/jpeg\"},{\"extension\":\".json\",\"description\":\"JSON format\",\"mime\":\"application/json\"},{\"extension\":\".jsonld\",\"description\":\"JSON-LD format\",\"mime\":\"application/ld+json\"},{\"extension\":\".midi\",\"description\":\"Musical Instrument Digital Interface (MIDI)\",\"mime\":\"audio/midi audio/x-midi\"},{\"extension\":\".mjs\",\"description\":\"JavaScript module\",\"mime\":\"text/javascript\"},{\"extension\":\".mp3\",\"description\":\"MP3 audio\",\"mime\":\"audio/mpeg\"},{\"extension\":\".mpeg\",\"description\":\"MPEG Video\",\"mime\":\"video/mpeg\"},{\"extension\":\".mpkg\",\"description\":\"Apple Installer Package\",\"mime\":\"application/vnd.apple.installer+xml\"},{\"extension\":\".odp\",\"description\":\"OpenDocument presentation document\",\"mime\":\"application/vnd.oasis.opendocument.presentation\"},{\"extension\":\".ods\",\"description\":\"OpenDocument spreadsheet document\",\"mime\":\"application/vnd.oasis.opendocument.spreadsheet\"},{\"extension\":\".odt\",\"description\":\"OpenDocument text document\",\"mime\":\"application/vnd.oasis.opendocument.text\"},{\"extension\":\".oga\",\"description\":\"OGG audio\",\"mime\":\"audio/ogg\"},{\"extension\":\".ogv\",\"description\":\"OGG video\",\"mime\":\"video/ogg\"},{\"extension\":\".ogx\",\"description\":\"OGG\",\"mime\":\"application/ogg\"},{\"extension\":\".opus\",\"description\":\"Opus audio\",\"mime\":\"audio/opus\"},{\"extension\":\".otf\",\"description\":\"OpenType font\",\"mime\":\"font/otf\"},{\"extension\":\".png\",\"description\":\"Portable Network Graphics\",\"mime\":\"image/png\"},{\"extension\":\".pdf\",\"description\":\"Adobe Portable Document Format (PDF)\",\"mime\":\"application/pdf\"},{\"extension\":\".php\",\"description\":\"Hypertext Preprocessor (Personal Home Page)\",\"mime\":\"application/x-httpd-php\"},{\"extension\":\".ppt\",\"description\":\"Microsoft PowerPoint\",\"mime\":\"application/vnd.ms-powerpoint\"},{\"extension\":\".pptx\",\"description\":\"Microsoft PowerPoint (OpenXML)\",\"mime\":\"application/vnd.openxmlformats-officedocument.presentationml.presentation\"},{\"extension\":\".rar\",\"description\":\"RAR archive\",\"mime\":\"application/vnd.rar\"},{\"extension\":\".rtf\",\"description\":\"Rich Text Format (RTF)\",\"mime\":\"application/rtf\"},{\"extension\":\".sh\",\"description\":\"Bourne shell script\",\"mime\":\"application/x-sh\"},{\"extension\":\".svg\",\"description\":\"Scalable Vector Graphics (SVG)\",\"mime\":\"image/svg+xml\"},{\"extension\":\".swf\",\"description\":\"Small web format (SWF) or Adobe Flash document\",\"mime\":\"application/x-shockwave-flash\"},{\"extension\":\".tar\",\"description\":\"Tape Archive (TAR)\",\"mime\":\"application/x-tar\"},{\"extension\":\".tiff\",\"description\":\"Tagged Image File Format (TIFF)\",\"mime\":\"image/tiff\"},{\"extension\":\".ts\",\"description\":\"MPEG transport stream\",\"mime\":\"video/mp2t\"},{\"extension\":\".ttf\",\"description\":\"TrueType Font\",\"mime\":\"font/ttf\"},{\"extension\":\".txt\",\"description\":\"Text, (generally ASCII or ISO 8859-n)\",\"mime\":\"text/plain\"},{\"extension\":\".vsd\",\"description\":\"Microsoft Visio\",\"mime\":\"application/vnd.visio\"},{\"extension\":\".wav\",\"description\":\"Waveform Audio Format\",\"mime\":\"audio/wav\"},{\"extension\":\".weba\",\"description\":\"WEBM audio\",\"mime\":\"audio/webm\"},{\"extension\":\".webm\",\"description\":\"WEBM video\",\"mime\":\"video/webm\"},{\"extension\":\".webp\",\"description\":\"WEBP image\",\"mime\":\"image/webp\"},{\"extension\":\".woff\",\"description\":\"Web Open Font Format (WOFF)\",\"mime\":\"font/woff\"},{\"extension\":\".woff2\",\"description\":\"Web Open Font Format (WOFF)\",\"mime\":\"font/woff2\"},{\"extension\":\".xhtml\",\"description\":\"XHTML\",\"mime\":\"application/xhtml+xml\"},{\"extension\":\".xls\",\"description\":\"Microsoft Excel\",\"mime\":\"application/vnd.ms-excel\"},{\"extension\":\".xlsx\",\"description\":\"Microsoft Excel (OpenXML)\",\"mime\":\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"},{\"extension\":\".xml\",\"description\":\"XML\",\"mime\":\"application/xml if not readable from casual users (RFC 3023, section 3)\"},{\"extension\":\".xul\",\"description\":\"XUL\",\"mime\":\"application/vnd.mozilla.xul+xml\"},{\"extension\":\".zip\",\"description\":\"ZIP archive\",\"mime\":\"application/zip\"},{\"extension\":\".3gp\",\"description\":\"3GPP audio/video container\",\"mime\":\"video/3gpp\"},{\"extension\":\".3g2\",\"description\":\"3GPP2 audio/video container\",\"mime\":\"video/3gpp2\"},{\"extension\":\".7z\",\"description\":\"7-zip archive\",\"mime\":\"application/x-7z-compressed\"}];\n\nprivate headers = [\"A-IM\",\"Accept\",\"Accept-Charset\",\"Accept-Datetime\",\"Accept-Encoding\",\"Accept-Language\",\"Accept-Ranges\",\"Access-Control-Allow-Credentials\",\"Access-Control-Allow-Methods\",\"Access-Control-Allow-Origin\",\"Access-Control-Expose-Headers\",\"Access-Control-Max-Age\",\"Access-Control-Request-Method\",\"Age\",\"Allow\",\"Authorization\",\"Cache-Control\",\"Connection\",\"Content-Encoding\",\"Content-Language\",\"Content-Length\",\"Content-Location\",\"Content-Range\",\"Content-Security-Policy\",\"Content-Type\",\"Cookie\",\"Date\",\"Delta-Base\",\"ETag\",\"Expect\",\"Expires\",\"Forwarded\",\"From\",\"Host\",\"IM\",\"If-Match\",\"If-Modified-Since\",\"If-None-Match\",\"If-Range\",\"If-Unmodified-Since\",\"Last-Modified\",\"Link\",\"Location\",\"Max-Forwards\",\"Permanent\",\"Pragma\",\"Proxy-Authenticate\",\"Proxy-Authorization\",\"Range\",\"Referer \",\"Refresh\",\"Retry-After\",\"Save-Data\",\"Server\",\"Set-Cookie\",\"Status\",\"Strict-Transport-Security\",\"TE\",\"Timing-Allow-Origin\",\"Tk\",\"Trailer\",\"Transfer-Encoding\",\"Upgrade\",\"User-Agent\",\"Vary\",\"Via\",\"WWW-Authenticate\",\"Warning\",\"X-Content-Security-Policy\",\"X-Request-ID\",\"X-Requested-With\"];\n\nprivate status_codes = [{\"code\":100,\"description\":\" Continue\"},{\"code\":101,\"description\":\" Switching Protocols\"},{\"code\":102,\"description\":\" Processing\"},{\"code\":200,\"description\":\" OK\"},{\"code\":201,\"description\":\" Created\"},{\"code\":202,\"description\":\" Accepted\"},{\"code\":203,\"description\":\" Non-authoritative Information\"},{\"code\":204,\"description\":\" No Content\"},{\"code\":205,\"description\":\" Reset Content\"},{\"code\":206,\"description\":\" Partial Content\"},{\"code\":207,\"description\":\" Multi-Status\"},{\"code\":208,\"description\":\" Already Reported\"},{\"code\":226,\"description\":\" IM Used\"},{\"code\":300,\"description\":\" Multiple Choices\"},{\"code\":301,\"description\":\" Moved Permanently\"},{\"code\":302,\"description\":\" Found\"},{\"code\":303,\"description\":\" See Other\"},{\"code\":304,\"description\":\" Not Modified\"},{\"code\":305,\"description\":\" Use Proxy\"},{\"code\":307,\"description\":\" Temporary Redirect\"},{\"code\":308,\"description\":\" Permanent Redirect\"},{\"code\":400,\"description\":\" Bad Request\"},{\"code\":401,\"description\":\" Unauthorized\"},{\"code\":402,\"description\":\" Payment Required\"},{\"code\":403,\"description\":\" Forbidden\"},{\"code\":404,\"description\":\" Not Found\"},{\"code\":405,\"description\":\" Method Not Allowed\"},{\"code\":406,\"description\":\" Not Acceptable\"},{\"code\":407,\"description\":\" Proxy Authentication Required\"},{\"code\":408,\"description\":\" Request Timeout\"},{\"code\":409,\"description\":\" Conflict\"},{\"code\":410,\"description\":\" Gone\"},{\"code\":411,\"description\":\" Length Required\"},{\"code\":412,\"description\":\" Precondition Failed\"},{\"code\":413,\"description\":\" Payload Too Large\"},{\"code\":414,\"description\":\" Request-URI Too Long\"},{\"code\":415,\"description\":\" Unsupported Media Type\"},{\"code\":416,\"description\":\" Requested Range Not Satisfiable\"},{\"code\":417,\"description\":\" Expectation Failed\"},{\"code\":418,\"description\":\" I'm a teapot\"},{\"code\":421,\"description\":\" Misdirected Request\"},{\"code\":422,\"description\":\" Unprocessable Entity\"},{\"code\":423,\"description\":\" Locked\"},{\"code\":424,\"description\":\" Failed Dependency\"},{\"code\":426,\"description\":\" Upgrade Required\"},{\"code\":428,\"description\":\" Precondition Required\"},{\"code\":429,\"description\":\" Too Many Requests\"},{\"code\":431,\"description\":\" Request Header Fields Too Large\"},{\"code\":444,\"description\":\" Connection Closed Without Response\"},{\"code\":451,\"description\":\" Unavailable For Legal Reasons\"},{\"code\":499,\"description\":\" Client Closed Request\"},{\"code\":500,\"description\":\" Internal Server Error\"},{\"code\":501,\"description\":\" Not Implemented\"},{\"code\":502,\"description\":\" Bad Gateway\"},{\"code\":503,\"description\":\" Service Unavailable\"},{\"code\":504,\"description\":\" Gateway Timeout\"},{\"code\":505,\"description\":\" HTTP Version Not Supported\"},{\"code\":506,\"description\":\" Variant Also Negotiates\"},{\"code\":507,\"description\":\" Insufficient Storage\"},{\"code\":508,\"description\":\" Loop Detected\"},{\"code\":510,\"description\":\" Not Extended\"},{\"code\":511,\"description\":\" Network Authentication Required\"},{\"code\":599,\"description\":\" Network Connect Timeout Error\"}];\n\nconstructor() { }\n\n  MimeTypes(): MimeType[]\n  {\n    return this.mime_types.slice();\n  }\n\n  Headers(): string[]{\n    return this.headers.slice();\n  }\n\n  StatusCodes() : StatusCode[]\n  {\n    return this.status_codes.slice();\n  }\n\n}\n","import { Rule } from './../../models/Rule.model';\nimport { Subject } from 'rxjs';\nimport { Assignment } from '../../models/Assignment.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssignmentStoreService {\n\n  assignmentUpdated:Subject<Assignment[]> = new Subject<Assignment[]>();\n\n  private current_assignments:Assignment[] = [\n  ];\n\n  constructor() { }\n\n  private registerChanges()\n  {\n    this.assignmentUpdated.next(this.getAssignments());\n  }\n\n  getAssignments ()\n  {\n    return this.current_assignments.slice();\n  }\n\n  addAssignment(assignment:Assignment){\n    this.current_assignments.push(assignment);\n    this.registerChanges();\n  }\n\n  // addAssignments(current_assignments:Assignment[])\n  // {\n  //    this.current_assignments.push(...current_assignments);\n  //    this.registerChanges();\n  // }\n\n  registerRoutes( routes: Rule[], id = undefined )\n  {\n    if(id)\n    {\n      this.current_assignments.filter(asg => asg.assignment_id == id)[0].routes = routes;\n    } \n    else\n    {\n      this.current_assignments[0].routes = routes;\n    }\n  }\n\n}\n","import { Rule } from './../../models/Rule.model';\nimport { Subject } from 'rxjs';\nimport { Assignment } from '../../models/Assignment.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssignmentsStoreService {\n\n  assignmentsUpdated:Subject<Assignment[]> = new Subject<Assignment[]>();\n\n  private current_assignments:Assignment[] = [\n  ];\n\n  constructor() { }\n\n  private registerChanges()\n  {\n    this.assignmentsUpdated.next(this.getAssignments());\n  }\n\n  getAssignments ()\n  {\n    return this.current_assignments.slice();\n  }\n\n  addAssignment(assignment:Assignment){\n    this.current_assignments.push(assignment);\n    this.registerChanges();\n  }\n\n  // addAssignments(current_assignments:Assignment[])\n  // {\n  //    this.current_assignments.push(...current_assignments);\n  //    this.registerChanges();\n  // }\n\n  resetAssignments( assignments: Assignment[] )\n  {\n    this.current_assignments = assignments;\n    this.registerChanges();\n  }\n\n}\n","import { Attempts } from './../../models/Attempts.model';\nimport { Rule } from './../../models/Rule.model';\nimport { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttemptStoreService {\n\n  attemptsUpdated:Subject<Attempts[]> = new Subject<Attempts[]>();\n\n  private current_attempts:Attempts[] = [\n  ];\n\n  constructor() { }\n\n  private registerChanges()\n  {\n    this.attemptsUpdated.next(this.getAssignments());\n  }\n\n  getAssignments ()\n  {\n    return this.current_attempts.slice();\n  }\n\n  addAttempt(attempt:Attempts){\n    this.current_attempts.push(attempt);\n    this.registerChanges();\n  }\n\n  resetAttempts( attempts: Attempts[] )\n  {\n    this.current_attempts = attempts;\n    this.registerChanges();\n  }\n\n}\n","import { Chaining } from './../../models/Chaining.model';\nimport { Subject } from 'rxjs';\nimport { Assignment } from '../../models/Assignment.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChainingsStoreService {\n\n  chainingsUpdateWatcher:Subject<Chaining[]> = new Subject<Chaining[]>();\n\n  private current_chainings:Chaining[] = [\n  ];\n\n  constructor() { }\n\n  private registerChanges()\n  {\n    this.chainingsUpdateWatcher.next(this.getChainings());\n  }\n\n  getChainings ()\n  {\n    return this.current_chainings.slice();\n  }\n\n  addChaining(rule:Chaining){\n    this.current_chainings.push(rule);\n    this.registerChanges();\n  }\n  resetChainings( chainings: Chaining[] )\n  {\n    this.current_chainings = chainings;\n    this.registerChanges();\n  }\n\n}\n","import { Rule } from './../../models/Rule.model';\nimport { Subject } from 'rxjs';\nimport { Assignment } from '../../models/Assignment.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RulesStoreService {\n\n  rulesUpdateWatcher:Subject<Rule[]> = new Subject<Rule[]>();\n\n  private current_rules:Rule[] = [\n  ];\n\n  constructor() { }\n\n  private registerChanges()\n  {\n    this.rulesUpdateWatcher.next(this.getRules());\n  }\n\n  getRules ()\n  {\n    return this.current_rules.slice();\n  }\n\n  addRule(rule:Rule){\n    this.current_rules.push(rule);\n    this.registerChanges();\n  }\n  resetRules( rules: Rule[] )\n  {\n    this.current_rules = rules;\n    this.registerChanges();\n  }\n\n}\n","import { HttpService } from './../services/http.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'angular-2-local-storage';\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\n\n\nexport class UserLoginComponent implements OnInit {\n\n  loginForm : FormGroup;\n  registrationForm: FormGroup;\n\n  constructor(private http: HttpService, private _localStorage: LocalStorageService) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.authenticate();\n\n    //@ handle logins\n    this.loginForm = new FormGroup({\n      username  : new FormControl(\"\", [Validators.required, Validators.minLength(4)]),\n      password  : new FormControl(\"\", [Validators.required,Validators.minLength(4)])\n    });\n\n    //@ handle registrations\n    this.registrationForm = new FormGroup({\n      name  : new FormControl(\"\", Validators.required),\n      email  : new FormControl(\"\", Validators.required),\n      username  : new FormControl(\"\", [Validators.required, Validators.minLength(4)]),\n      password  : new FormControl(\"\", [Validators.required, Validators.minLength(4)]),\n      password_2 : new FormControl(\"\", [Validators.required, Validators.minLength(4)])\n    });\n\n\n  }\n\n  private clone (d:any = {}){\n    if (typeof d == \"string\") return {};\n    return JSON.parse(JSON.stringify(d));\n  }\n\n  private authenticate()\n  {\n    if(this._localStorage.get(\"auth\")!=undefined)\n    {\n      window.location.href = window.location.href.replace(/\\/auth/ig, '');\n    }\n  }\n\n  //@ Save the login credentials and perform the login hopping\n  private setAuthCrededentials( data: {response,data:{message,command}},   _localStorage: LocalStorageService )\n  {\n    if(data[\"response\"] == 200)\n    {\n      _localStorage.set(\"auth\",data.data.message);\n      this.authenticate();\n    }\n    else\n    {\n      alert(data.data.message);\n    }\n  }\n\n  registerUser(){\n\n    let newUser  = this.clone(this.registrationForm.value);\n    delete newUser.password_2;\n    this.http.addUser(newUser).subscribe((a:{response,data:{message,command}}) =>this.setAuthCrededentials(a,this._localStorage));\n  }\n\n  loginUser()\n  {\n    let userData  =  this.loginForm.value;\n   ;\n    this.http.login(userData).subscribe((a:{response,data:{message,command}}) =>this.setAuthCrededentials(a,this._localStorage));\n\n  }\n\n}\n","<div style=\"padding: 0px !important;margin: 0px !important;\" class=\"register\">\n    <div class=\"row card\">\n\n        <div class=\"col-md-12 register-right\">\n            <ul class=\"nav nav-tabs nav-justified\" id=\"myTab\" role=\"tablist\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" id=\"login-tab\" data-toggle=\"tab\" href=\"#login\" role=\"tab\" aria-controls=\"login\" aria-selected=\"true\">Login</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" id=\"registration-tab\" data-toggle=\"tab\" href=\"#registration\" role=\"tab\" aria-controls=\"registration\" aria-selected=\"false\">Register</a>\n                </li>\n            </ul>\n            <div class=\"tab-content \" id=\"myTabContent\">\n                <div class=\"tab-pane fade show active\" id=\"login\" role=\"tabpanel\" aria-labelledby=\"login-tab\">\n                    <br><br>\n                    <div class=\"row d-flex justify-content-center\">\n\n                        <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n\n                            <div class=\"col-md-8 col-8\">\n\n                                <div class=\"form-group\">\n                                    <input type=\"text\" formControlName=\"username\" class=\"form-control form-control-lg\" placeholder=\"Username/Email *\" value=\"\" />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password *\" value=\"\" />\n                                </div>\n\n                            </div>\n                            <div class=\"col-md-8 justify-content-center\">\n\n                                <input type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btn btn-lg btn-primary btn-block\" value=\"Login\" />\n                            </div>\n\n                        </form>\n\n                    </div>\n                    <br><br>\n                </div>\n                <div class=\"tab-pane fade show\" id=\"registration\" role=\"tabpanel\" aria-labelledby=\"registration-tab\">\n                    <br><br>\n                    <div class=\"row justify-content-center\">\n\n                        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"registerUser()\">\n\n                            <div class=\"col-md-8 col-8\">\n\n                                <div class=\"form-group\">\n                                    <input type=\"text\" formControlName=\"name\" class=\"form-control form-control-lg\" placeholder=\"Name *\" value=\"\" />\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <input type=\"email\" formControlName=\"email\" class=\"form-control form-control-lg\" placeholder=\"Email *\" value=\"\" />\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <input type=\"text\" formControlName=\"username\" class=\"form-control form-control-lg\" placeholder=\"Username *\" value=\"\" />\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password *\" value=\"\" />\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <input type=\"password\" formControlName=\"password_2\" class=\"form-control form-control-lg\" placeholder=\"Confirm Password *\" value=\"\" />\n                                </div>\n\n                            </div>\n\n                            <div class=\"col-md-8 justify-content-center\">\n\n                                <input type=\"submit\" [disabled]=\"!registrationForm.valid || ((registrationForm.value.password != registrationForm.value.password_2) || !registrationForm.value.password)\" class=\"btn btn-lg btn-primary btn-block \" value=\"Register\" />\n                            </div>\n\n                        </form>\n\n                    </div>\n                    <br><br>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}